/*
 * jvips, a Java implementation that interfaces to libvips
 *
 * Copyright (C) 2023 Jonathan Strauss
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * https://www.gnu.org/licenses/old-licenses/lgpl-2.1-standalone.html
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

// Generated by jextract

package org.libvips;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class LibVips_1 {

    public static MethodHandle vips_foreign_load_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$152.vips_foreign_load_invalidate$MH,"vips_foreign_load_invalidate");
    }
    public static void vips_foreign_load_invalidate ( Addressable image) {
        var mh$ = vips_foreign_load_invalidate$MH();
        try {
            mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_SAVEABLE_MONO() {
        return (int)0L;
    }
    public static int VIPS_SAVEABLE_RGB() {
        return (int)1L;
    }
    public static int VIPS_SAVEABLE_RGBA() {
        return (int)2L;
    }
    public static int VIPS_SAVEABLE_RGBA_ONLY() {
        return (int)3L;
    }
    public static int VIPS_SAVEABLE_RGB_CMYK() {
        return (int)4L;
    }
    public static int VIPS_SAVEABLE_ANY() {
        return (int)5L;
    }
    public static int VIPS_SAVEABLE_LAST() {
        return (int)6L;
    }
    public static MethodHandle vips_foreign_save_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$152.vips_foreign_save_get_type$MH,"vips_foreign_save_get_type");
    }
    public static long vips_foreign_save_get_type () {
        var mh$ = vips_foreign_save_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_find_save$MH() {
        return RuntimeHelper.requireNonNull(constants$152.vips_foreign_find_save$MH,"vips_foreign_find_save");
    }
    public static MemoryAddress vips_foreign_find_save ( Addressable filename) {
        var mh$ = vips_foreign_find_save$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_get_suffixes$MH() {
        return RuntimeHelper.requireNonNull(constants$152.vips_foreign_get_suffixes$MH,"vips_foreign_get_suffixes");
    }
    public static MemoryAddress vips_foreign_get_suffixes () {
        var mh$ = vips_foreign_get_suffixes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_find_save_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$152.vips_foreign_find_save_buffer$MH,"vips_foreign_find_save_buffer");
    }
    public static MemoryAddress vips_foreign_find_save_buffer ( Addressable suffix) {
        var mh$ = vips_foreign_find_save_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(suffix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_find_save_target$MH() {
        return RuntimeHelper.requireNonNull(constants$152.vips_foreign_find_save_target$MH,"vips_foreign_find_save_target");
    }
    public static MemoryAddress vips_foreign_find_save_target ( Addressable suffix) {
        var mh$ = vips_foreign_find_save_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(suffix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_vipsload$MH() {
        return RuntimeHelper.requireNonNull(constants$153.vips_vipsload$MH,"vips_vipsload");
    }
    public static int vips_vipsload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_vipsload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_vipsload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$153.vips_vipsload_source$MH,"vips_vipsload_source");
    }
    public static int vips_vipsload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_vipsload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_vipssave$MH() {
        return RuntimeHelper.requireNonNull(constants$153.vips_vipssave$MH,"vips_vipssave");
    }
    public static int vips_vipssave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_vipssave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_vipssave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$153.vips_vipssave_target$MH,"vips_vipssave_target");
    }
    public static int vips_vipssave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_vipssave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_openslideload$MH() {
        return RuntimeHelper.requireNonNull(constants$153.vips_openslideload$MH,"vips_openslideload");
    }
    public static int vips_openslideload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_openslideload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_openslideload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$153.vips_openslideload_source$MH,"vips_openslideload_source");
    }
    public static int vips_openslideload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_openslideload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_FOREIGN_SUBSAMPLE_AUTO() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_SUBSAMPLE_ON() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_SUBSAMPLE_OFF() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_SUBSAMPLE_LAST() {
        return (int)3L;
    }
    public static int VIPS_FOREIGN_JPEG_SUBSAMPLE_AUTO() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_JPEG_SUBSAMPLE_ON() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_JPEG_SUBSAMPLE_OFF() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_JPEG_SUBSAMPLE_LAST() {
        return (int)3L;
    }
    public static MethodHandle vips_jpegload$MH() {
        return RuntimeHelper.requireNonNull(constants$154.vips_jpegload$MH,"vips_jpegload");
    }
    public static int vips_jpegload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_jpegload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jpegload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$154.vips_jpegload_buffer$MH,"vips_jpegload_buffer");
    }
    public static int vips_jpegload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_jpegload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jpegload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$154.vips_jpegload_source$MH,"vips_jpegload_source");
    }
    public static int vips_jpegload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_jpegload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jpegsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$154.vips_jpegsave_target$MH,"vips_jpegsave_target");
    }
    public static int vips_jpegsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_jpegsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jpegsave$MH() {
        return RuntimeHelper.requireNonNull(constants$154.vips_jpegsave$MH,"vips_jpegsave");
    }
    public static int vips_jpegsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_jpegsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jpegsave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$154.vips_jpegsave_buffer$MH,"vips_jpegsave_buffer");
    }
    public static int vips_jpegsave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_jpegsave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jpegsave_mime$MH() {
        return RuntimeHelper.requireNonNull(constants$155.vips_jpegsave_mime$MH,"vips_jpegsave_mime");
    }
    public static int vips_jpegsave_mime ( Addressable in, Object... x1) {
        var mh$ = vips_jpegsave_mime$MH();
        try {
            return (int)mh$.invokeExact(in, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_FOREIGN_WEBP_PRESET_DEFAULT() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_WEBP_PRESET_PICTURE() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_WEBP_PRESET_PHOTO() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_WEBP_PRESET_DRAWING() {
        return (int)3L;
    }
    public static int VIPS_FOREIGN_WEBP_PRESET_ICON() {
        return (int)4L;
    }
    public static int VIPS_FOREIGN_WEBP_PRESET_TEXT() {
        return (int)5L;
    }
    public static int VIPS_FOREIGN_WEBP_PRESET_LAST() {
        return (int)6L;
    }
    public static MethodHandle vips_webpload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$155.vips_webpload_source$MH,"vips_webpload_source");
    }
    public static int vips_webpload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_webpload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_webpload$MH() {
        return RuntimeHelper.requireNonNull(constants$155.vips_webpload$MH,"vips_webpload");
    }
    public static int vips_webpload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_webpload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_webpload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$155.vips_webpload_buffer$MH,"vips_webpload_buffer");
    }
    public static int vips_webpload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_webpload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_webpsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$155.vips_webpsave_target$MH,"vips_webpsave_target");
    }
    public static int vips_webpsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_webpsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_webpsave$MH() {
        return RuntimeHelper.requireNonNull(constants$155.vips_webpsave$MH,"vips_webpsave");
    }
    public static int vips_webpsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_webpsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_webpsave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$156.vips_webpsave_buffer$MH,"vips_webpsave_buffer");
    }
    public static int vips_webpsave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_webpsave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_webpsave_mime$MH() {
        return RuntimeHelper.requireNonNull(constants$156.vips_webpsave_mime$MH,"vips_webpsave_mime");
    }
    public static int vips_webpsave_mime ( Addressable in, Object... x1) {
        var mh$ = vips_webpsave_mime$MH();
        try {
            return (int)mh$.invokeExact(in, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_NONE() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_JPEG() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_DEFLATE() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_PACKBITS() {
        return (int)3L;
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_CCITTFAX4() {
        return (int)4L;
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_LZW() {
        return (int)5L;
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_WEBP() {
        return (int)6L;
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_ZSTD() {
        return (int)7L;
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_JP2K() {
        return (int)8L;
    }
    public static int VIPS_FOREIGN_TIFF_COMPRESSION_LAST() {
        return (int)9L;
    }
    public static int VIPS_FOREIGN_TIFF_PREDICTOR_NONE() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_TIFF_PREDICTOR_HORIZONTAL() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_TIFF_PREDICTOR_FLOAT() {
        return (int)3L;
    }
    public static int VIPS_FOREIGN_TIFF_PREDICTOR_LAST() {
        return (int)4L;
    }
    public static int VIPS_FOREIGN_TIFF_RESUNIT_CM() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_TIFF_RESUNIT_INCH() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_TIFF_RESUNIT_LAST() {
        return (int)2L;
    }
    public static MethodHandle vips_tiffload$MH() {
        return RuntimeHelper.requireNonNull(constants$156.vips_tiffload$MH,"vips_tiffload");
    }
    public static int vips_tiffload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_tiffload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tiffload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$156.vips_tiffload_buffer$MH,"vips_tiffload_buffer");
    }
    public static int vips_tiffload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_tiffload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tiffload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$156.vips_tiffload_source$MH,"vips_tiffload_source");
    }
    public static int vips_tiffload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_tiffload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tiffsave$MH() {
        return RuntimeHelper.requireNonNull(constants$156.vips_tiffsave$MH,"vips_tiffsave");
    }
    public static int vips_tiffsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_tiffsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tiffsave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$157.vips_tiffsave_buffer$MH,"vips_tiffsave_buffer");
    }
    public static int vips_tiffsave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_tiffsave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tiffsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$157.vips_tiffsave_target$MH,"vips_tiffsave_target");
    }
    public static int vips_tiffsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_tiffsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_openexrload$MH() {
        return RuntimeHelper.requireNonNull(constants$157.vips_openexrload$MH,"vips_openexrload");
    }
    public static int vips_openexrload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_openexrload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_fitsload$MH() {
        return RuntimeHelper.requireNonNull(constants$157.vips_fitsload$MH,"vips_fitsload");
    }
    public static int vips_fitsload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_fitsload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_fitssave$MH() {
        return RuntimeHelper.requireNonNull(constants$157.vips_fitssave$MH,"vips_fitssave");
    }
    public static int vips_fitssave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_fitssave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_analyzeload$MH() {
        return RuntimeHelper.requireNonNull(constants$157.vips_analyzeload$MH,"vips_analyzeload");
    }
    public static int vips_analyzeload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_analyzeload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rawload$MH() {
        return RuntimeHelper.requireNonNull(constants$158.vips_rawload$MH,"vips_rawload");
    }
    public static int vips_rawload ( Addressable filename,  Addressable out,  int width,  int height,  int bands, Object... x5) {
        var mh$ = vips_rawload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, width, height, bands, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rawsave$MH() {
        return RuntimeHelper.requireNonNull(constants$158.vips_rawsave$MH,"vips_rawsave");
    }
    public static int vips_rawsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_rawsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rawsave_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$158.vips_rawsave_fd$MH,"vips_rawsave_fd");
    }
    public static int vips_rawsave_fd ( Addressable in,  int fd, Object... x2) {
        var mh$ = vips_rawsave_fd$MH();
        try {
            return (int)mh$.invokeExact(in, fd, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_csvload$MH() {
        return RuntimeHelper.requireNonNull(constants$158.vips_csvload$MH,"vips_csvload");
    }
    public static int vips_csvload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_csvload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_csvload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$158.vips_csvload_source$MH,"vips_csvload_source");
    }
    public static int vips_csvload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_csvload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_csvsave$MH() {
        return RuntimeHelper.requireNonNull(constants$158.vips_csvsave$MH,"vips_csvsave");
    }
    public static int vips_csvsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_csvsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_csvsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$159.vips_csvsave_target$MH,"vips_csvsave_target");
    }
    public static int vips_csvsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_csvsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_matrixload$MH() {
        return RuntimeHelper.requireNonNull(constants$159.vips_matrixload$MH,"vips_matrixload");
    }
    public static int vips_matrixload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_matrixload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_matrixload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$159.vips_matrixload_source$MH,"vips_matrixload_source");
    }
    public static int vips_matrixload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_matrixload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_matrixsave$MH() {
        return RuntimeHelper.requireNonNull(constants$159.vips_matrixsave$MH,"vips_matrixsave");
    }
    public static int vips_matrixsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_matrixsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_matrixsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$159.vips_matrixsave_target$MH,"vips_matrixsave_target");
    }
    public static int vips_matrixsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_matrixsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_matrixprint$MH() {
        return RuntimeHelper.requireNonNull(constants$159.vips_matrixprint$MH,"vips_matrixprint");
    }
    public static int vips_matrixprint ( Addressable in, Object... x1) {
        var mh$ = vips_matrixprint$MH();
        try {
            return (int)mh$.invokeExact(in, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_magickload$MH() {
        return RuntimeHelper.requireNonNull(constants$160.vips_magickload$MH,"vips_magickload");
    }
    public static int vips_magickload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_magickload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_magickload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$160.vips_magickload_buffer$MH,"vips_magickload_buffer");
    }
    public static int vips_magickload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_magickload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_magicksave$MH() {
        return RuntimeHelper.requireNonNull(constants$160.vips_magicksave$MH,"vips_magicksave");
    }
    public static int vips_magicksave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_magicksave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_magicksave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$160.vips_magicksave_buffer$MH,"vips_magicksave_buffer");
    }
    public static int vips_magicksave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_magicksave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_FOREIGN_PNG_FILTER_NONE() {
        return (int)8L;
    }
    public static int VIPS_FOREIGN_PNG_FILTER_SUB() {
        return (int)16L;
    }
    public static int VIPS_FOREIGN_PNG_FILTER_UP() {
        return (int)32L;
    }
    public static int VIPS_FOREIGN_PNG_FILTER_AVG() {
        return (int)64L;
    }
    public static int VIPS_FOREIGN_PNG_FILTER_PAETH() {
        return (int)128L;
    }
    public static int VIPS_FOREIGN_PNG_FILTER_ALL() {
        return (int)248L;
    }
    public static MethodHandle vips_pngload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$160.vips_pngload_source$MH,"vips_pngload_source");
    }
    public static int vips_pngload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_pngload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pngload$MH() {
        return RuntimeHelper.requireNonNull(constants$160.vips_pngload$MH,"vips_pngload");
    }
    public static int vips_pngload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_pngload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pngload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$161.vips_pngload_buffer$MH,"vips_pngload_buffer");
    }
    public static int vips_pngload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_pngload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pngsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$161.vips_pngsave_target$MH,"vips_pngsave_target");
    }
    public static int vips_pngsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_pngsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pngsave$MH() {
        return RuntimeHelper.requireNonNull(constants$161.vips_pngsave$MH,"vips_pngsave");
    }
    public static int vips_pngsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_pngsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pngsave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$161.vips_pngsave_buffer$MH,"vips_pngsave_buffer");
    }
    public static int vips_pngsave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_pngsave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_FOREIGN_PPM_FORMAT_PBM() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_PPM_FORMAT_PGM() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_PPM_FORMAT_PPM() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_PPM_FORMAT_PFM() {
        return (int)3L;
    }
    public static int VIPS_FOREIGN_PPM_FORMAT_PNM() {
        return (int)4L;
    }
    public static int VIPS_FOREIGN_PPM_FORMAT_LAST() {
        return (int)5L;
    }
    public static MethodHandle vips_ppmload$MH() {
        return RuntimeHelper.requireNonNull(constants$161.vips_ppmload$MH,"vips_ppmload");
    }
    public static int vips_ppmload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_ppmload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ppmload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$161.vips_ppmload_source$MH,"vips_ppmload_source");
    }
    public static int vips_ppmload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_ppmload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ppmsave$MH() {
        return RuntimeHelper.requireNonNull(constants$162.vips_ppmsave$MH,"vips_ppmsave");
    }
    public static int vips_ppmsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_ppmsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ppmsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$162.vips_ppmsave_target$MH,"vips_ppmsave_target");
    }
    public static int vips_ppmsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_ppmsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_matload$MH() {
        return RuntimeHelper.requireNonNull(constants$162.vips_matload$MH,"vips_matload");
    }
    public static int vips_matload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_matload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_radload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$162.vips_radload_source$MH,"vips_radload_source");
    }
    public static int vips_radload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_radload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_radload$MH() {
        return RuntimeHelper.requireNonNull(constants$162.vips_radload$MH,"vips_radload");
    }
    public static int vips_radload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_radload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_radload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$162.vips_radload_buffer$MH,"vips_radload_buffer");
    }
    public static int vips_radload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_radload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_radsave$MH() {
        return RuntimeHelper.requireNonNull(constants$163.vips_radsave$MH,"vips_radsave");
    }
    public static int vips_radsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_radsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_radsave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$163.vips_radsave_buffer$MH,"vips_radsave_buffer");
    }
    public static int vips_radsave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_radsave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_radsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$163.vips_radsave_target$MH,"vips_radsave_target");
    }
    public static int vips_radsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_radsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pdfload$MH() {
        return RuntimeHelper.requireNonNull(constants$163.vips_pdfload$MH,"vips_pdfload");
    }
    public static int vips_pdfload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_pdfload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pdfload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$163.vips_pdfload_buffer$MH,"vips_pdfload_buffer");
    }
    public static int vips_pdfload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_pdfload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pdfload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$163.vips_pdfload_source$MH,"vips_pdfload_source");
    }
    public static int vips_pdfload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_pdfload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_svgload$MH() {
        return RuntimeHelper.requireNonNull(constants$164.vips_svgload$MH,"vips_svgload");
    }
    public static int vips_svgload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_svgload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_svgload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$164.vips_svgload_buffer$MH,"vips_svgload_buffer");
    }
    public static int vips_svgload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_svgload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_svgload_string$MH() {
        return RuntimeHelper.requireNonNull(constants$164.vips_svgload_string$MH,"vips_svgload_string");
    }
    public static int vips_svgload_string ( Addressable str,  Addressable out, Object... x2) {
        var mh$ = vips_svgload_string$MH();
        try {
            return (int)mh$.invokeExact(str, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_svgload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$164.vips_svgload_source$MH,"vips_svgload_source");
    }
    public static int vips_svgload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_svgload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gifload$MH() {
        return RuntimeHelper.requireNonNull(constants$164.vips_gifload$MH,"vips_gifload");
    }
    public static int vips_gifload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_gifload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gifload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$164.vips_gifload_buffer$MH,"vips_gifload_buffer");
    }
    public static int vips_gifload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_gifload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gifload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$165.vips_gifload_source$MH,"vips_gifload_source");
    }
    public static int vips_gifload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_gifload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gifsave$MH() {
        return RuntimeHelper.requireNonNull(constants$165.vips_gifsave$MH,"vips_gifsave");
    }
    public static int vips_gifsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_gifsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gifsave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$165.vips_gifsave_buffer$MH,"vips_gifsave_buffer");
    }
    public static int vips_gifsave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_gifsave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gifsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$165.vips_gifsave_target$MH,"vips_gifsave_target");
    }
    public static int vips_gifsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_gifsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_heifload$MH() {
        return RuntimeHelper.requireNonNull(constants$165.vips_heifload$MH,"vips_heifload");
    }
    public static int vips_heifload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_heifload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_heifload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$165.vips_heifload_buffer$MH,"vips_heifload_buffer");
    }
    public static int vips_heifload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_heifload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_heifload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$166.vips_heifload_source$MH,"vips_heifload_source");
    }
    public static int vips_heifload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_heifload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_heifsave$MH() {
        return RuntimeHelper.requireNonNull(constants$166.vips_heifsave$MH,"vips_heifsave");
    }
    public static int vips_heifsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_heifsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_heifsave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$166.vips_heifsave_buffer$MH,"vips_heifsave_buffer");
    }
    public static int vips_heifsave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_heifsave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_heifsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$166.vips_heifsave_target$MH,"vips_heifsave_target");
    }
    public static int vips_heifsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_heifsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_niftiload$MH() {
        return RuntimeHelper.requireNonNull(constants$166.vips_niftiload$MH,"vips_niftiload");
    }
    public static int vips_niftiload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_niftiload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_niftiload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$166.vips_niftiload_source$MH,"vips_niftiload_source");
    }
    public static int vips_niftiload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_niftiload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_niftisave$MH() {
        return RuntimeHelper.requireNonNull(constants$167.vips_niftisave$MH,"vips_niftisave");
    }
    public static int vips_niftisave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_niftisave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jp2kload$MH() {
        return RuntimeHelper.requireNonNull(constants$167.vips_jp2kload$MH,"vips_jp2kload");
    }
    public static int vips_jp2kload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_jp2kload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jp2kload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$167.vips_jp2kload_buffer$MH,"vips_jp2kload_buffer");
    }
    public static int vips_jp2kload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_jp2kload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jp2kload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$167.vips_jp2kload_source$MH,"vips_jp2kload_source");
    }
    public static int vips_jp2kload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_jp2kload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jp2ksave$MH() {
        return RuntimeHelper.requireNonNull(constants$167.vips_jp2ksave$MH,"vips_jp2ksave");
    }
    public static int vips_jp2ksave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_jp2ksave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jp2ksave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$167.vips_jp2ksave_buffer$MH,"vips_jp2ksave_buffer");
    }
    public static int vips_jp2ksave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_jp2ksave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jp2ksave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$168.vips_jp2ksave_target$MH,"vips_jp2ksave_target");
    }
    public static int vips_jp2ksave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_jp2ksave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jxlload_source$MH() {
        return RuntimeHelper.requireNonNull(constants$168.vips_jxlload_source$MH,"vips_jxlload_source");
    }
    public static int vips_jxlload_source ( Addressable source,  Addressable out, Object... x2) {
        var mh$ = vips_jxlload_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jxlload_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$168.vips_jxlload_buffer$MH,"vips_jxlload_buffer");
    }
    public static int vips_jxlload_buffer ( Addressable buf,  long len,  Addressable out, Object... x3) {
        var mh$ = vips_jxlload_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jxlload$MH() {
        return RuntimeHelper.requireNonNull(constants$168.vips_jxlload$MH,"vips_jxlload");
    }
    public static int vips_jxlload ( Addressable filename,  Addressable out, Object... x2) {
        var mh$ = vips_jxlload$MH();
        try {
            return (int)mh$.invokeExact(filename, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jxlsave$MH() {
        return RuntimeHelper.requireNonNull(constants$168.vips_jxlsave$MH,"vips_jxlsave");
    }
    public static int vips_jxlsave ( Addressable in,  Addressable filename, Object... x2) {
        var mh$ = vips_jxlsave$MH();
        try {
            return (int)mh$.invokeExact(in, filename, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jxlsave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$168.vips_jxlsave_buffer$MH,"vips_jxlsave_buffer");
    }
    public static int vips_jxlsave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_jxlsave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_jxlsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$169.vips_jxlsave_target$MH,"vips_jxlsave_target");
    }
    public static int vips_jxlsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_jxlsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_FOREIGN_DZ_LAYOUT_DZ() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_DZ_LAYOUT_ZOOMIFY() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_DZ_LAYOUT_GOOGLE() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_DZ_LAYOUT_IIIF() {
        return (int)3L;
    }
    public static int VIPS_FOREIGN_DZ_LAYOUT_IIIF3() {
        return (int)4L;
    }
    public static int VIPS_FOREIGN_DZ_LAYOUT_LAST() {
        return (int)5L;
    }
    public static int VIPS_FOREIGN_DZ_DEPTH_ONEPIXEL() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_DZ_DEPTH_ONETILE() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_DZ_DEPTH_ONE() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_DZ_DEPTH_LAST() {
        return (int)3L;
    }
    public static int VIPS_FOREIGN_DZ_CONTAINER_FS() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_DZ_CONTAINER_ZIP() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_DZ_CONTAINER_SZI() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_DZ_CONTAINER_LAST() {
        return (int)3L;
    }
    public static MethodHandle vips_dzsave$MH() {
        return RuntimeHelper.requireNonNull(constants$169.vips_dzsave$MH,"vips_dzsave");
    }
    public static int vips_dzsave ( Addressable in,  Addressable name, Object... x2) {
        var mh$ = vips_dzsave$MH();
        try {
            return (int)mh$.invokeExact(in, name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dzsave_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$169.vips_dzsave_buffer$MH,"vips_dzsave_buffer");
    }
    public static int vips_dzsave_buffer ( Addressable in,  Addressable buf,  Addressable len, Object... x3) {
        var mh$ = vips_dzsave_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, buf, len, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dzsave_target$MH() {
        return RuntimeHelper.requireNonNull(constants$169.vips_dzsave_target$MH,"vips_dzsave_target");
    }
    public static int vips_dzsave_target ( Addressable in,  Addressable target, Object... x2) {
        var mh$ = vips_dzsave_target$MH();
        try {
            return (int)mh$.invokeExact(in, target, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_FOREIGN_HEIF_COMPRESSION_HEVC() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_HEIF_COMPRESSION_AVC() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_HEIF_COMPRESSION_JPEG() {
        return (int)3L;
    }
    public static int VIPS_FOREIGN_HEIF_COMPRESSION_AV1() {
        return (int)4L;
    }
    public static int VIPS_FOREIGN_HEIF_COMPRESSION_LAST() {
        return (int)5L;
    }
    public static int VIPS_FOREIGN_HEIF_ENCODER_AUTO() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_HEIF_ENCODER_AOM() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_HEIF_ENCODER_RAV1E() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_HEIF_ENCODER_SVT() {
        return (int)3L;
    }
    public static int VIPS_FOREIGN_HEIF_ENCODER_X265() {
        return (int)4L;
    }
    public static int VIPS_FOREIGN_HEIF_ENCODER_LAST() {
        return (int)5L;
    }
    public static MethodHandle vips_operation_math_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$169.vips_operation_math_get_type$MH,"vips_operation_math_get_type");
    }
    public static long vips_operation_math_get_type () {
        var mh$ = vips_operation_math_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_math2_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$169.vips_operation_math2_get_type$MH,"vips_operation_math2_get_type");
    }
    public static long vips_operation_math2_get_type () {
        var mh$ = vips_operation_math2_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_round_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$170.vips_operation_round_get_type$MH,"vips_operation_round_get_type");
    }
    public static long vips_operation_round_get_type () {
        var mh$ = vips_operation_round_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_relational_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$170.vips_operation_relational_get_type$MH,"vips_operation_relational_get_type");
    }
    public static long vips_operation_relational_get_type () {
        var mh$ = vips_operation_relational_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_boolean_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$170.vips_operation_boolean_get_type$MH,"vips_operation_boolean_get_type");
    }
    public static long vips_operation_boolean_get_type () {
        var mh$ = vips_operation_boolean_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_complex_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$170.vips_operation_complex_get_type$MH,"vips_operation_complex_get_type");
    }
    public static long vips_operation_complex_get_type () {
        var mh$ = vips_operation_complex_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_complex2_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$170.vips_operation_complex2_get_type$MH,"vips_operation_complex2_get_type");
    }
    public static long vips_operation_complex2_get_type () {
        var mh$ = vips_operation_complex2_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_complexget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$170.vips_operation_complexget_get_type$MH,"vips_operation_complexget_get_type");
    }
    public static long vips_operation_complexget_get_type () {
        var mh$ = vips_operation_complexget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_precision_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$171.vips_precision_get_type$MH,"vips_precision_get_type");
    }
    public static long vips_precision_get_type () {
        var mh$ = vips_precision_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_intent_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$171.vips_intent_get_type$MH,"vips_intent_get_type");
    }
    public static long vips_intent_get_type () {
        var mh$ = vips_intent_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pcs_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$171.vips_pcs_get_type$MH,"vips_pcs_get_type");
    }
    public static long vips_pcs_get_type () {
        var mh$ = vips_pcs_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_extend_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$171.vips_extend_get_type$MH,"vips_extend_get_type");
    }
    public static long vips_extend_get_type () {
        var mh$ = vips_extend_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_compass_direction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$171.vips_compass_direction_get_type$MH,"vips_compass_direction_get_type");
    }
    public static long vips_compass_direction_get_type () {
        var mh$ = vips_compass_direction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_direction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$171.vips_direction_get_type$MH,"vips_direction_get_type");
    }
    public static long vips_direction_get_type () {
        var mh$ = vips_direction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_align_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$172.vips_align_get_type$MH,"vips_align_get_type");
    }
    public static long vips_align_get_type () {
        var mh$ = vips_align_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_angle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$172.vips_angle_get_type$MH,"vips_angle_get_type");
    }
    public static long vips_angle_get_type () {
        var mh$ = vips_angle_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_angle45_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$172.vips_angle45_get_type$MH,"vips_angle45_get_type");
    }
    public static long vips_angle45_get_type () {
        var mh$ = vips_angle45_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interesting_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$172.vips_interesting_get_type$MH,"vips_interesting_get_type");
    }
    public static long vips_interesting_get_type () {
        var mh$ = vips_interesting_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_blend_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$172.vips_blend_mode_get_type$MH,"vips_blend_mode_get_type");
    }
    public static long vips_blend_mode_get_type () {
        var mh$ = vips_blend_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_combine_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$172.vips_combine_get_type$MH,"vips_combine_get_type");
    }
    public static long vips_combine_get_type () {
        var mh$ = vips_combine_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_text_wrap_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$173.vips_text_wrap_get_type$MH,"vips_text_wrap_get_type");
    }
    public static long vips_text_wrap_get_type () {
        var mh$ = vips_text_wrap_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_combine_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$173.vips_combine_mode_get_type$MH,"vips_combine_mode_get_type");
    }
    public static long vips_combine_mode_get_type () {
        var mh$ = vips_combine_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$173.vips_foreign_flags_get_type$MH,"vips_foreign_flags_get_type");
    }
    public static long vips_foreign_flags_get_type () {
        var mh$ = vips_foreign_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_fail_on_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$173.vips_fail_on_get_type$MH,"vips_fail_on_get_type");
    }
    public static long vips_fail_on_get_type () {
        var mh$ = vips_fail_on_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_saveable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$173.vips_saveable_get_type$MH,"vips_saveable_get_type");
    }
    public static long vips_saveable_get_type () {
        var mh$ = vips_saveable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_subsample_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$173.vips_foreign_subsample_get_type$MH,"vips_foreign_subsample_get_type");
    }
    public static long vips_foreign_subsample_get_type () {
        var mh$ = vips_foreign_subsample_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_jpeg_subsample_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$174.vips_foreign_jpeg_subsample_get_type$MH,"vips_foreign_jpeg_subsample_get_type");
    }
    public static long vips_foreign_jpeg_subsample_get_type () {
        var mh$ = vips_foreign_jpeg_subsample_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_webp_preset_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$174.vips_foreign_webp_preset_get_type$MH,"vips_foreign_webp_preset_get_type");
    }
    public static long vips_foreign_webp_preset_get_type () {
        var mh$ = vips_foreign_webp_preset_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_tiff_compression_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$174.vips_foreign_tiff_compression_get_type$MH,"vips_foreign_tiff_compression_get_type");
    }
    public static long vips_foreign_tiff_compression_get_type () {
        var mh$ = vips_foreign_tiff_compression_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_tiff_predictor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$174.vips_foreign_tiff_predictor_get_type$MH,"vips_foreign_tiff_predictor_get_type");
    }
    public static long vips_foreign_tiff_predictor_get_type () {
        var mh$ = vips_foreign_tiff_predictor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_tiff_resunit_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$174.vips_foreign_tiff_resunit_get_type$MH,"vips_foreign_tiff_resunit_get_type");
    }
    public static long vips_foreign_tiff_resunit_get_type () {
        var mh$ = vips_foreign_tiff_resunit_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_png_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$174.vips_foreign_png_filter_get_type$MH,"vips_foreign_png_filter_get_type");
    }
    public static long vips_foreign_png_filter_get_type () {
        var mh$ = vips_foreign_png_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_ppm_format_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$175.vips_foreign_ppm_format_get_type$MH,"vips_foreign_ppm_format_get_type");
    }
    public static long vips_foreign_ppm_format_get_type () {
        var mh$ = vips_foreign_ppm_format_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_dz_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$175.vips_foreign_dz_layout_get_type$MH,"vips_foreign_dz_layout_get_type");
    }
    public static long vips_foreign_dz_layout_get_type () {
        var mh$ = vips_foreign_dz_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_dz_depth_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$175.vips_foreign_dz_depth_get_type$MH,"vips_foreign_dz_depth_get_type");
    }
    public static long vips_foreign_dz_depth_get_type () {
        var mh$ = vips_foreign_dz_depth_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_dz_container_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$175.vips_foreign_dz_container_get_type$MH,"vips_foreign_dz_container_get_type");
    }
    public static long vips_foreign_dz_container_get_type () {
        var mh$ = vips_foreign_dz_container_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_heif_compression_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$175.vips_foreign_heif_compression_get_type$MH,"vips_foreign_heif_compression_get_type");
    }
    public static long vips_foreign_heif_compression_get_type () {
        var mh$ = vips_foreign_heif_compression_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_heif_encoder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$175.vips_foreign_heif_encoder_get_type$MH,"vips_foreign_heif_encoder_get_type");
    }
    public static long vips_foreign_heif_encoder_get_type () {
        var mh$ = vips_foreign_heif_encoder_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_demand_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$176.vips_demand_style_get_type$MH,"vips_demand_style_get_type");
    }
    public static long vips_demand_style_get_type () {
        var mh$ = vips_demand_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$176.vips_image_type_get_type$MH,"vips_image_type_get_type");
    }
    public static long vips_image_type_get_type () {
        var mh$ = vips_image_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interpretation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$176.vips_interpretation_get_type$MH,"vips_interpretation_get_type");
    }
    public static long vips_interpretation_get_type () {
        var mh$ = vips_interpretation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_band_format_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$176.vips_band_format_get_type$MH,"vips_band_format_get_type");
    }
    public static long vips_band_format_get_type () {
        var mh$ = vips_band_format_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_coding_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$176.vips_coding_get_type$MH,"vips_coding_get_type");
    }
    public static long vips_coding_get_type () {
        var mh$ = vips_coding_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_access_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$176.vips_access_get_type$MH,"vips_access_get_type");
    }
    public static long vips_access_get_type () {
        var mh$ = vips_access_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_morphology_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$177.vips_operation_morphology_get_type$MH,"vips_operation_morphology_get_type");
    }
    public static long vips_operation_morphology_get_type () {
        var mh$ = vips_operation_morphology_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_argument_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$177.vips_argument_flags_get_type$MH,"vips_argument_flags_get_type");
    }
    public static long vips_argument_flags_get_type () {
        var mh$ = vips_argument_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$177.vips_operation_flags_get_type$MH,"vips_operation_flags_get_type");
    }
    public static long vips_operation_flags_get_type () {
        var mh$ = vips_operation_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_shrink_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$177.vips_region_shrink_get_type$MH,"vips_region_shrink_get_type");
    }
    public static long vips_region_shrink_get_type () {
        var mh$ = vips_region_shrink_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_kernel_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$177.vips_kernel_get_type$MH,"vips_kernel_get_type");
    }
    public static long vips_kernel_get_type () {
        var mh$ = vips_kernel_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_size_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$177.vips_size_get_type$MH,"vips_size_get_type");
    }
    public static long vips_size_get_type () {
        var mh$ = vips_size_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_token_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$178.vips_token_get_type$MH,"vips_token_get_type");
    }
    public static long vips_token_get_type () {
        var mh$ = vips_token_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_OPERATION_MATH_SIN() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_MATH_COS() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_MATH_TAN() {
        return (int)2L;
    }
    public static int VIPS_OPERATION_MATH_ASIN() {
        return (int)3L;
    }
    public static int VIPS_OPERATION_MATH_ACOS() {
        return (int)4L;
    }
    public static int VIPS_OPERATION_MATH_ATAN() {
        return (int)5L;
    }
    public static int VIPS_OPERATION_MATH_LOG() {
        return (int)6L;
    }
    public static int VIPS_OPERATION_MATH_LOG10() {
        return (int)7L;
    }
    public static int VIPS_OPERATION_MATH_EXP() {
        return (int)8L;
    }
    public static int VIPS_OPERATION_MATH_EXP10() {
        return (int)9L;
    }
    public static int VIPS_OPERATION_MATH_SINH() {
        return (int)10L;
    }
    public static int VIPS_OPERATION_MATH_COSH() {
        return (int)11L;
    }
    public static int VIPS_OPERATION_MATH_TANH() {
        return (int)12L;
    }
    public static int VIPS_OPERATION_MATH_ASINH() {
        return (int)13L;
    }
    public static int VIPS_OPERATION_MATH_ACOSH() {
        return (int)14L;
    }
    public static int VIPS_OPERATION_MATH_ATANH() {
        return (int)15L;
    }
    public static int VIPS_OPERATION_MATH_LAST() {
        return (int)16L;
    }
    public static int VIPS_OPERATION_MATH2_POW() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_MATH2_WOP() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_MATH2_ATAN2() {
        return (int)2L;
    }
    public static int VIPS_OPERATION_MATH2_LAST() {
        return (int)3L;
    }
    public static int VIPS_OPERATION_ROUND_RINT() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_ROUND_CEIL() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_ROUND_FLOOR() {
        return (int)2L;
    }
    public static int VIPS_OPERATION_ROUND_LAST() {
        return (int)3L;
    }
    public static int VIPS_OPERATION_RELATIONAL_EQUAL() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_RELATIONAL_NOTEQ() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_RELATIONAL_LESS() {
        return (int)2L;
    }
    public static int VIPS_OPERATION_RELATIONAL_LESSEQ() {
        return (int)3L;
    }
    public static int VIPS_OPERATION_RELATIONAL_MORE() {
        return (int)4L;
    }
    public static int VIPS_OPERATION_RELATIONAL_MOREEQ() {
        return (int)5L;
    }
    public static int VIPS_OPERATION_RELATIONAL_LAST() {
        return (int)6L;
    }
    public static int VIPS_OPERATION_BOOLEAN_AND() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_BOOLEAN_OR() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_BOOLEAN_EOR() {
        return (int)2L;
    }
    public static int VIPS_OPERATION_BOOLEAN_LSHIFT() {
        return (int)3L;
    }
    public static int VIPS_OPERATION_BOOLEAN_RSHIFT() {
        return (int)4L;
    }
    public static int VIPS_OPERATION_BOOLEAN_LAST() {
        return (int)5L;
    }
    public static int VIPS_OPERATION_COMPLEX_POLAR() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_COMPLEX_RECT() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_COMPLEX_CONJ() {
        return (int)2L;
    }
    public static int VIPS_OPERATION_COMPLEX_LAST() {
        return (int)3L;
    }
    public static int VIPS_OPERATION_COMPLEX2_CROSS_PHASE() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_COMPLEX2_LAST() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_COMPLEXGET_REAL() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_COMPLEXGET_IMAG() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_COMPLEXGET_LAST() {
        return (int)2L;
    }
    public static MethodHandle vips_add$MH() {
        return RuntimeHelper.requireNonNull(constants$178.vips_add$MH,"vips_add");
    }
    public static int vips_add ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_add$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sum$MH() {
        return RuntimeHelper.requireNonNull(constants$178.vips_sum$MH,"vips_sum");
    }
    public static int vips_sum ( Addressable in,  Addressable out,  int n, Object... x3) {
        var mh$ = vips_sum$MH();
        try {
            return (int)mh$.invokeExact(in, out, n, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_subtract$MH() {
        return RuntimeHelper.requireNonNull(constants$178.vips_subtract$MH,"vips_subtract");
    }
    public static int vips_subtract ( Addressable in1,  Addressable in2,  Addressable out, Object... x3) {
        var mh$ = vips_subtract$MH();
        try {
            return (int)mh$.invokeExact(in1, in2, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_multiply$MH() {
        return RuntimeHelper.requireNonNull(constants$178.vips_multiply$MH,"vips_multiply");
    }
    public static int vips_multiply ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_multiply$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_divide$MH() {
        return RuntimeHelper.requireNonNull(constants$178.vips_divide$MH,"vips_divide");
    }
    public static int vips_divide ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_divide$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_linear$MH() {
        return RuntimeHelper.requireNonNull(constants$179.vips_linear$MH,"vips_linear");
    }
    public static int vips_linear ( Addressable in,  Addressable out,  Addressable a,  Addressable b,  int n, Object... x5) {
        var mh$ = vips_linear$MH();
        try {
            return (int)mh$.invokeExact(in, out, a, b, n, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_linear1$MH() {
        return RuntimeHelper.requireNonNull(constants$179.vips_linear1$MH,"vips_linear1");
    }
    public static int vips_linear1 ( Addressable in,  Addressable out,  double a,  double b, Object... x4) {
        var mh$ = vips_linear1$MH();
        try {
            return (int)mh$.invokeExact(in, out, a, b, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_remainder$MH() {
        return RuntimeHelper.requireNonNull(constants$179.vips_remainder$MH,"vips_remainder");
    }
    public static int vips_remainder ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_remainder$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_remainder_const$MH() {
        return RuntimeHelper.requireNonNull(constants$179.vips_remainder_const$MH,"vips_remainder_const");
    }
    public static int vips_remainder_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_remainder_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_remainder_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$179.vips_remainder_const1$MH,"vips_remainder_const1");
    }
    public static int vips_remainder_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_remainder_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$179.vips_invert$MH,"vips_invert");
    }
    public static int vips_invert ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_invert$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_abs$MH() {
        return RuntimeHelper.requireNonNull(constants$180.vips_abs$MH,"vips_abs");
    }
    public static int vips_abs ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_abs$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$180.vips_sign$MH,"vips_sign");
    }
    public static int vips_sign ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_sign$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_round$MH() {
        return RuntimeHelper.requireNonNull(constants$180.vips_round$MH,"vips_round");
    }
    public static int vips_round ( Addressable in,  Addressable out,  int round, Object... x3) {
        var mh$ = vips_round$MH();
        try {
            return (int)mh$.invokeExact(in, out, round, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_floor$MH() {
        return RuntimeHelper.requireNonNull(constants$180.vips_floor$MH,"vips_floor");
    }
    public static int vips_floor ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_floor$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ceil$MH() {
        return RuntimeHelper.requireNonNull(constants$180.vips_ceil$MH,"vips_ceil");
    }
    public static int vips_ceil ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_ceil$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rint$MH() {
        return RuntimeHelper.requireNonNull(constants$180.vips_rint$MH,"vips_rint");
    }
    public static int vips_rint ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_rint$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_math$MH() {
        return RuntimeHelper.requireNonNull(constants$181.vips_math$MH,"vips_math");
    }
    public static int vips_math ( Addressable in,  Addressable out,  int math, Object... x3) {
        var mh$ = vips_math$MH();
        try {
            return (int)mh$.invokeExact(in, out, math, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sin$MH() {
        return RuntimeHelper.requireNonNull(constants$181.vips_sin$MH,"vips_sin");
    }
    public static int vips_sin ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_sin$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cos$MH() {
        return RuntimeHelper.requireNonNull(constants$181.vips_cos$MH,"vips_cos");
    }
    public static int vips_cos ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cos$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tan$MH() {
        return RuntimeHelper.requireNonNull(constants$181.vips_tan$MH,"vips_tan");
    }
    public static int vips_tan ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_tan$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_asin$MH() {
        return RuntimeHelper.requireNonNull(constants$181.vips_asin$MH,"vips_asin");
    }
    public static int vips_asin ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_asin$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_acos$MH() {
        return RuntimeHelper.requireNonNull(constants$181.vips_acos$MH,"vips_acos");
    }
    public static int vips_acos ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_acos$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_atan$MH() {
        return RuntimeHelper.requireNonNull(constants$182.vips_atan$MH,"vips_atan");
    }
    public static int vips_atan ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_atan$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$182.vips_exp$MH,"vips_exp");
    }
    public static int vips_exp ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_exp$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_exp10$MH() {
        return RuntimeHelper.requireNonNull(constants$182.vips_exp10$MH,"vips_exp10");
    }
    public static int vips_exp10 ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_exp10$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_log$MH() {
        return RuntimeHelper.requireNonNull(constants$182.vips_log$MH,"vips_log");
    }
    public static int vips_log ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_log$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_log10$MH() {
        return RuntimeHelper.requireNonNull(constants$182.vips_log10$MH,"vips_log10");
    }
    public static int vips_log10 ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_log10$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sinh$MH() {
        return RuntimeHelper.requireNonNull(constants$182.vips_sinh$MH,"vips_sinh");
    }
    public static int vips_sinh ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_sinh$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cosh$MH() {
        return RuntimeHelper.requireNonNull(constants$183.vips_cosh$MH,"vips_cosh");
    }
    public static int vips_cosh ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cosh$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tanh$MH() {
        return RuntimeHelper.requireNonNull(constants$183.vips_tanh$MH,"vips_tanh");
    }
    public static int vips_tanh ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_tanh$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_asinh$MH() {
        return RuntimeHelper.requireNonNull(constants$183.vips_asinh$MH,"vips_asinh");
    }
    public static int vips_asinh ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_asinh$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_acosh$MH() {
        return RuntimeHelper.requireNonNull(constants$183.vips_acosh$MH,"vips_acosh");
    }
    public static int vips_acosh ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_acosh$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_atanh$MH() {
        return RuntimeHelper.requireNonNull(constants$183.vips_atanh$MH,"vips_atanh");
    }
    public static int vips_atanh ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_atanh$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_complex$MH() {
        return RuntimeHelper.requireNonNull(constants$183.vips_complex$MH,"vips_complex");
    }
    public static int vips_complex ( Addressable in,  Addressable out,  int cmplx, Object... x3) {
        var mh$ = vips_complex$MH();
        try {
            return (int)mh$.invokeExact(in, out, cmplx, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_polar$MH() {
        return RuntimeHelper.requireNonNull(constants$184.vips_polar$MH,"vips_polar");
    }
    public static int vips_polar ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_polar$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$184.vips_rect$MH,"vips_rect");
    }
    public static int vips_rect ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_rect$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_conj$MH() {
        return RuntimeHelper.requireNonNull(constants$184.vips_conj$MH,"vips_conj");
    }
    public static int vips_conj ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_conj$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_complex2$MH() {
        return RuntimeHelper.requireNonNull(constants$184.vips_complex2$MH,"vips_complex2");
    }
    public static int vips_complex2 ( Addressable left,  Addressable right,  Addressable out,  int cmplx, Object... x4) {
        var mh$ = vips_complex2$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, cmplx, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cross_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$184.vips_cross_phase$MH,"vips_cross_phase");
    }
    public static int vips_cross_phase ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_cross_phase$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_complexget$MH() {
        return RuntimeHelper.requireNonNull(constants$184.vips_complexget$MH,"vips_complexget");
    }
    public static int vips_complexget ( Addressable in,  Addressable out,  int get, Object... x3) {
        var mh$ = vips_complexget$MH();
        try {
            return (int)mh$.invokeExact(in, out, get, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_real$MH() {
        return RuntimeHelper.requireNonNull(constants$185.vips_real$MH,"vips_real");
    }
    public static int vips_real ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_real$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_imag$MH() {
        return RuntimeHelper.requireNonNull(constants$185.vips_imag$MH,"vips_imag");
    }
    public static int vips_imag ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_imag$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_complexform$MH() {
        return RuntimeHelper.requireNonNull(constants$185.vips_complexform$MH,"vips_complexform");
    }
    public static int vips_complexform ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_complexform$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_relational$MH() {
        return RuntimeHelper.requireNonNull(constants$185.vips_relational$MH,"vips_relational");
    }
    public static int vips_relational ( Addressable left,  Addressable right,  Addressable out,  int relational, Object... x4) {
        var mh$ = vips_relational$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, relational, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$185.vips_equal$MH,"vips_equal");
    }
    public static int vips_equal ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_equal$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_notequal$MH() {
        return RuntimeHelper.requireNonNull(constants$185.vips_notequal$MH,"vips_notequal");
    }
    public static int vips_notequal ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_notequal$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_less$MH() {
        return RuntimeHelper.requireNonNull(constants$186.vips_less$MH,"vips_less");
    }
    public static int vips_less ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_less$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_lesseq$MH() {
        return RuntimeHelper.requireNonNull(constants$186.vips_lesseq$MH,"vips_lesseq");
    }
    public static int vips_lesseq ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_lesseq$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_more$MH() {
        return RuntimeHelper.requireNonNull(constants$186.vips_more$MH,"vips_more");
    }
    public static int vips_more ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_more$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_moreeq$MH() {
        return RuntimeHelper.requireNonNull(constants$186.vips_moreeq$MH,"vips_moreeq");
    }
    public static int vips_moreeq ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_moreeq$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_relational_const$MH() {
        return RuntimeHelper.requireNonNull(constants$186.vips_relational_const$MH,"vips_relational_const");
    }
    public static int vips_relational_const ( Addressable in,  Addressable out,  int relational,  Addressable c,  int n, Object... x5) {
        var mh$ = vips_relational_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, relational, c, n, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_equal_const$MH() {
        return RuntimeHelper.requireNonNull(constants$186.vips_equal_const$MH,"vips_equal_const");
    }
    public static int vips_equal_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_equal_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_notequal_const$MH() {
        return RuntimeHelper.requireNonNull(constants$187.vips_notequal_const$MH,"vips_notequal_const");
    }
    public static int vips_notequal_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_notequal_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_less_const$MH() {
        return RuntimeHelper.requireNonNull(constants$187.vips_less_const$MH,"vips_less_const");
    }
    public static int vips_less_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_less_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_lesseq_const$MH() {
        return RuntimeHelper.requireNonNull(constants$187.vips_lesseq_const$MH,"vips_lesseq_const");
    }
    public static int vips_lesseq_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_lesseq_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_more_const$MH() {
        return RuntimeHelper.requireNonNull(constants$187.vips_more_const$MH,"vips_more_const");
    }
    public static int vips_more_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_more_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_moreeq_const$MH() {
        return RuntimeHelper.requireNonNull(constants$187.vips_moreeq_const$MH,"vips_moreeq_const");
    }
    public static int vips_moreeq_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_moreeq_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_relational_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$187.vips_relational_const1$MH,"vips_relational_const1");
    }
    public static int vips_relational_const1 ( Addressable in,  Addressable out,  int relational,  double c, Object... x4) {
        var mh$ = vips_relational_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, relational, c, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_equal_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$188.vips_equal_const1$MH,"vips_equal_const1");
    }
    public static int vips_equal_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_equal_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_notequal_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$188.vips_notequal_const1$MH,"vips_notequal_const1");
    }
    public static int vips_notequal_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_notequal_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_less_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$188.vips_less_const1$MH,"vips_less_const1");
    }
    public static int vips_less_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_less_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_lesseq_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$188.vips_lesseq_const1$MH,"vips_lesseq_const1");
    }
    public static int vips_lesseq_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_lesseq_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_more_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$188.vips_more_const1$MH,"vips_more_const1");
    }
    public static int vips_more_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_more_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_moreeq_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$188.vips_moreeq_const1$MH,"vips_moreeq_const1");
    }
    public static int vips_moreeq_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_moreeq_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$189.vips_boolean$MH,"vips_boolean");
    }
    public static int vips_boolean ( Addressable left,  Addressable right,  Addressable out,  int boolean_, Object... x4) {
        var mh$ = vips_boolean$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, boolean_, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_andimage$MH() {
        return RuntimeHelper.requireNonNull(constants$189.vips_andimage$MH,"vips_andimage");
    }
    public static int vips_andimage ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_andimage$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_orimage$MH() {
        return RuntimeHelper.requireNonNull(constants$189.vips_orimage$MH,"vips_orimage");
    }
    public static int vips_orimage ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_orimage$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_eorimage$MH() {
        return RuntimeHelper.requireNonNull(constants$189.vips_eorimage$MH,"vips_eorimage");
    }
    public static int vips_eorimage ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_eorimage$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_lshift$MH() {
        return RuntimeHelper.requireNonNull(constants$189.vips_lshift$MH,"vips_lshift");
    }
    public static int vips_lshift ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_lshift$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rshift$MH() {
        return RuntimeHelper.requireNonNull(constants$189.vips_rshift$MH,"vips_rshift");
    }
    public static int vips_rshift ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_rshift$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_boolean_const$MH() {
        return RuntimeHelper.requireNonNull(constants$190.vips_boolean_const$MH,"vips_boolean_const");
    }
    public static int vips_boolean_const ( Addressable in,  Addressable out,  int boolean_,  Addressable c,  int n, Object... x5) {
        var mh$ = vips_boolean_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, boolean_, c, n, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_andimage_const$MH() {
        return RuntimeHelper.requireNonNull(constants$190.vips_andimage_const$MH,"vips_andimage_const");
    }
    public static int vips_andimage_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_andimage_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_orimage_const$MH() {
        return RuntimeHelper.requireNonNull(constants$190.vips_orimage_const$MH,"vips_orimage_const");
    }
    public static int vips_orimage_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_orimage_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_eorimage_const$MH() {
        return RuntimeHelper.requireNonNull(constants$190.vips_eorimage_const$MH,"vips_eorimage_const");
    }
    public static int vips_eorimage_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_eorimage_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_lshift_const$MH() {
        return RuntimeHelper.requireNonNull(constants$190.vips_lshift_const$MH,"vips_lshift_const");
    }
    public static int vips_lshift_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_lshift_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rshift_const$MH() {
        return RuntimeHelper.requireNonNull(constants$190.vips_rshift_const$MH,"vips_rshift_const");
    }
    public static int vips_rshift_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_rshift_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_boolean_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$191.vips_boolean_const1$MH,"vips_boolean_const1");
    }
    public static int vips_boolean_const1 ( Addressable in,  Addressable out,  int boolean_,  double c, Object... x4) {
        var mh$ = vips_boolean_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, boolean_, c, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_andimage_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$191.vips_andimage_const1$MH,"vips_andimage_const1");
    }
    public static int vips_andimage_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_andimage_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_orimage_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$191.vips_orimage_const1$MH,"vips_orimage_const1");
    }
    public static int vips_orimage_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_orimage_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_eorimage_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$191.vips_eorimage_const1$MH,"vips_eorimage_const1");
    }
    public static int vips_eorimage_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_eorimage_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_lshift_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$191.vips_lshift_const1$MH,"vips_lshift_const1");
    }
    public static int vips_lshift_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_lshift_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rshift_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$191.vips_rshift_const1$MH,"vips_rshift_const1");
    }
    public static int vips_rshift_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_rshift_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_math2$MH() {
        return RuntimeHelper.requireNonNull(constants$192.vips_math2$MH,"vips_math2");
    }
    public static int vips_math2 ( Addressable left,  Addressable right,  Addressable out,  int math2, Object... x4) {
        var mh$ = vips_math2$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, math2, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pow$MH() {
        return RuntimeHelper.requireNonNull(constants$192.vips_pow$MH,"vips_pow");
    }
    public static int vips_pow ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_pow$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_wop$MH() {
        return RuntimeHelper.requireNonNull(constants$192.vips_wop$MH,"vips_wop");
    }
    public static int vips_wop ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_wop$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_atan2$MH() {
        return RuntimeHelper.requireNonNull(constants$192.vips_atan2$MH,"vips_atan2");
    }
    public static int vips_atan2 ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_atan2$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_math2_const$MH() {
        return RuntimeHelper.requireNonNull(constants$192.vips_math2_const$MH,"vips_math2_const");
    }
    public static int vips_math2_const ( Addressable in,  Addressable out,  int math2,  Addressable c,  int n, Object... x5) {
        var mh$ = vips_math2_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, math2, c, n, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pow_const$MH() {
        return RuntimeHelper.requireNonNull(constants$192.vips_pow_const$MH,"vips_pow_const");
    }
    public static int vips_pow_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_pow_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_wop_const$MH() {
        return RuntimeHelper.requireNonNull(constants$193.vips_wop_const$MH,"vips_wop_const");
    }
    public static int vips_wop_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_wop_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_atan2_const$MH() {
        return RuntimeHelper.requireNonNull(constants$193.vips_atan2_const$MH,"vips_atan2_const");
    }
    public static int vips_atan2_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_atan2_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_math2_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$193.vips_math2_const1$MH,"vips_math2_const1");
    }
    public static int vips_math2_const1 ( Addressable in,  Addressable out,  int math2,  double c, Object... x4) {
        var mh$ = vips_math2_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, math2, c, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pow_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$193.vips_pow_const1$MH,"vips_pow_const1");
    }
    public static int vips_pow_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_pow_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_wop_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$193.vips_wop_const1$MH,"vips_wop_const1");
    }
    public static int vips_wop_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_wop_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_atan2_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$193.vips_atan2_const1$MH,"vips_atan2_const1");
    }
    public static int vips_atan2_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_atan2_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_avg$MH() {
        return RuntimeHelper.requireNonNull(constants$194.vips_avg$MH,"vips_avg");
    }
    public static int vips_avg ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_avg$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_deviate$MH() {
        return RuntimeHelper.requireNonNull(constants$194.vips_deviate$MH,"vips_deviate");
    }
    public static int vips_deviate ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_deviate$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_min$MH() {
        return RuntimeHelper.requireNonNull(constants$194.vips_min$MH,"vips_min");
    }
    public static int vips_min ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_min$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_max$MH() {
        return RuntimeHelper.requireNonNull(constants$194.vips_max$MH,"vips_max");
    }
    public static int vips_max ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_max$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_stats$MH() {
        return RuntimeHelper.requireNonNull(constants$194.vips_stats$MH,"vips_stats");
    }
    public static int vips_stats ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_stats$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_measure$MH() {
        return RuntimeHelper.requireNonNull(constants$194.vips_measure$MH,"vips_measure");
    }
    public static int vips_measure ( Addressable in,  Addressable out,  int h,  int v, Object... x4) {
        var mh$ = vips_measure$MH();
        try {
            return (int)mh$.invokeExact(in, out, h, v, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_find_trim$MH() {
        return RuntimeHelper.requireNonNull(constants$195.vips_find_trim$MH,"vips_find_trim");
    }
    public static int vips_find_trim ( Addressable in,  Addressable left,  Addressable top,  Addressable width,  Addressable height, Object... x5) {
        var mh$ = vips_find_trim$MH();
        try {
            return (int)mh$.invokeExact(in, left, top, width, height, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_getpoint$MH() {
        return RuntimeHelper.requireNonNull(constants$195.vips_getpoint$MH,"vips_getpoint");
    }
    public static int vips_getpoint ( Addressable in,  Addressable vector,  Addressable n,  int x,  int y, Object... x5) {
        var mh$ = vips_getpoint$MH();
        try {
            return (int)mh$.invokeExact(in, vector, n, x, y, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_find$MH() {
        return RuntimeHelper.requireNonNull(constants$195.vips_hist_find$MH,"vips_hist_find");
    }
    public static int vips_hist_find ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hist_find$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_find_ndim$MH() {
        return RuntimeHelper.requireNonNull(constants$195.vips_hist_find_ndim$MH,"vips_hist_find_ndim");
    }
    public static int vips_hist_find_ndim ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hist_find_ndim$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_find_indexed$MH() {
        return RuntimeHelper.requireNonNull(constants$195.vips_hist_find_indexed$MH,"vips_hist_find_indexed");
    }
    public static int vips_hist_find_indexed ( Addressable in,  Addressable index,  Addressable out, Object... x3) {
        var mh$ = vips_hist_find_indexed$MH();
        try {
            return (int)mh$.invokeExact(in, index, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hough_line$MH() {
        return RuntimeHelper.requireNonNull(constants$195.vips_hough_line$MH,"vips_hough_line");
    }
    public static int vips_hough_line ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hough_line$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hough_circle$MH() {
        return RuntimeHelper.requireNonNull(constants$196.vips_hough_circle$MH,"vips_hough_circle");
    }
    public static int vips_hough_circle ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hough_circle$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_project$MH() {
        return RuntimeHelper.requireNonNull(constants$196.vips_project$MH,"vips_project");
    }
    public static int vips_project ( Addressable in,  Addressable columns,  Addressable rows, Object... x3) {
        var mh$ = vips_project$MH();
        try {
            return (int)mh$.invokeExact(in, columns, rows, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$196.vips_profile$MH,"vips_profile");
    }
    public static int vips_profile ( Addressable in,  Addressable columns,  Addressable rows, Object... x3) {
        var mh$ = vips_profile$MH();
        try {
            return (int)mh$.invokeExact(in, columns, rows, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_EXTEND_BLACK() {
        return (int)0L;
    }
    public static int VIPS_EXTEND_COPY() {
        return (int)1L;
    }
    public static int VIPS_EXTEND_REPEAT() {
        return (int)2L;
    }
    public static int VIPS_EXTEND_MIRROR() {
        return (int)3L;
    }
    public static int VIPS_EXTEND_WHITE() {
        return (int)4L;
    }
    public static int VIPS_EXTEND_BACKGROUND() {
        return (int)5L;
    }
    public static int VIPS_EXTEND_LAST() {
        return (int)6L;
    }
    public static int VIPS_COMPASS_DIRECTION_CENTRE() {
        return (int)0L;
    }
    public static int VIPS_COMPASS_DIRECTION_NORTH() {
        return (int)1L;
    }
    public static int VIPS_COMPASS_DIRECTION_EAST() {
        return (int)2L;
    }
    public static int VIPS_COMPASS_DIRECTION_SOUTH() {
        return (int)3L;
    }
    public static int VIPS_COMPASS_DIRECTION_WEST() {
        return (int)4L;
    }
    public static int VIPS_COMPASS_DIRECTION_NORTH_EAST() {
        return (int)5L;
    }
    public static int VIPS_COMPASS_DIRECTION_SOUTH_EAST() {
        return (int)6L;
    }
    public static int VIPS_COMPASS_DIRECTION_SOUTH_WEST() {
        return (int)7L;
    }
    public static int VIPS_COMPASS_DIRECTION_NORTH_WEST() {
        return (int)8L;
    }
    public static int VIPS_COMPASS_DIRECTION_LAST() {
        return (int)9L;
    }
    public static int VIPS_DIRECTION_HORIZONTAL() {
        return (int)0L;
    }
    public static int VIPS_DIRECTION_VERTICAL() {
        return (int)1L;
    }
    public static int VIPS_DIRECTION_LAST() {
        return (int)2L;
    }
    public static int VIPS_ALIGN_LOW() {
        return (int)0L;
    }
    public static int VIPS_ALIGN_CENTRE() {
        return (int)1L;
    }
    public static int VIPS_ALIGN_HIGH() {
        return (int)2L;
    }
    public static int VIPS_ALIGN_LAST() {
        return (int)3L;
    }
    public static int VIPS_ANGLE_D0() {
        return (int)0L;
    }
    public static int VIPS_ANGLE_D90() {
        return (int)1L;
    }
    public static int VIPS_ANGLE_D180() {
        return (int)2L;
    }
    public static int VIPS_ANGLE_D270() {
        return (int)3L;
    }
    public static int VIPS_ANGLE_LAST() {
        return (int)4L;
    }
    public static int VIPS_ANGLE45_D0() {
        return (int)0L;
    }
    public static int VIPS_ANGLE45_D45() {
        return (int)1L;
    }
    public static int VIPS_ANGLE45_D90() {
        return (int)2L;
    }
    public static int VIPS_ANGLE45_D135() {
        return (int)3L;
    }
    public static int VIPS_ANGLE45_D180() {
        return (int)4L;
    }
    public static int VIPS_ANGLE45_D225() {
        return (int)5L;
    }
    public static int VIPS_ANGLE45_D270() {
        return (int)6L;
    }
    public static int VIPS_ANGLE45_D315() {
        return (int)7L;
    }
    public static int VIPS_ANGLE45_LAST() {
        return (int)8L;
    }
    public static int VIPS_INTERESTING_NONE() {
        return (int)0L;
    }
    public static int VIPS_INTERESTING_CENTRE() {
        return (int)1L;
    }
    public static int VIPS_INTERESTING_ENTROPY() {
        return (int)2L;
    }
    public static int VIPS_INTERESTING_ATTENTION() {
        return (int)3L;
    }
    public static int VIPS_INTERESTING_LOW() {
        return (int)4L;
    }
    public static int VIPS_INTERESTING_HIGH() {
        return (int)5L;
    }
    public static int VIPS_INTERESTING_ALL() {
        return (int)6L;
    }
    public static int VIPS_INTERESTING_LAST() {
        return (int)7L;
    }
    public static int VIPS_BLEND_MODE_CLEAR() {
        return (int)0L;
    }
    public static int VIPS_BLEND_MODE_SOURCE() {
        return (int)1L;
    }
    public static int VIPS_BLEND_MODE_OVER() {
        return (int)2L;
    }
    public static int VIPS_BLEND_MODE_IN() {
        return (int)3L;
    }
    public static int VIPS_BLEND_MODE_OUT() {
        return (int)4L;
    }
    public static int VIPS_BLEND_MODE_ATOP() {
        return (int)5L;
    }
    public static int VIPS_BLEND_MODE_DEST() {
        return (int)6L;
    }
    public static int VIPS_BLEND_MODE_DEST_OVER() {
        return (int)7L;
    }
    public static int VIPS_BLEND_MODE_DEST_IN() {
        return (int)8L;
    }
    public static int VIPS_BLEND_MODE_DEST_OUT() {
        return (int)9L;
    }
    public static int VIPS_BLEND_MODE_DEST_ATOP() {
        return (int)10L;
    }
    public static int VIPS_BLEND_MODE_XOR() {
        return (int)11L;
    }
    public static int VIPS_BLEND_MODE_ADD() {
        return (int)12L;
    }
    public static int VIPS_BLEND_MODE_SATURATE() {
        return (int)13L;
    }
    public static int VIPS_BLEND_MODE_MULTIPLY() {
        return (int)14L;
    }
    public static int VIPS_BLEND_MODE_SCREEN() {
        return (int)15L;
    }
    public static int VIPS_BLEND_MODE_OVERLAY() {
        return (int)16L;
    }
    public static int VIPS_BLEND_MODE_DARKEN() {
        return (int)17L;
    }
    public static int VIPS_BLEND_MODE_LIGHTEN() {
        return (int)18L;
    }
    public static int VIPS_BLEND_MODE_COLOUR_DODGE() {
        return (int)19L;
    }
    public static int VIPS_BLEND_MODE_COLOUR_BURN() {
        return (int)20L;
    }
    public static int VIPS_BLEND_MODE_HARD_LIGHT() {
        return (int)21L;
    }
    public static int VIPS_BLEND_MODE_SOFT_LIGHT() {
        return (int)22L;
    }
    public static int VIPS_BLEND_MODE_DIFFERENCE() {
        return (int)23L;
    }
    public static int VIPS_BLEND_MODE_EXCLUSION() {
        return (int)24L;
    }
    public static int VIPS_BLEND_MODE_LAST() {
        return (int)25L;
    }
    public static MethodHandle vips_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$196.vips_copy$MH,"vips_copy");
    }
    public static int vips_copy ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_copy$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tilecache$MH() {
        return RuntimeHelper.requireNonNull(constants$196.vips_tilecache$MH,"vips_tilecache");
    }
    public static int vips_tilecache ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_tilecache$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_linecache$MH() {
        return RuntimeHelper.requireNonNull(constants$196.vips_linecache$MH,"vips_linecache");
    }
    public static int vips_linecache ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_linecache$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sequential$MH() {
        return RuntimeHelper.requireNonNull(constants$197.vips_sequential$MH,"vips_sequential");
    }
    public static int vips_sequential ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_sequential$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache$MH() {
        return RuntimeHelper.requireNonNull(constants$197.vips_cache$MH,"vips_cache");
    }
    public static int vips_cache ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cache$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_copy_file$MH() {
        return RuntimeHelper.requireNonNull(constants$197.vips_copy_file$MH,"vips_copy_file");
    }
    public static int vips_copy_file ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_copy_file$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_embed$MH() {
        return RuntimeHelper.requireNonNull(constants$197.vips_embed$MH,"vips_embed");
    }
    public static int vips_embed ( Addressable in,  Addressable out,  int x,  int y,  int width,  int height, Object... x6) {
        var mh$ = vips_embed$MH();
        try {
            return (int)mh$.invokeExact(in, out, x, y, width, height, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$197.vips_gravity$MH,"vips_gravity");
    }
    public static int vips_gravity ( Addressable in,  Addressable out,  int direction,  int width,  int height, Object... x5) {
        var mh$ = vips_gravity$MH();
        try {
            return (int)mh$.invokeExact(in, out, direction, width, height, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_flip$MH() {
        return RuntimeHelper.requireNonNull(constants$197.vips_flip$MH,"vips_flip");
    }
    public static int vips_flip ( Addressable in,  Addressable out,  int direction, Object... x3) {
        var mh$ = vips_flip$MH();
        try {
            return (int)mh$.invokeExact(in, out, direction, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$198.vips_insert$MH,"vips_insert");
    }
    public static int vips_insert ( Addressable main,  Addressable sub,  Addressable out,  int x,  int y, Object... x5) {
        var mh$ = vips_insert$MH();
        try {
            return (int)mh$.invokeExact(main, sub, out, x, y, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_join$MH() {
        return RuntimeHelper.requireNonNull(constants$198.vips_join$MH,"vips_join");
    }
    public static int vips_join ( Addressable in1,  Addressable in2,  Addressable out,  int direction, Object... x4) {
        var mh$ = vips_join$MH();
        try {
            return (int)mh$.invokeExact(in1, in2, out, direction, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_arrayjoin$MH() {
        return RuntimeHelper.requireNonNull(constants$198.vips_arrayjoin$MH,"vips_arrayjoin");
    }
    public static int vips_arrayjoin ( Addressable in,  Addressable out,  int n, Object... x3) {
        var mh$ = vips_arrayjoin$MH();
        try {
            return (int)mh$.invokeExact(in, out, n, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_extract_area$MH() {
        return RuntimeHelper.requireNonNull(constants$198.vips_extract_area$MH,"vips_extract_area");
    }
    public static int vips_extract_area ( Addressable in,  Addressable out,  int left,  int top,  int width,  int height, Object... x6) {
        var mh$ = vips_extract_area$MH();
        try {
            return (int)mh$.invokeExact(in, out, left, top, width, height, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_crop$MH() {
        return RuntimeHelper.requireNonNull(constants$198.vips_crop$MH,"vips_crop");
    }
    public static int vips_crop ( Addressable in,  Addressable out,  int left,  int top,  int width,  int height, Object... x6) {
        var mh$ = vips_crop$MH();
        try {
            return (int)mh$.invokeExact(in, out, left, top, width, height, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_smartcrop$MH() {
        return RuntimeHelper.requireNonNull(constants$198.vips_smartcrop$MH,"vips_smartcrop");
    }
    public static int vips_smartcrop ( Addressable in,  Addressable out,  int width,  int height, Object... x4) {
        var mh$ = vips_smartcrop$MH();
        try {
            return (int)mh$.invokeExact(in, out, width, height, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_extract_band$MH() {
        return RuntimeHelper.requireNonNull(constants$199.vips_extract_band$MH,"vips_extract_band");
    }
    public static int vips_extract_band ( Addressable in,  Addressable out,  int band, Object... x3) {
        var mh$ = vips_extract_band$MH();
        try {
            return (int)mh$.invokeExact(in, out, band, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_replicate$MH() {
        return RuntimeHelper.requireNonNull(constants$199.vips_replicate$MH,"vips_replicate");
    }
    public static int vips_replicate ( Addressable in,  Addressable out,  int across,  int down, Object... x4) {
        var mh$ = vips_replicate$MH();
        try {
            return (int)mh$.invokeExact(in, out, across, down, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_grid$MH() {
        return RuntimeHelper.requireNonNull(constants$199.vips_grid$MH,"vips_grid");
    }
    public static int vips_grid ( Addressable in,  Addressable out,  int tile_height,  int across,  int down, Object... x5) {
        var mh$ = vips_grid$MH();
        try {
            return (int)mh$.invokeExact(in, out, tile_height, across, down, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_transpose3d$MH() {
        return RuntimeHelper.requireNonNull(constants$199.vips_transpose3d$MH,"vips_transpose3d");
    }
    public static int vips_transpose3d ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_transpose3d$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$199.vips_wrap$MH,"vips_wrap");
    }
    public static int vips_wrap ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_wrap$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rot$MH() {
        return RuntimeHelper.requireNonNull(constants$199.vips_rot$MH,"vips_rot");
    }
    public static int vips_rot ( Addressable in,  Addressable out,  int angle, Object... x3) {
        var mh$ = vips_rot$MH();
        try {
            return (int)mh$.invokeExact(in, out, angle, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rot90$MH() {
        return RuntimeHelper.requireNonNull(constants$200.vips_rot90$MH,"vips_rot90");
    }
    public static int vips_rot90 ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_rot90$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rot180$MH() {
        return RuntimeHelper.requireNonNull(constants$200.vips_rot180$MH,"vips_rot180");
    }
    public static int vips_rot180 ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_rot180$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rot270$MH() {
        return RuntimeHelper.requireNonNull(constants$200.vips_rot270$MH,"vips_rot270");
    }
    public static int vips_rot270 ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_rot270$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rot45$MH() {
        return RuntimeHelper.requireNonNull(constants$200.vips_rot45$MH,"vips_rot45");
    }
    public static int vips_rot45 ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_rot45$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_autorot_remove_angle$MH() {
        return RuntimeHelper.requireNonNull(constants$200.vips_autorot_remove_angle$MH,"vips_autorot_remove_angle");
    }
    public static void vips_autorot_remove_angle ( Addressable image) {
        var mh$ = vips_autorot_remove_angle$MH();
        try {
            mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_autorot$MH() {
        return RuntimeHelper.requireNonNull(constants$200.vips_autorot$MH,"vips_autorot");
    }
    public static int vips_autorot ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_autorot$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_zoom$MH() {
        return RuntimeHelper.requireNonNull(constants$201.vips_zoom$MH,"vips_zoom");
    }
    public static int vips_zoom ( Addressable in,  Addressable out,  int xfac,  int yfac, Object... x4) {
        var mh$ = vips_zoom$MH();
        try {
            return (int)mh$.invokeExact(in, out, xfac, yfac, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_subsample$MH() {
        return RuntimeHelper.requireNonNull(constants$201.vips_subsample$MH,"vips_subsample");
    }
    public static int vips_subsample ( Addressable in,  Addressable out,  int xfac,  int yfac, Object... x4) {
        var mh$ = vips_subsample$MH();
        try {
            return (int)mh$.invokeExact(in, out, xfac, yfac, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$201.vips_cast$MH,"vips_cast");
    }
    public static int vips_cast ( Addressable in,  Addressable out,  int format, Object... x3) {
        var mh$ = vips_cast$MH();
        try {
            return (int)mh$.invokeExact(in, out, format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$201.vips_cast_uchar$MH,"vips_cast_uchar");
    }
    public static int vips_cast_uchar ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_uchar$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_char$MH() {
        return RuntimeHelper.requireNonNull(constants$201.vips_cast_char$MH,"vips_cast_char");
    }
    public static int vips_cast_char ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_char$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_ushort$MH() {
        return RuntimeHelper.requireNonNull(constants$201.vips_cast_ushort$MH,"vips_cast_ushort");
    }
    public static int vips_cast_ushort ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_ushort$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_short$MH() {
        return RuntimeHelper.requireNonNull(constants$202.vips_cast_short$MH,"vips_cast_short");
    }
    public static int vips_cast_short ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_short$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$202.vips_cast_uint$MH,"vips_cast_uint");
    }
    public static int vips_cast_uint ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_uint$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_int$MH() {
        return RuntimeHelper.requireNonNull(constants$202.vips_cast_int$MH,"vips_cast_int");
    }
    public static int vips_cast_int ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_int$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_float$MH() {
        return RuntimeHelper.requireNonNull(constants$202.vips_cast_float$MH,"vips_cast_float");
    }
    public static int vips_cast_float ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_float$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_double$MH() {
        return RuntimeHelper.requireNonNull(constants$202.vips_cast_double$MH,"vips_cast_double");
    }
    public static int vips_cast_double ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_double$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_complex$MH() {
        return RuntimeHelper.requireNonNull(constants$202.vips_cast_complex$MH,"vips_cast_complex");
    }
    public static int vips_cast_complex ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_complex$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cast_dpcomplex$MH() {
        return RuntimeHelper.requireNonNull(constants$203.vips_cast_dpcomplex$MH,"vips_cast_dpcomplex");
    }
    public static int vips_cast_dpcomplex ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_cast_dpcomplex$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$203.vips_scale$MH,"vips_scale");
    }
    public static int vips_scale ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_scale$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_msb$MH() {
        return RuntimeHelper.requireNonNull(constants$203.vips_msb$MH,"vips_msb");
    }
    public static int vips_msb ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_msb$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_byteswap$MH() {
        return RuntimeHelper.requireNonNull(constants$203.vips_byteswap$MH,"vips_byteswap");
    }
    public static int vips_byteswap ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_byteswap$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandjoin$MH() {
        return RuntimeHelper.requireNonNull(constants$203.vips_bandjoin$MH,"vips_bandjoin");
    }
    public static int vips_bandjoin ( Addressable in,  Addressable out,  int n, Object... x3) {
        var mh$ = vips_bandjoin$MH();
        try {
            return (int)mh$.invokeExact(in, out, n, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandjoin2$MH() {
        return RuntimeHelper.requireNonNull(constants$203.vips_bandjoin2$MH,"vips_bandjoin2");
    }
    public static int vips_bandjoin2 ( Addressable in1,  Addressable in2,  Addressable out, Object... x3) {
        var mh$ = vips_bandjoin2$MH();
        try {
            return (int)mh$.invokeExact(in1, in2, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandjoin_const$MH() {
        return RuntimeHelper.requireNonNull(constants$204.vips_bandjoin_const$MH,"vips_bandjoin_const");
    }
    public static int vips_bandjoin_const ( Addressable in,  Addressable out,  Addressable c,  int n, Object... x4) {
        var mh$ = vips_bandjoin_const$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandjoin_const1$MH() {
        return RuntimeHelper.requireNonNull(constants$204.vips_bandjoin_const1$MH,"vips_bandjoin_const1");
    }
    public static int vips_bandjoin_const1 ( Addressable in,  Addressable out,  double c, Object... x3) {
        var mh$ = vips_bandjoin_const1$MH();
        try {
            return (int)mh$.invokeExact(in, out, c, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandrank$MH() {
        return RuntimeHelper.requireNonNull(constants$204.vips_bandrank$MH,"vips_bandrank");
    }
    public static int vips_bandrank ( Addressable in,  Addressable out,  int n, Object... x3) {
        var mh$ = vips_bandrank$MH();
        try {
            return (int)mh$.invokeExact(in, out, n, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandfold$MH() {
        return RuntimeHelper.requireNonNull(constants$204.vips_bandfold$MH,"vips_bandfold");
    }
    public static int vips_bandfold ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_bandfold$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandunfold$MH() {
        return RuntimeHelper.requireNonNull(constants$204.vips_bandunfold$MH,"vips_bandunfold");
    }
    public static int vips_bandunfold ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_bandunfold$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandbool$MH() {
        return RuntimeHelper.requireNonNull(constants$204.vips_bandbool$MH,"vips_bandbool");
    }
    public static int vips_bandbool ( Addressable in,  Addressable out,  int boolean_, Object... x3) {
        var mh$ = vips_bandbool$MH();
        try {
            return (int)mh$.invokeExact(in, out, boolean_, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandand$MH() {
        return RuntimeHelper.requireNonNull(constants$205.vips_bandand$MH,"vips_bandand");
    }
    public static int vips_bandand ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_bandand$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandor$MH() {
        return RuntimeHelper.requireNonNull(constants$205.vips_bandor$MH,"vips_bandor");
    }
    public static int vips_bandor ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_bandor$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandeor$MH() {
        return RuntimeHelper.requireNonNull(constants$205.vips_bandeor$MH,"vips_bandeor");
    }
    public static int vips_bandeor ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_bandeor$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_bandmean$MH() {
        return RuntimeHelper.requireNonNull(constants$205.vips_bandmean$MH,"vips_bandmean");
    }
    public static int vips_bandmean ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_bandmean$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_recomb$MH() {
        return RuntimeHelper.requireNonNull(constants$205.vips_recomb$MH,"vips_recomb");
    }
    public static int vips_recomb ( Addressable in,  Addressable out,  Addressable m, Object... x3) {
        var mh$ = vips_recomb$MH();
        try {
            return (int)mh$.invokeExact(in, out, m, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ifthenelse$MH() {
        return RuntimeHelper.requireNonNull(constants$205.vips_ifthenelse$MH,"vips_ifthenelse");
    }
    public static int vips_ifthenelse ( Addressable cond,  Addressable in1,  Addressable in2,  Addressable out, Object... x4) {
        var mh$ = vips_ifthenelse$MH();
        try {
            return (int)mh$.invokeExact(cond, in1, in2, out, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_switch$MH() {
        return RuntimeHelper.requireNonNull(constants$206.vips_switch$MH,"vips_switch");
    }
    public static int vips_switch ( Addressable tests,  Addressable out,  int n, Object... x3) {
        var mh$ = vips_switch$MH();
        try {
            return (int)mh$.invokeExact(tests, out, n, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_flatten$MH() {
        return RuntimeHelper.requireNonNull(constants$206.vips_flatten$MH,"vips_flatten");
    }
    public static int vips_flatten ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_flatten$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_addalpha$MH() {
        return RuntimeHelper.requireNonNull(constants$206.vips_addalpha$MH,"vips_addalpha");
    }
    public static int vips_addalpha ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_addalpha$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_premultiply$MH() {
        return RuntimeHelper.requireNonNull(constants$206.vips_premultiply$MH,"vips_premultiply");
    }
    public static int vips_premultiply ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_premultiply$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_unpremultiply$MH() {
        return RuntimeHelper.requireNonNull(constants$206.vips_unpremultiply$MH,"vips_unpremultiply");
    }
    public static int vips_unpremultiply ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_unpremultiply$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_composite$MH() {
        return RuntimeHelper.requireNonNull(constants$206.vips_composite$MH,"vips_composite");
    }
    public static int vips_composite ( Addressable in,  Addressable out,  int n,  Addressable mode, Object... x4) {
        var mh$ = vips_composite$MH();
        try {
            return (int)mh$.invokeExact(in, out, n, mode, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_composite2$MH() {
        return RuntimeHelper.requireNonNull(constants$207.vips_composite2$MH,"vips_composite2");
    }
    public static int vips_composite2 ( Addressable base,  Addressable overlay,  Addressable out,  int mode, Object... x4) {
        var mh$ = vips_composite2$MH();
        try {
            return (int)mh$.invokeExact(base, overlay, out, mode, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_falsecolour$MH() {
        return RuntimeHelper.requireNonNull(constants$207.vips_falsecolour$MH,"vips_falsecolour");
    }
    public static int vips_falsecolour ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_falsecolour$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gamma$MH() {
        return RuntimeHelper.requireNonNull(constants$207.vips_gamma$MH,"vips_gamma");
    }
    public static int vips_gamma ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_gamma$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_COMBINE_MAX() {
        return (int)0L;
    }
    public static int VIPS_COMBINE_SUM() {
        return (int)1L;
    }
    public static int VIPS_COMBINE_MIN() {
        return (int)2L;
    }
    public static int VIPS_COMBINE_LAST() {
        return (int)3L;
    }
    public static MethodHandle vips_conv$MH() {
        return RuntimeHelper.requireNonNull(constants$207.vips_conv$MH,"vips_conv");
    }
    public static int vips_conv ( Addressable in,  Addressable out,  Addressable mask, Object... x3) {
        var mh$ = vips_conv$MH();
        try {
            return (int)mh$.invokeExact(in, out, mask, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_convf$MH() {
        return RuntimeHelper.requireNonNull(constants$207.vips_convf$MH,"vips_convf");
    }
    public static int vips_convf ( Addressable in,  Addressable out,  Addressable mask, Object... x3) {
        var mh$ = vips_convf$MH();
        try {
            return (int)mh$.invokeExact(in, out, mask, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_convi$MH() {
        return RuntimeHelper.requireNonNull(constants$207.vips_convi$MH,"vips_convi");
    }
    public static int vips_convi ( Addressable in,  Addressable out,  Addressable mask, Object... x3) {
        var mh$ = vips_convi$MH();
        try {
            return (int)mh$.invokeExact(in, out, mask, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_conva$MH() {
        return RuntimeHelper.requireNonNull(constants$208.vips_conva$MH,"vips_conva");
    }
    public static int vips_conva ( Addressable in,  Addressable out,  Addressable mask, Object... x3) {
        var mh$ = vips_conva$MH();
        try {
            return (int)mh$.invokeExact(in, out, mask, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_convsep$MH() {
        return RuntimeHelper.requireNonNull(constants$208.vips_convsep$MH,"vips_convsep");
    }
    public static int vips_convsep ( Addressable in,  Addressable out,  Addressable mask, Object... x3) {
        var mh$ = vips_convsep$MH();
        try {
            return (int)mh$.invokeExact(in, out, mask, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_convasep$MH() {
        return RuntimeHelper.requireNonNull(constants$208.vips_convasep$MH,"vips_convasep");
    }
    public static int vips_convasep ( Addressable in,  Addressable out,  Addressable mask, Object... x3) {
        var mh$ = vips_convasep$MH();
        try {
            return (int)mh$.invokeExact(in, out, mask, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_compass$MH() {
        return RuntimeHelper.requireNonNull(constants$208.vips_compass$MH,"vips_compass");
    }
    public static int vips_compass ( Addressable in,  Addressable out,  Addressable mask, Object... x3) {
        var mh$ = vips_compass$MH();
        try {
            return (int)mh$.invokeExact(in, out, mask, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gaussblur$MH() {
        return RuntimeHelper.requireNonNull(constants$208.vips_gaussblur$MH,"vips_gaussblur");
    }
    public static int vips_gaussblur ( Addressable in,  Addressable out,  double sigma, Object... x3) {
        var mh$ = vips_gaussblur$MH();
        try {
            return (int)mh$.invokeExact(in, out, sigma, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sharpen$MH() {
        return RuntimeHelper.requireNonNull(constants$208.vips_sharpen$MH,"vips_sharpen");
    }
    public static int vips_sharpen ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_sharpen$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_spcor$MH() {
        return RuntimeHelper.requireNonNull(constants$209.vips_spcor$MH,"vips_spcor");
    }
    public static int vips_spcor ( Addressable in,  Addressable ref,  Addressable out, Object... x3) {
        var mh$ = vips_spcor$MH();
        try {
            return (int)mh$.invokeExact(in, ref, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_fastcor$MH() {
        return RuntimeHelper.requireNonNull(constants$209.vips_fastcor$MH,"vips_fastcor");
    }
    public static int vips_fastcor ( Addressable in,  Addressable ref,  Addressable out, Object... x3) {
        var mh$ = vips_fastcor$MH();
        try {
            return (int)mh$.invokeExact(in, ref, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sobel$MH() {
        return RuntimeHelper.requireNonNull(constants$209.vips_sobel$MH,"vips_sobel");
    }
    public static int vips_sobel ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_sobel$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_canny$MH() {
        return RuntimeHelper.requireNonNull(constants$209.vips_canny$MH,"vips_canny");
    }
    public static int vips_canny ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_canny$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_OPERATION_MORPHOLOGY_ERODE() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_MORPHOLOGY_DILATE() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_MORPHOLOGY_LAST() {
        return (int)2L;
    }
    public static MethodHandle vips_morph$MH() {
        return RuntimeHelper.requireNonNull(constants$209.vips_morph$MH,"vips_morph");
    }
    public static int vips_morph ( Addressable in,  Addressable out,  Addressable mask,  int morph, Object... x4) {
        var mh$ = vips_morph$MH();
        try {
            return (int)mh$.invokeExact(in, out, mask, morph, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rank$MH() {
        return RuntimeHelper.requireNonNull(constants$209.vips_rank$MH,"vips_rank");
    }
    public static int vips_rank ( Addressable in,  Addressable out,  int width,  int height,  int index, Object... x5) {
        var mh$ = vips_rank$MH();
        try {
            return (int)mh$.invokeExact(in, out, width, height, index, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_median$MH() {
        return RuntimeHelper.requireNonNull(constants$210.vips_median$MH,"vips_median");
    }
    public static int vips_median ( Addressable in,  Addressable out,  int size, Object... x3) {
        var mh$ = vips_median$MH();
        try {
            return (int)mh$.invokeExact(in, out, size, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_countlines$MH() {
        return RuntimeHelper.requireNonNull(constants$210.vips_countlines$MH,"vips_countlines");
    }
    public static int vips_countlines ( Addressable in,  Addressable nolines,  int direction, Object... x3) {
        var mh$ = vips_countlines$MH();
        try {
            return (int)mh$.invokeExact(in, nolines, direction, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_labelregions$MH() {
        return RuntimeHelper.requireNonNull(constants$210.vips_labelregions$MH,"vips_labelregions");
    }
    public static int vips_labelregions ( Addressable in,  Addressable mask, Object... x2) {
        var mh$ = vips_labelregions$MH();
        try {
            return (int)mh$.invokeExact(in, mask, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_fill_nearest$MH() {
        return RuntimeHelper.requireNonNull(constants$210.vips_fill_nearest$MH,"vips_fill_nearest");
    }
    public static int vips_fill_nearest ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_fill_nearest$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_merge$MH() {
        return RuntimeHelper.requireNonNull(constants$210.vips_merge$MH,"vips_merge");
    }
    public static int vips_merge ( Addressable ref,  Addressable sec,  Addressable out,  int direction,  int dx,  int dy, Object... x6) {
        var mh$ = vips_merge$MH();
        try {
            return (int)mh$.invokeExact(ref, sec, out, direction, dx, dy, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mosaic$MH() {
        return RuntimeHelper.requireNonNull(constants$210.vips_mosaic$MH,"vips_mosaic");
    }
    public static int vips_mosaic ( Addressable ref,  Addressable sec,  Addressable out,  int direction,  int xref,  int yref,  int xsec,  int ysec, Object... x8) {
        var mh$ = vips_mosaic$MH();
        try {
            return (int)mh$.invokeExact(ref, sec, out, direction, xref, yref, xsec, ysec, x8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mosaic1$MH() {
        return RuntimeHelper.requireNonNull(constants$211.vips_mosaic1$MH,"vips_mosaic1");
    }
    public static int vips_mosaic1 ( Addressable ref,  Addressable sec,  Addressable out,  int direction,  int xr1,  int yr1,  int xs1,  int ys1,  int xr2,  int yr2,  int xs2,  int ys2, Object... x12) {
        var mh$ = vips_mosaic1$MH();
        try {
            return (int)mh$.invokeExact(ref, sec, out, direction, xr1, yr1, xs1, ys1, xr2, yr2, xs2, ys2, x12);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_match$MH() {
        return RuntimeHelper.requireNonNull(constants$211.vips_match$MH,"vips_match");
    }
    public static int vips_match ( Addressable ref,  Addressable sec,  Addressable out,  int xr1,  int yr1,  int xs1,  int ys1,  int xr2,  int yr2,  int xs2,  int ys2, Object... x11) {
        var mh$ = vips_match$MH();
        try {
            return (int)mh$.invokeExact(ref, sec, out, xr1, yr1, xs1, ys1, xr2, yr2, xs2, ys2, x11);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_globalbalance$MH() {
        return RuntimeHelper.requireNonNull(constants$211.vips_globalbalance$MH,"vips_globalbalance");
    }
    public static int vips_globalbalance ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_globalbalance$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_remosaic$MH() {
        return RuntimeHelper.requireNonNull(constants$211.vips_remosaic$MH,"vips_remosaic");
    }
    public static int vips_remosaic ( Addressable in,  Addressable out,  Addressable old_str,  Addressable new_str, Object... x4) {
        var mh$ = vips_remosaic$MH();
        try {
            return (int)mh$.invokeExact(in, out, old_str, new_str, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_matrixinvert$MH() {
        return RuntimeHelper.requireNonNull(constants$211.vips_matrixinvert$MH,"vips_matrixinvert");
    }
    public static int vips_matrixinvert ( Addressable m,  Addressable out, Object... x2) {
        var mh$ = vips_matrixinvert$MH();
        try {
            return (int)mh$.invokeExact(m, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_maplut$MH() {
        return RuntimeHelper.requireNonNull(constants$211.vips_maplut$MH,"vips_maplut");
    }
    public static int vips_maplut ( Addressable in,  Addressable out,  Addressable lut, Object... x3) {
        var mh$ = vips_maplut$MH();
        try {
            return (int)mh$.invokeExact(in, out, lut, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_percent$MH() {
        return RuntimeHelper.requireNonNull(constants$212.vips_percent$MH,"vips_percent");
    }
    public static int vips_percent ( Addressable in,  double percent,  Addressable threshold, Object... x3) {
        var mh$ = vips_percent$MH();
        try {
            return (int)mh$.invokeExact(in, percent, threshold, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_stdif$MH() {
        return RuntimeHelper.requireNonNull(constants$212.vips_stdif$MH,"vips_stdif");
    }
    public static int vips_stdif ( Addressable in,  Addressable out,  int width,  int height, Object... x4) {
        var mh$ = vips_stdif$MH();
        try {
            return (int)mh$.invokeExact(in, out, width, height, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_cum$MH() {
        return RuntimeHelper.requireNonNull(constants$212.vips_hist_cum$MH,"vips_hist_cum");
    }
    public static int vips_hist_cum ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hist_cum$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_norm$MH() {
        return RuntimeHelper.requireNonNull(constants$212.vips_hist_norm$MH,"vips_hist_norm");
    }
    public static int vips_hist_norm ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hist_norm$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$212.vips_hist_equal$MH,"vips_hist_equal");
    }
    public static int vips_hist_equal ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hist_equal$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_plot$MH() {
        return RuntimeHelper.requireNonNull(constants$212.vips_hist_plot$MH,"vips_hist_plot");
    }
    public static int vips_hist_plot ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hist_plot$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_match$MH() {
        return RuntimeHelper.requireNonNull(constants$213.vips_hist_match$MH,"vips_hist_match");
    }
    public static int vips_hist_match ( Addressable in,  Addressable ref,  Addressable out, Object... x3) {
        var mh$ = vips_hist_match$MH();
        try {
            return (int)mh$.invokeExact(in, ref, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_local$MH() {
        return RuntimeHelper.requireNonNull(constants$213.vips_hist_local$MH,"vips_hist_local");
    }
    public static int vips_hist_local ( Addressable in,  Addressable out,  int width,  int height, Object... x4) {
        var mh$ = vips_hist_local$MH();
        try {
            return (int)mh$.invokeExact(in, out, width, height, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_ismonotonic$MH() {
        return RuntimeHelper.requireNonNull(constants$213.vips_hist_ismonotonic$MH,"vips_hist_ismonotonic");
    }
    public static int vips_hist_ismonotonic ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hist_ismonotonic$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hist_entropy$MH() {
        return RuntimeHelper.requireNonNull(constants$213.vips_hist_entropy$MH,"vips_hist_entropy");
    }
    public static int vips_hist_entropy ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_hist_entropy$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_case$MH() {
        return RuntimeHelper.requireNonNull(constants$213.vips_case$MH,"vips_case");
    }
    public static int vips_case ( Addressable index,  Addressable cases,  Addressable out,  int n, Object... x4) {
        var mh$ = vips_case$MH();
        try {
            return (int)mh$.invokeExact(index, cases, out, n, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_fwfft$MH() {
        return RuntimeHelper.requireNonNull(constants$213.vips_fwfft$MH,"vips_fwfft");
    }
    public static int vips_fwfft ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_fwfft$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_invfft$MH() {
        return RuntimeHelper.requireNonNull(constants$214.vips_invfft$MH,"vips_invfft");
    }
    public static int vips_invfft ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_invfft$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_freqmult$MH() {
        return RuntimeHelper.requireNonNull(constants$214.vips_freqmult$MH,"vips_freqmult");
    }
    public static int vips_freqmult ( Addressable in,  Addressable mask,  Addressable out, Object... x3) {
        var mh$ = vips_freqmult$MH();
        try {
            return (int)mh$.invokeExact(in, mask, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_spectrum$MH() {
        return RuntimeHelper.requireNonNull(constants$214.vips_spectrum$MH,"vips_spectrum");
    }
    public static int vips_spectrum ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_spectrum$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_phasecor$MH() {
        return RuntimeHelper.requireNonNull(constants$214.vips_phasecor$MH,"vips_phasecor");
    }
    public static int vips_phasecor ( Addressable in1,  Addressable in2,  Addressable out, Object... x3) {
        var mh$ = vips_phasecor$MH();
        try {
            return (int)mh$.invokeExact(in1, in2, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_KERNEL_NEAREST() {
        return (int)0L;
    }
    public static int VIPS_KERNEL_LINEAR() {
        return (int)1L;
    }
    public static int VIPS_KERNEL_CUBIC() {
        return (int)2L;
    }
    public static int VIPS_KERNEL_MITCHELL() {
        return (int)3L;
    }
    public static int VIPS_KERNEL_LANCZOS2() {
        return (int)4L;
    }
    public static int VIPS_KERNEL_LANCZOS3() {
        return (int)5L;
    }
    public static int VIPS_KERNEL_LAST() {
        return (int)6L;
    }
    public static int VIPS_SIZE_BOTH() {
        return (int)0L;
    }
    public static int VIPS_SIZE_UP() {
        return (int)1L;
    }
    public static int VIPS_SIZE_DOWN() {
        return (int)2L;
    }
    public static int VIPS_SIZE_FORCE() {
        return (int)3L;
    }
    public static int VIPS_SIZE_LAST() {
        return (int)4L;
    }
    public static MethodHandle vips_shrink$MH() {
        return RuntimeHelper.requireNonNull(constants$214.vips_shrink$MH,"vips_shrink");
    }
    public static int vips_shrink ( Addressable in,  Addressable out,  double hshrink,  double vshrink, Object... x4) {
        var mh$ = vips_shrink$MH();
        try {
            return (int)mh$.invokeExact(in, out, hshrink, vshrink, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_shrinkh$MH() {
        return RuntimeHelper.requireNonNull(constants$214.vips_shrinkh$MH,"vips_shrinkh");
    }
    public static int vips_shrinkh ( Addressable in,  Addressable out,  int hshrink, Object... x3) {
        var mh$ = vips_shrinkh$MH();
        try {
            return (int)mh$.invokeExact(in, out, hshrink, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_shrinkv$MH() {
        return RuntimeHelper.requireNonNull(constants$215.vips_shrinkv$MH,"vips_shrinkv");
    }
    public static int vips_shrinkv ( Addressable in,  Addressable out,  int vshrink, Object... x3) {
        var mh$ = vips_shrinkv$MH();
        try {
            return (int)mh$.invokeExact(in, out, vshrink, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_reduce$MH() {
        return RuntimeHelper.requireNonNull(constants$215.vips_reduce$MH,"vips_reduce");
    }
    public static int vips_reduce ( Addressable in,  Addressable out,  double hshrink,  double vshrink, Object... x4) {
        var mh$ = vips_reduce$MH();
        try {
            return (int)mh$.invokeExact(in, out, hshrink, vshrink, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_reduceh$MH() {
        return RuntimeHelper.requireNonNull(constants$215.vips_reduceh$MH,"vips_reduceh");
    }
    public static int vips_reduceh ( Addressable in,  Addressable out,  double hshrink, Object... x3) {
        var mh$ = vips_reduceh$MH();
        try {
            return (int)mh$.invokeExact(in, out, hshrink, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_reducev$MH() {
        return RuntimeHelper.requireNonNull(constants$215.vips_reducev$MH,"vips_reducev");
    }
    public static int vips_reducev ( Addressable in,  Addressable out,  double vshrink, Object... x3) {
        var mh$ = vips_reducev$MH();
        try {
            return (int)mh$.invokeExact(in, out, vshrink, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thumbnail$MH() {
        return RuntimeHelper.requireNonNull(constants$215.vips_thumbnail$MH,"vips_thumbnail");
    }
    public static int vips_thumbnail ( Addressable filename,  Addressable out,  int width, Object... x3) {
        var mh$ = vips_thumbnail$MH();
        try {
            return (int)mh$.invokeExact(filename, out, width, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thumbnail_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$215.vips_thumbnail_buffer$MH,"vips_thumbnail_buffer");
    }
    public static int vips_thumbnail_buffer ( Addressable buf,  long len,  Addressable out,  int width, Object... x4) {
        var mh$ = vips_thumbnail_buffer$MH();
        try {
            return (int)mh$.invokeExact(buf, len, out, width, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thumbnail_image$MH() {
        return RuntimeHelper.requireNonNull(constants$216.vips_thumbnail_image$MH,"vips_thumbnail_image");
    }
    public static int vips_thumbnail_image ( Addressable in,  Addressable out,  int width, Object... x3) {
        var mh$ = vips_thumbnail_image$MH();
        try {
            return (int)mh$.invokeExact(in, out, width, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thumbnail_source$MH() {
        return RuntimeHelper.requireNonNull(constants$216.vips_thumbnail_source$MH,"vips_thumbnail_source");
    }
    public static int vips_thumbnail_source ( Addressable source,  Addressable out,  int width, Object... x3) {
        var mh$ = vips_thumbnail_source$MH();
        try {
            return (int)mh$.invokeExact(source, out, width, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_similarity$MH() {
        return RuntimeHelper.requireNonNull(constants$216.vips_similarity$MH,"vips_similarity");
    }
    public static int vips_similarity ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_similarity$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$216.vips_rotate$MH,"vips_rotate");
    }
    public static int vips_rotate ( Addressable in,  Addressable out,  double angle, Object... x3) {
        var mh$ = vips_rotate$MH();
        try {
            return (int)mh$.invokeExact(in, out, angle, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_affine$MH() {
        return RuntimeHelper.requireNonNull(constants$216.vips_affine$MH,"vips_affine");
    }
    public static int vips_affine ( Addressable in,  Addressable out,  double a,  double b,  double c,  double d, Object... x6) {
        var mh$ = vips_affine$MH();
        try {
            return (int)mh$.invokeExact(in, out, a, b, c, d, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$216.vips_resize$MH,"vips_resize");
    }
    public static int vips_resize ( Addressable in,  Addressable out,  double scale, Object... x3) {
        var mh$ = vips_resize$MH();
        try {
            return (int)mh$.invokeExact(in, out, scale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mapim$MH() {
        return RuntimeHelper.requireNonNull(constants$217.vips_mapim$MH,"vips_mapim");
    }
    public static int vips_mapim ( Addressable in,  Addressable out,  Addressable index, Object... x3) {
        var mh$ = vips_mapim$MH();
        try {
            return (int)mh$.invokeExact(in, out, index, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_quadratic$MH() {
        return RuntimeHelper.requireNonNull(constants$217.vips_quadratic$MH,"vips_quadratic");
    }
    public static int vips_quadratic ( Addressable in,  Addressable out,  Addressable coeff, Object... x3) {
        var mh$ = vips_quadratic$MH();
        try {
            return (int)mh$.invokeExact(in, out, coeff, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_INTENT_PERCEPTUAL() {
        return (int)0L;
    }
    public static int VIPS_INTENT_RELATIVE() {
        return (int)1L;
    }
    public static int VIPS_INTENT_SATURATION() {
        return (int)2L;
    }
    public static int VIPS_INTENT_ABSOLUTE() {
        return (int)3L;
    }
    public static int VIPS_INTENT_LAST() {
        return (int)4L;
    }
    public static int VIPS_PCS_LAB() {
        return (int)0L;
    }
    public static int VIPS_PCS_XYZ() {
        return (int)1L;
    }
    public static int VIPS_PCS_LAST() {
        return (int)2L;
    }
    public static MethodHandle vips_colourspace_issupported$MH() {
        return RuntimeHelper.requireNonNull(constants$217.vips_colourspace_issupported$MH,"vips_colourspace_issupported");
    }
    public static int vips_colourspace_issupported ( Addressable image) {
        var mh$ = vips_colourspace_issupported$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_colourspace$MH() {
        return RuntimeHelper.requireNonNull(constants$217.vips_colourspace$MH,"vips_colourspace");
    }
    public static int vips_colourspace ( Addressable in,  Addressable out,  int space, Object... x3) {
        var mh$ = vips_colourspace$MH();
        try {
            return (int)mh$.invokeExact(in, out, space, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_LabQ2sRGB$MH() {
        return RuntimeHelper.requireNonNull(constants$217.vips_LabQ2sRGB$MH,"vips_LabQ2sRGB");
    }
    public static int vips_LabQ2sRGB ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_LabQ2sRGB$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rad2float$MH() {
        return RuntimeHelper.requireNonNull(constants$217.vips_rad2float$MH,"vips_rad2float");
    }
    public static int vips_rad2float ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_rad2float$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_float2rad$MH() {
        return RuntimeHelper.requireNonNull(constants$218.vips_float2rad$MH,"vips_float2rad");
    }
    public static int vips_float2rad ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_float2rad$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_LabS2LabQ$MH() {
        return RuntimeHelper.requireNonNull(constants$218.vips_LabS2LabQ$MH,"vips_LabS2LabQ");
    }
    public static int vips_LabS2LabQ ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_LabS2LabQ$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_LabQ2LabS$MH() {
        return RuntimeHelper.requireNonNull(constants$218.vips_LabQ2LabS$MH,"vips_LabQ2LabS");
    }
    public static int vips_LabQ2LabS ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_LabQ2LabS$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_LabQ2Lab$MH() {
        return RuntimeHelper.requireNonNull(constants$218.vips_LabQ2Lab$MH,"vips_LabQ2Lab");
    }
    public static int vips_LabQ2Lab ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_LabQ2Lab$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_Lab2LabQ$MH() {
        return RuntimeHelper.requireNonNull(constants$218.vips_Lab2LabQ$MH,"vips_Lab2LabQ");
    }
    public static int vips_Lab2LabQ ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_Lab2LabQ$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_LCh2Lab$MH() {
        return RuntimeHelper.requireNonNull(constants$218.vips_LCh2Lab$MH,"vips_LCh2Lab");
    }
    public static int vips_LCh2Lab ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_LCh2Lab$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_Lab2LCh$MH() {
        return RuntimeHelper.requireNonNull(constants$219.vips_Lab2LCh$MH,"vips_Lab2LCh");
    }
    public static int vips_Lab2LCh ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_Lab2LCh$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_Yxy2Lab$MH() {
        return RuntimeHelper.requireNonNull(constants$219.vips_Yxy2Lab$MH,"vips_Yxy2Lab");
    }
    public static int vips_Yxy2Lab ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_Yxy2Lab$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_CMC2XYZ$MH() {
        return RuntimeHelper.requireNonNull(constants$219.vips_CMC2XYZ$MH,"vips_CMC2XYZ");
    }
    public static int vips_CMC2XYZ ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_CMC2XYZ$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_Lab2XYZ$MH() {
        return RuntimeHelper.requireNonNull(constants$219.vips_Lab2XYZ$MH,"vips_Lab2XYZ");
    }
    public static int vips_Lab2XYZ ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_Lab2XYZ$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_XYZ2Lab$MH() {
        return RuntimeHelper.requireNonNull(constants$219.vips_XYZ2Lab$MH,"vips_XYZ2Lab");
    }
    public static int vips_XYZ2Lab ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_XYZ2Lab$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_XYZ2scRGB$MH() {
        return RuntimeHelper.requireNonNull(constants$219.vips_XYZ2scRGB$MH,"vips_XYZ2scRGB");
    }
    public static int vips_XYZ2scRGB ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_XYZ2scRGB$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_scRGB2sRGB$MH() {
        return RuntimeHelper.requireNonNull(constants$220.vips_scRGB2sRGB$MH,"vips_scRGB2sRGB");
    }
    public static int vips_scRGB2sRGB ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_scRGB2sRGB$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_scRGB2BW$MH() {
        return RuntimeHelper.requireNonNull(constants$220.vips_scRGB2BW$MH,"vips_scRGB2BW");
    }
    public static int vips_scRGB2BW ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_scRGB2BW$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sRGB2scRGB$MH() {
        return RuntimeHelper.requireNonNull(constants$220.vips_sRGB2scRGB$MH,"vips_sRGB2scRGB");
    }
    public static int vips_sRGB2scRGB ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_sRGB2scRGB$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_scRGB2XYZ$MH() {
        return RuntimeHelper.requireNonNull(constants$220.vips_scRGB2XYZ$MH,"vips_scRGB2XYZ");
    }
    public static int vips_scRGB2XYZ ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_scRGB2XYZ$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_HSV2sRGB$MH() {
        return RuntimeHelper.requireNonNull(constants$220.vips_HSV2sRGB$MH,"vips_HSV2sRGB");
    }
    public static int vips_HSV2sRGB ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_HSV2sRGB$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sRGB2HSV$MH() {
        return RuntimeHelper.requireNonNull(constants$220.vips_sRGB2HSV$MH,"vips_sRGB2HSV");
    }
    public static int vips_sRGB2HSV ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_sRGB2HSV$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_LCh2CMC$MH() {
        return RuntimeHelper.requireNonNull(constants$221.vips_LCh2CMC$MH,"vips_LCh2CMC");
    }
    public static int vips_LCh2CMC ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_LCh2CMC$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_CMC2LCh$MH() {
        return RuntimeHelper.requireNonNull(constants$221.vips_CMC2LCh$MH,"vips_CMC2LCh");
    }
    public static int vips_CMC2LCh ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_CMC2LCh$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_XYZ2Yxy$MH() {
        return RuntimeHelper.requireNonNull(constants$221.vips_XYZ2Yxy$MH,"vips_XYZ2Yxy");
    }
    public static int vips_XYZ2Yxy ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_XYZ2Yxy$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_Yxy2XYZ$MH() {
        return RuntimeHelper.requireNonNull(constants$221.vips_Yxy2XYZ$MH,"vips_Yxy2XYZ");
    }
    public static int vips_Yxy2XYZ ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_Yxy2XYZ$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_LabS2Lab$MH() {
        return RuntimeHelper.requireNonNull(constants$221.vips_LabS2Lab$MH,"vips_LabS2Lab");
    }
    public static int vips_LabS2Lab ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_LabS2Lab$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_Lab2LabS$MH() {
        return RuntimeHelper.requireNonNull(constants$221.vips_Lab2LabS$MH,"vips_Lab2LabS");
    }
    public static int vips_Lab2LabS ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_Lab2LabS$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_CMYK2XYZ$MH() {
        return RuntimeHelper.requireNonNull(constants$222.vips_CMYK2XYZ$MH,"vips_CMYK2XYZ");
    }
    public static int vips_CMYK2XYZ ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_CMYK2XYZ$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_XYZ2CMYK$MH() {
        return RuntimeHelper.requireNonNull(constants$222.vips_XYZ2CMYK$MH,"vips_XYZ2CMYK");
    }
    public static int vips_XYZ2CMYK ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_XYZ2CMYK$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_profile_load$MH() {
        return RuntimeHelper.requireNonNull(constants$222.vips_profile_load$MH,"vips_profile_load");
    }
    public static int vips_profile_load ( Addressable name,  Addressable profile, Object... x2) {
        var mh$ = vips_profile_load$MH();
        try {
            return (int)mh$.invokeExact(name, profile, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_icc_present$MH() {
        return RuntimeHelper.requireNonNull(constants$222.vips_icc_present$MH,"vips_icc_present");
    }
    public static int vips_icc_present () {
        var mh$ = vips_icc_present$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_icc_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$222.vips_icc_transform$MH,"vips_icc_transform");
    }
    public static int vips_icc_transform ( Addressable in,  Addressable out,  Addressable output_profile, Object... x3) {
        var mh$ = vips_icc_transform$MH();
        try {
            return (int)mh$.invokeExact(in, out, output_profile, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_icc_import$MH() {
        return RuntimeHelper.requireNonNull(constants$222.vips_icc_import$MH,"vips_icc_import");
    }
    public static int vips_icc_import ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_icc_import$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_icc_export$MH() {
        return RuntimeHelper.requireNonNull(constants$223.vips_icc_export$MH,"vips_icc_export");
    }
    public static int vips_icc_export ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_icc_export$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_icc_ac2rc$MH() {
        return RuntimeHelper.requireNonNull(constants$223.vips_icc_ac2rc$MH,"vips_icc_ac2rc");
    }
    public static int vips_icc_ac2rc ( Addressable in,  Addressable out,  Addressable profile_filename) {
        var mh$ = vips_icc_ac2rc$MH();
        try {
            return (int)mh$.invokeExact(in, out, profile_filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_icc_is_compatible_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$223.vips_icc_is_compatible_profile$MH,"vips_icc_is_compatible_profile");
    }
    public static int vips_icc_is_compatible_profile ( Addressable image,  Addressable data,  long data_length) {
        var mh$ = vips_icc_is_compatible_profile$MH();
        try {
            return (int)mh$.invokeExact(image, data, data_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dE76$MH() {
        return RuntimeHelper.requireNonNull(constants$223.vips_dE76$MH,"vips_dE76");
    }
    public static int vips_dE76 ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_dE76$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dE00$MH() {
        return RuntimeHelper.requireNonNull(constants$223.vips_dE00$MH,"vips_dE00");
    }
    public static int vips_dE00 ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_dE00$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dECMC$MH() {
        return RuntimeHelper.requireNonNull(constants$223.vips_dECMC$MH,"vips_dECMC");
    }
    public static int vips_dECMC ( Addressable left,  Addressable right,  Addressable out, Object... x3) {
        var mh$ = vips_dECMC$MH();
        try {
            return (int)mh$.invokeExact(left, right, out, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_Lab2XYZ$MH() {
        return RuntimeHelper.requireNonNull(constants$224.vips_col_Lab2XYZ$MH,"vips_col_Lab2XYZ");
    }
    public static void vips_col_Lab2XYZ ( float L,  float a,  float b,  Addressable X,  Addressable Y,  Addressable Z) {
        var mh$ = vips_col_Lab2XYZ$MH();
        try {
            mh$.invokeExact(L, a, b, X, Y, Z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_XYZ2Lab$MH() {
        return RuntimeHelper.requireNonNull(constants$224.vips_col_XYZ2Lab$MH,"vips_col_XYZ2Lab");
    }
    public static void vips_col_XYZ2Lab ( float X,  float Y,  float Z,  Addressable L,  Addressable a,  Addressable b) {
        var mh$ = vips_col_XYZ2Lab$MH();
        try {
            mh$.invokeExact(X, Y, Z, L, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_ab2h$MH() {
        return RuntimeHelper.requireNonNull(constants$224.vips_col_ab2h$MH,"vips_col_ab2h");
    }
    public static double vips_col_ab2h ( double a,  double b) {
        var mh$ = vips_col_ab2h$MH();
        try {
            return (double)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_ab2Ch$MH() {
        return RuntimeHelper.requireNonNull(constants$224.vips_col_ab2Ch$MH,"vips_col_ab2Ch");
    }
    public static void vips_col_ab2Ch ( float a,  float b,  Addressable C,  Addressable h) {
        var mh$ = vips_col_ab2Ch$MH();
        try {
            mh$.invokeExact(a, b, C, h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_Ch2ab$MH() {
        return RuntimeHelper.requireNonNull(constants$224.vips_col_Ch2ab$MH,"vips_col_Ch2ab");
    }
    public static void vips_col_Ch2ab ( float C,  float h,  Addressable a,  Addressable b) {
        var mh$ = vips_col_Ch2ab$MH();
        try {
            mh$.invokeExact(C, h, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_L2Lcmc$MH() {
        return RuntimeHelper.requireNonNull(constants$224.vips_col_L2Lcmc$MH,"vips_col_L2Lcmc");
    }
    public static float vips_col_L2Lcmc ( float L) {
        var mh$ = vips_col_L2Lcmc$MH();
        try {
            return (float)mh$.invokeExact(L);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_C2Ccmc$MH() {
        return RuntimeHelper.requireNonNull(constants$225.vips_col_C2Ccmc$MH,"vips_col_C2Ccmc");
    }
    public static float vips_col_C2Ccmc ( float C) {
        var mh$ = vips_col_C2Ccmc$MH();
        try {
            return (float)mh$.invokeExact(C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_Ch2hcmc$MH() {
        return RuntimeHelper.requireNonNull(constants$225.vips_col_Ch2hcmc$MH,"vips_col_Ch2hcmc");
    }
    public static float vips_col_Ch2hcmc ( float C,  float h) {
        var mh$ = vips_col_Ch2hcmc$MH();
        try {
            return (float)mh$.invokeExact(C, h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_make_tables_CMC$MH() {
        return RuntimeHelper.requireNonNull(constants$225.vips_col_make_tables_CMC$MH,"vips_col_make_tables_CMC");
    }
    public static void vips_col_make_tables_CMC () {
        var mh$ = vips_col_make_tables_CMC$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_Lcmc2L$MH() {
        return RuntimeHelper.requireNonNull(constants$225.vips_col_Lcmc2L$MH,"vips_col_Lcmc2L");
    }
    public static float vips_col_Lcmc2L ( float Lcmc) {
        var mh$ = vips_col_Lcmc2L$MH();
        try {
            return (float)mh$.invokeExact(Lcmc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_Ccmc2C$MH() {
        return RuntimeHelper.requireNonNull(constants$225.vips_col_Ccmc2C$MH,"vips_col_Ccmc2C");
    }
    public static float vips_col_Ccmc2C ( float Ccmc) {
        var mh$ = vips_col_Ccmc2C$MH();
        try {
            return (float)mh$.invokeExact(Ccmc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_Chcmc2h$MH() {
        return RuntimeHelper.requireNonNull(constants$225.vips_col_Chcmc2h$MH,"vips_col_Chcmc2h");
    }
    public static float vips_col_Chcmc2h ( float C,  float hcmc) {
        var mh$ = vips_col_Chcmc2h$MH();
        try {
            return (float)mh$.invokeExact(C, hcmc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_sRGB2scRGB_8$MH() {
        return RuntimeHelper.requireNonNull(constants$226.vips_col_sRGB2scRGB_8$MH,"vips_col_sRGB2scRGB_8");
    }
    public static int vips_col_sRGB2scRGB_8 ( int r,  int g,  int b,  Addressable R,  Addressable G,  Addressable B) {
        var mh$ = vips_col_sRGB2scRGB_8$MH();
        try {
            return (int)mh$.invokeExact(r, g, b, R, G, B);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_sRGB2scRGB_16$MH() {
        return RuntimeHelper.requireNonNull(constants$226.vips_col_sRGB2scRGB_16$MH,"vips_col_sRGB2scRGB_16");
    }
    public static int vips_col_sRGB2scRGB_16 ( int r,  int g,  int b,  Addressable R,  Addressable G,  Addressable B) {
        var mh$ = vips_col_sRGB2scRGB_16$MH();
        try {
            return (int)mh$.invokeExact(r, g, b, R, G, B);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_sRGB2scRGB_8_noclip$MH() {
        return RuntimeHelper.requireNonNull(constants$226.vips_col_sRGB2scRGB_8_noclip$MH,"vips_col_sRGB2scRGB_8_noclip");
    }
    public static int vips_col_sRGB2scRGB_8_noclip ( int r,  int g,  int b,  Addressable R,  Addressable G,  Addressable B) {
        var mh$ = vips_col_sRGB2scRGB_8_noclip$MH();
        try {
            return (int)mh$.invokeExact(r, g, b, R, G, B);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_sRGB2scRGB_16_noclip$MH() {
        return RuntimeHelper.requireNonNull(constants$226.vips_col_sRGB2scRGB_16_noclip$MH,"vips_col_sRGB2scRGB_16_noclip");
    }
    public static int vips_col_sRGB2scRGB_16_noclip ( int r,  int g,  int b,  Addressable R,  Addressable G,  Addressable B) {
        var mh$ = vips_col_sRGB2scRGB_16_noclip$MH();
        try {
            return (int)mh$.invokeExact(r, g, b, R, G, B);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_scRGB2XYZ$MH() {
        return RuntimeHelper.requireNonNull(constants$226.vips_col_scRGB2XYZ$MH,"vips_col_scRGB2XYZ");
    }
    public static int vips_col_scRGB2XYZ ( float R,  float G,  float B,  Addressable X,  Addressable Y,  Addressable Z) {
        var mh$ = vips_col_scRGB2XYZ$MH();
        try {
            return (int)mh$.invokeExact(R, G, B, X, Y, Z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_XYZ2scRGB$MH() {
        return RuntimeHelper.requireNonNull(constants$226.vips_col_XYZ2scRGB$MH,"vips_col_XYZ2scRGB");
    }
    public static int vips_col_XYZ2scRGB ( float X,  float Y,  float Z,  Addressable R,  Addressable G,  Addressable B) {
        var mh$ = vips_col_XYZ2scRGB$MH();
        try {
            return (int)mh$.invokeExact(X, Y, Z, R, G, B);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_scRGB2sRGB_8$MH() {
        return RuntimeHelper.requireNonNull(constants$227.vips_col_scRGB2sRGB_8$MH,"vips_col_scRGB2sRGB_8");
    }
    public static int vips_col_scRGB2sRGB_8 ( float R,  float G,  float B,  Addressable r,  Addressable g,  Addressable b,  Addressable og) {
        var mh$ = vips_col_scRGB2sRGB_8$MH();
        try {
            return (int)mh$.invokeExact(R, G, B, r, g, b, og);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_scRGB2sRGB_16$MH() {
        return RuntimeHelper.requireNonNull(constants$227.vips_col_scRGB2sRGB_16$MH,"vips_col_scRGB2sRGB_16");
    }
    public static int vips_col_scRGB2sRGB_16 ( float R,  float G,  float B,  Addressable r,  Addressable g,  Addressable b,  Addressable og) {
        var mh$ = vips_col_scRGB2sRGB_16$MH();
        try {
            return (int)mh$.invokeExact(R, G, B, r, g, b, og);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_scRGB2BW_16$MH() {
        return RuntimeHelper.requireNonNull(constants$227.vips_col_scRGB2BW_16$MH,"vips_col_scRGB2BW_16");
    }
    public static int vips_col_scRGB2BW_16 ( float R,  float G,  float B,  Addressable g,  Addressable og) {
        var mh$ = vips_col_scRGB2BW_16$MH();
        try {
            return (int)mh$.invokeExact(R, G, B, g, og);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_scRGB2BW_8$MH() {
        return RuntimeHelper.requireNonNull(constants$227.vips_col_scRGB2BW_8$MH,"vips_col_scRGB2BW_8");
    }
    public static int vips_col_scRGB2BW_8 ( float R,  float G,  float B,  Addressable g,  Addressable og) {
        var mh$ = vips_col_scRGB2BW_8$MH();
        try {
            return (int)mh$.invokeExact(R, G, B, g, og);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pythagoras$MH() {
        return RuntimeHelper.requireNonNull(constants$227.vips_pythagoras$MH,"vips_pythagoras");
    }
    public static float vips_pythagoras ( float L1,  float a1,  float b1,  float L2,  float a2,  float b2) {
        var mh$ = vips_pythagoras$MH();
        try {
            return (float)mh$.invokeExact(L1, a1, b1, L2, a2, b2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_col_dE00$MH() {
        return RuntimeHelper.requireNonNull(constants$227.vips_col_dE00$MH,"vips_col_dE00");
    }
    public static float vips_col_dE00 ( float L1,  float a1,  float b1,  float L2,  float a2,  float b2) {
        var mh$ = vips_col_dE00$MH();
        try {
            return (float)mh$.invokeExact(L1, a1, b1, L2, a2, b2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_COMBINE_MODE_SET() {
        return (int)0L;
    }
    public static int VIPS_COMBINE_MODE_ADD() {
        return (int)1L;
    }
    public static int VIPS_COMBINE_MODE_LAST() {
        return (int)2L;
    }
    public static MethodHandle vips_draw_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$228.vips_draw_rect$MH,"vips_draw_rect");
    }
    public static int vips_draw_rect ( Addressable image,  Addressable ink,  int n,  int left,  int top,  int width,  int height, Object... x7) {
        var mh$ = vips_draw_rect$MH();
        try {
            return (int)mh$.invokeExact(image, ink, n, left, top, width, height, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_rect1$MH() {
        return RuntimeHelper.requireNonNull(constants$228.vips_draw_rect1$MH,"vips_draw_rect1");
    }
    public static int vips_draw_rect1 ( Addressable image,  double ink,  int left,  int top,  int width,  int height, Object... x6) {
        var mh$ = vips_draw_rect1$MH();
        try {
            return (int)mh$.invokeExact(image, ink, left, top, width, height, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_point$MH() {
        return RuntimeHelper.requireNonNull(constants$228.vips_draw_point$MH,"vips_draw_point");
    }
    public static int vips_draw_point ( Addressable image,  Addressable ink,  int n,  int x,  int y, Object... x5) {
        var mh$ = vips_draw_point$MH();
        try {
            return (int)mh$.invokeExact(image, ink, n, x, y, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_point1$MH() {
        return RuntimeHelper.requireNonNull(constants$228.vips_draw_point1$MH,"vips_draw_point1");
    }
    public static int vips_draw_point1 ( Addressable image,  double ink,  int x,  int y, Object... x4) {
        var mh$ = vips_draw_point1$MH();
        try {
            return (int)mh$.invokeExact(image, ink, x, y, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_image$MH() {
        return RuntimeHelper.requireNonNull(constants$228.vips_draw_image$MH,"vips_draw_image");
    }
    public static int vips_draw_image ( Addressable image,  Addressable sub,  int x,  int y, Object... x4) {
        var mh$ = vips_draw_image$MH();
        try {
            return (int)mh$.invokeExact(image, sub, x, y, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$228.vips_draw_mask$MH,"vips_draw_mask");
    }
    public static int vips_draw_mask ( Addressable image,  Addressable ink,  int n,  Addressable mask,  int x,  int y, Object... x6) {
        var mh$ = vips_draw_mask$MH();
        try {
            return (int)mh$.invokeExact(image, ink, n, mask, x, y, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_mask1$MH() {
        return RuntimeHelper.requireNonNull(constants$229.vips_draw_mask1$MH,"vips_draw_mask1");
    }
    public static int vips_draw_mask1 ( Addressable image,  double ink,  Addressable mask,  int x,  int y, Object... x5) {
        var mh$ = vips_draw_mask1$MH();
        try {
            return (int)mh$.invokeExact(image, ink, mask, x, y, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_line$MH() {
        return RuntimeHelper.requireNonNull(constants$229.vips_draw_line$MH,"vips_draw_line");
    }
    public static int vips_draw_line ( Addressable image,  Addressable ink,  int n,  int x1,  int y1,  int x2,  int y2, Object... x7) {
        var mh$ = vips_draw_line$MH();
        try {
            return (int)mh$.invokeExact(image, ink, n, x1, y1, x2, y2, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_line1$MH() {
        return RuntimeHelper.requireNonNull(constants$229.vips_draw_line1$MH,"vips_draw_line1");
    }
    public static int vips_draw_line1 ( Addressable image,  double ink,  int x1,  int y1,  int x2,  int y2, Object... x6) {
        var mh$ = vips_draw_line1$MH();
        try {
            return (int)mh$.invokeExact(image, ink, x1, y1, x2, y2, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_circle$MH() {
        return RuntimeHelper.requireNonNull(constants$229.vips_draw_circle$MH,"vips_draw_circle");
    }
    public static int vips_draw_circle ( Addressable image,  Addressable ink,  int n,  int cx,  int cy,  int radius, Object... x6) {
        var mh$ = vips_draw_circle$MH();
        try {
            return (int)mh$.invokeExact(image, ink, n, cx, cy, radius, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_circle1$MH() {
        return RuntimeHelper.requireNonNull(constants$229.vips_draw_circle1$MH,"vips_draw_circle1");
    }
    public static int vips_draw_circle1 ( Addressable image,  double ink,  int cx,  int cy,  int radius, Object... x5) {
        var mh$ = vips_draw_circle1$MH();
        try {
            return (int)mh$.invokeExact(image, ink, cx, cy, radius, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_flood$MH() {
        return RuntimeHelper.requireNonNull(constants$229.vips_draw_flood$MH,"vips_draw_flood");
    }
    public static int vips_draw_flood ( Addressable image,  Addressable ink,  int n,  int x,  int y, Object... x5) {
        var mh$ = vips_draw_flood$MH();
        try {
            return (int)mh$.invokeExact(image, ink, n, x, y, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_flood1$MH() {
        return RuntimeHelper.requireNonNull(constants$230.vips_draw_flood1$MH,"vips_draw_flood1");
    }
    public static int vips_draw_flood1 ( Addressable image,  double ink,  int x,  int y, Object... x4) {
        var mh$ = vips_draw_flood1$MH();
        try {
            return (int)mh$.invokeExact(image, ink, x, y, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_draw_smudge$MH() {
        return RuntimeHelper.requireNonNull(constants$230.vips_draw_smudge$MH,"vips_draw_smudge");
    }
    public static int vips_draw_smudge ( Addressable image,  int left,  int top,  int width,  int height, Object... x5) {
        var mh$ = vips_draw_smudge$MH();
        try {
            return (int)mh$.invokeExact(image, left, top, width, height, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_TEXT_WRAP_WORD() {
        return (int)0L;
    }
    public static int VIPS_TEXT_WRAP_CHAR() {
        return (int)1L;
    }
    public static int VIPS_TEXT_WRAP_WORD_CHAR() {
        return (int)2L;
    }
    public static int VIPS_TEXT_WRAP_NONE() {
        return (int)3L;
    }
    public static int VIPS_TEXT_WRAP_LAST() {
        return (int)4L;
    }
    public static MethodHandle vips_black$MH() {
        return RuntimeHelper.requireNonNull(constants$230.vips_black$MH,"vips_black");
    }
    public static int vips_black ( Addressable out,  int width,  int height, Object... x3) {
        var mh$ = vips_black$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_xyz$MH() {
        return RuntimeHelper.requireNonNull(constants$230.vips_xyz$MH,"vips_xyz");
    }
    public static int vips_xyz ( Addressable out,  int width,  int height, Object... x3) {
        var mh$ = vips_xyz$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_grey$MH() {
        return RuntimeHelper.requireNonNull(constants$230.vips_grey$MH,"vips_grey");
    }
    public static int vips_grey ( Addressable out,  int width,  int height, Object... x3) {
        var mh$ = vips_grey$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gaussmat$MH() {
        return RuntimeHelper.requireNonNull(constants$230.vips_gaussmat$MH,"vips_gaussmat");
    }
    public static int vips_gaussmat ( Addressable out,  double sigma,  double min_ampl, Object... x3) {
        var mh$ = vips_gaussmat$MH();
        try {
            return (int)mh$.invokeExact(out, sigma, min_ampl, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_logmat$MH() {
        return RuntimeHelper.requireNonNull(constants$231.vips_logmat$MH,"vips_logmat");
    }
    public static int vips_logmat ( Addressable out,  double sigma,  double min_ampl, Object... x3) {
        var mh$ = vips_logmat$MH();
        try {
            return (int)mh$.invokeExact(out, sigma, min_ampl, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_text$MH() {
        return RuntimeHelper.requireNonNull(constants$231.vips_text$MH,"vips_text");
    }
    public static int vips_text ( Addressable out,  Addressable text, Object... x2) {
        var mh$ = vips_text$MH();
        try {
            return (int)mh$.invokeExact(out, text, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_gaussnoise$MH() {
        return RuntimeHelper.requireNonNull(constants$231.vips_gaussnoise$MH,"vips_gaussnoise");
    }
    public static int vips_gaussnoise ( Addressable out,  int width,  int height, Object... x3) {
        var mh$ = vips_gaussnoise$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_eye$MH() {
        return RuntimeHelper.requireNonNull(constants$231.vips_eye$MH,"vips_eye");
    }
    public static int vips_eye ( Addressable out,  int width,  int height, Object... x3) {
        var mh$ = vips_eye$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sines$MH() {
        return RuntimeHelper.requireNonNull(constants$231.vips_sines$MH,"vips_sines");
    }
    public static int vips_sines ( Addressable out,  int width,  int height, Object... x3) {
        var mh$ = vips_sines$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_zone$MH() {
        return RuntimeHelper.requireNonNull(constants$231.vips_zone$MH,"vips_zone");
    }
    public static int vips_zone ( Addressable out,  int width,  int height, Object... x3) {
        var mh$ = vips_zone$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$232.vips_identity$MH,"vips_identity");
    }
    public static int vips_identity ( Addressable out, Object... x1) {
        var mh$ = vips_identity$MH();
        try {
            return (int)mh$.invokeExact(out, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buildlut$MH() {
        return RuntimeHelper.requireNonNull(constants$232.vips_buildlut$MH,"vips_buildlut");
    }
    public static int vips_buildlut ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_buildlut$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_invertlut$MH() {
        return RuntimeHelper.requireNonNull(constants$232.vips_invertlut$MH,"vips_invertlut");
    }
    public static int vips_invertlut ( Addressable in,  Addressable out, Object... x2) {
        var mh$ = vips_invertlut$MH();
        try {
            return (int)mh$.invokeExact(in, out, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tonelut$MH() {
        return RuntimeHelper.requireNonNull(constants$232.vips_tonelut$MH,"vips_tonelut");
    }
    public static int vips_tonelut ( Addressable out, Object... x1) {
        var mh$ = vips_tonelut$MH();
        try {
            return (int)mh$.invokeExact(out, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_ideal$MH() {
        return RuntimeHelper.requireNonNull(constants$232.vips_mask_ideal$MH,"vips_mask_ideal");
    }
    public static int vips_mask_ideal ( Addressable out,  int width,  int height,  double frequency_cutoff, Object... x4) {
        var mh$ = vips_mask_ideal$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, frequency_cutoff, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_ideal_ring$MH() {
        return RuntimeHelper.requireNonNull(constants$232.vips_mask_ideal_ring$MH,"vips_mask_ideal_ring");
    }
    public static int vips_mask_ideal_ring ( Addressable out,  int width,  int height,  double frequency_cutoff,  double ringwidth, Object... x5) {
        var mh$ = vips_mask_ideal_ring$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, frequency_cutoff, ringwidth, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_ideal_band$MH() {
        return RuntimeHelper.requireNonNull(constants$233.vips_mask_ideal_band$MH,"vips_mask_ideal_band");
    }
    public static int vips_mask_ideal_band ( Addressable out,  int width,  int height,  double frequency_cutoff_x,  double frequency_cutoff_y,  double radius, Object... x6) {
        var mh$ = vips_mask_ideal_band$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, frequency_cutoff_x, frequency_cutoff_y, radius, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_butterworth$MH() {
        return RuntimeHelper.requireNonNull(constants$233.vips_mask_butterworth$MH,"vips_mask_butterworth");
    }
    public static int vips_mask_butterworth ( Addressable out,  int width,  int height,  double order,  double frequency_cutoff,  double amplitude_cutoff, Object... x6) {
        var mh$ = vips_mask_butterworth$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, order, frequency_cutoff, amplitude_cutoff, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_butterworth_ring$MH() {
        return RuntimeHelper.requireNonNull(constants$233.vips_mask_butterworth_ring$MH,"vips_mask_butterworth_ring");
    }
    public static int vips_mask_butterworth_ring ( Addressable out,  int width,  int height,  double order,  double frequency_cutoff,  double amplitude_cutoff,  double ringwidth, Object... x7) {
        var mh$ = vips_mask_butterworth_ring$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, order, frequency_cutoff, amplitude_cutoff, ringwidth, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_butterworth_band$MH() {
        return RuntimeHelper.requireNonNull(constants$233.vips_mask_butterworth_band$MH,"vips_mask_butterworth_band");
    }
    public static int vips_mask_butterworth_band ( Addressable out,  int width,  int height,  double order,  double frequency_cutoff_x,  double frequency_cutoff_y,  double radius,  double amplitude_cutoff, Object... x8) {
        var mh$ = vips_mask_butterworth_band$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, order, frequency_cutoff_x, frequency_cutoff_y, radius, amplitude_cutoff, x8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_gaussian$MH() {
        return RuntimeHelper.requireNonNull(constants$233.vips_mask_gaussian$MH,"vips_mask_gaussian");
    }
    public static int vips_mask_gaussian ( Addressable out,  int width,  int height,  double frequency_cutoff,  double amplitude_cutoff, Object... x5) {
        var mh$ = vips_mask_gaussian$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, frequency_cutoff, amplitude_cutoff, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_gaussian_ring$MH() {
        return RuntimeHelper.requireNonNull(constants$233.vips_mask_gaussian_ring$MH,"vips_mask_gaussian_ring");
    }
    public static int vips_mask_gaussian_ring ( Addressable out,  int width,  int height,  double frequency_cutoff,  double amplitude_cutoff,  double ringwidth, Object... x6) {
        var mh$ = vips_mask_gaussian_ring$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, frequency_cutoff, amplitude_cutoff, ringwidth, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_gaussian_band$MH() {
        return RuntimeHelper.requireNonNull(constants$234.vips_mask_gaussian_band$MH,"vips_mask_gaussian_band");
    }
    public static int vips_mask_gaussian_band ( Addressable out,  int width,  int height,  double frequency_cutoff_x,  double frequency_cutoff_y,  double radius,  double amplitude_cutoff, Object... x7) {
        var mh$ = vips_mask_gaussian_band$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, frequency_cutoff_x, frequency_cutoff_y, radius, amplitude_cutoff, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mask_fractal$MH() {
        return RuntimeHelper.requireNonNull(constants$234.vips_mask_fractal$MH,"vips_mask_fractal");
    }
    public static int vips_mask_fractal ( Addressable out,  int width,  int height,  double fractal_dimension, Object... x4) {
        var mh$ = vips_mask_fractal$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, fractal_dimension, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_fractsurf$MH() {
        return RuntimeHelper.requireNonNull(constants$234.vips_fractsurf$MH,"vips_fractsurf");
    }
    public static int vips_fractsurf ( Addressable out,  int width,  int height,  double fractal_dimension, Object... x4) {
        var mh$ = vips_fractsurf$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, fractal_dimension, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_worley$MH() {
        return RuntimeHelper.requireNonNull(constants$234.vips_worley$MH,"vips_worley");
    }
    public static int vips_worley ( Addressable out,  int width,  int height, Object... x3) {
        var mh$ = vips_worley$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_perlin$MH() {
        return RuntimeHelper.requireNonNull(constants$234.vips_perlin$MH,"vips_perlin");
    }
    public static int vips_perlin ( Addressable out,  int width,  int height, Object... x3) {
        var mh$ = vips_perlin$MH();
        try {
            return (int)mh$.invokeExact(out, width, height, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_video_v4l1$MH() {
        return RuntimeHelper.requireNonNull(constants$234.im_video_v4l1$MH,"im_video_v4l1");
    }
    public static int im_video_v4l1 ( Addressable im,  Addressable device,  int channel,  int brightness,  int colour,  int contrast,  int hue,  int ngrabs) {
        var mh$ = im_video_v4l1$MH();
        try {
            return (int)mh$.invokeExact(im, device, channel, brightness, colour, contrast, hue, ngrabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_video_test$MH() {
        return RuntimeHelper.requireNonNull(constants$235.im_video_test$MH,"im_video_test");
    }
    public static int im_video_test ( Addressable im,  int brightness,  int error) {
        var mh$ = im_video_test$MH();
        try {
            return (int)mh$.invokeExact(im, brightness, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_init$MH() {
        return RuntimeHelper.requireNonNull(constants$235.vips_init$MH,"vips_init");
    }
    public static int vips_init ( Addressable argv0) {
        var mh$ = vips_init$MH();
        try {
            return (int)mh$.invokeExact(argv0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_get_argv0$MH() {
        return RuntimeHelper.requireNonNull(constants$235.vips_get_argv0$MH,"vips_get_argv0");
    }
    public static MemoryAddress vips_get_argv0 () {
        var mh$ = vips_get_argv0$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_get_prgname$MH() {
        return RuntimeHelper.requireNonNull(constants$235.vips_get_prgname$MH,"vips_get_prgname");
    }
    public static MemoryAddress vips_get_prgname () {
        var mh$ = vips_get_prgname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$235.vips_shutdown$MH,"vips_shutdown");
    }
    public static void vips_shutdown () {
        var mh$ = vips_shutdown$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thread_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$235.vips_thread_shutdown$MH,"vips_thread_shutdown");
    }
    public static void vips_thread_shutdown () {
        var mh$ = vips_thread_shutdown$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_add_option_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$236.vips_add_option_entries$MH,"vips_add_option_entries");
    }
    public static void vips_add_option_entries ( Addressable option_group) {
        var mh$ = vips_add_option_entries$MH();
        try {
            mh$.invokeExact(option_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_leak_set$MH() {
        return RuntimeHelper.requireNonNull(constants$236.vips_leak_set$MH,"vips_leak_set");
    }
    public static void vips_leak_set ( int leak) {
        var mh$ = vips_leak_set$MH();
        try {
            mh$.invokeExact(leak);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_block_untrusted_set$MH() {
        return RuntimeHelper.requireNonNull(constants$236.vips_block_untrusted_set$MH,"vips_block_untrusted_set");
    }
    public static void vips_block_untrusted_set ( int state) {
        var mh$ = vips_block_untrusted_set$MH();
        try {
            mh$.invokeExact(state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_version_string$MH() {
        return RuntimeHelper.requireNonNull(constants$236.vips_version_string$MH,"vips_version_string");
    }
    public static MemoryAddress vips_version_string () {
        var mh$ = vips_version_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_version$MH() {
        return RuntimeHelper.requireNonNull(constants$236.vips_version$MH,"vips_version");
    }
    public static int vips_version ( int flag) {
        var mh$ = vips_version$MH();
        try {
            return (int)mh$.invokeExact(flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_guess_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$236.vips_guess_prefix$MH,"vips_guess_prefix");
    }
    public static MemoryAddress vips_guess_prefix ( Addressable argv0,  Addressable env_name) {
        var mh$ = vips_guess_prefix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(argv0, env_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_guess_libdir$MH() {
        return RuntimeHelper.requireNonNull(constants$237.vips_guess_libdir$MH,"vips_guess_libdir");
    }
    public static MemoryAddress vips_guess_libdir ( Addressable argv0,  Addressable env_name) {
        var mh$ = vips_guess_libdir$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(argv0, env_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryAddress NULL() {
        return constants$237.NULL$ADDR;
    }
    public static long LLONG_MIN() {
        return -9223372036854775808L;
    }
    public static long LLONG_MAX() {
        return 9223372036854775807L;
    }
    public static long ULLONG_MAX() {
        return -1L;
    }
    public static int SCHAR_MAX() {
        return (int)127L;
    }
    public static int SHRT_MAX() {
        return (int)32767L;
    }
    public static int INT_MAX() {
        return (int)2147483647L;
    }
    public static long LONG_MAX() {
        return 9223372036854775807L;
    }
    public static int SCHAR_MIN() {
        return (int)-128L;
    }
    public static int SHRT_MIN() {
        return (int)-32768L;
    }
    public static int INT_MIN() {
        return (int)-2147483648L;
    }
    public static long LONG_MIN() {
        return -9223372036854775808L;
    }
    public static int UCHAR_MAX() {
        return (int)255L;
    }
    public static int USHRT_MAX() {
        return (int)65535L;
    }
    public static int UINT_MAX() {
        return (int)4294967295L;
    }
    public static long ULONG_MAX() {
        return -1L;
    }
    public static int CHAR_BIT() {
        return (int)8L;
    }
    public static int CHAR_MIN() {
        return (int)-128L;
    }
    public static int CHAR_MAX() {
        return (int)127L;
    }
    public static int FLT_EVAL_METHOD() {
        return (int)0L;
    }
    public static int FLT_RADIX() {
        return (int)2L;
    }
    public static int FLT_MANT_DIG() {
        return (int)24L;
    }
    public static int DBL_MANT_DIG() {
        return (int)53L;
    }
    public static int LDBL_MANT_DIG() {
        return (int)64L;
    }
    public static int DECIMAL_DIG() {
        return (int)21L;
    }
    public static int FLT_DIG() {
        return (int)6L;
    }
    public static int DBL_DIG() {
        return (int)15L;
    }
    public static int LDBL_DIG() {
        return (int)18L;
    }
    public static int FLT_MIN_EXP() {
        return (int)-125L;
    }
    public static int DBL_MIN_EXP() {
        return (int)-1021L;
    }
    public static int LDBL_MIN_EXP() {
        return (int)-16381L;
    }
    public static int FLT_MIN_10_EXP() {
        return (int)-37L;
    }
    public static int DBL_MIN_10_EXP() {
        return (int)-307L;
    }
    public static int LDBL_MIN_10_EXP() {
        return (int)-4931L;
    }
    public static int FLT_MAX_EXP() {
        return (int)128L;
    }
    public static int DBL_MAX_EXP() {
        return (int)1024L;
    }
    public static int LDBL_MAX_EXP() {
        return (int)16384L;
    }
    public static int FLT_MAX_10_EXP() {
        return (int)38L;
    }
    public static int DBL_MAX_10_EXP() {
        return (int)308L;
    }
    public static int LDBL_MAX_10_EXP() {
        return (int)4932L;
    }
    public static float FLT_MAX() {
        return 3.4028234663852886E38f;
    }
    public static double DBL_MAX() {
        return 1.7976931348623157E308d;
    }
    public static float FLT_EPSILON() {
        return 1.1920928955078125E-7f;
    }
    public static double DBL_EPSILON() {
        return 2.220446049250313E-16d;
    }
    public static float FLT_MIN() {
        return 1.1754943508222875E-38f;
    }
    public static double DBL_MIN() {
        return 2.2250738585072014E-308d;
    }
    public static float FLT_TRUE_MIN() {
        return 1.401298464324817E-45f;
    }
    public static double DBL_TRUE_MIN() {
        return 4.9E-324d;
    }
    public static int FLT_DECIMAL_DIG() {
        return (int)9L;
    }
    public static int DBL_DECIMAL_DIG() {
        return (int)17L;
    }
    public static int LDBL_DECIMAL_DIG() {
        return (int)21L;
    }
    public static int FLT_HAS_SUBNORM() {
        return (int)1L;
    }
    public static int DBL_HAS_SUBNORM() {
        return (int)1L;
    }
    public static int LDBL_HAS_SUBNORM() {
        return (int)1L;
    }
    public static float G_MINFLOAT() {
        return 1.1754943508222875E-38f;
    }
    public static float G_MAXFLOAT() {
        return 3.4028234663852886E38f;
    }
    public static double G_MINDOUBLE() {
        return 2.2250738585072014E-308d;
    }
    public static double G_MAXDOUBLE() {
        return 1.7976931348623157E308d;
    }
    public static int G_MINSHORT() {
        return (int)-32768L;
    }
    public static int G_MAXSHORT() {
        return (int)32767L;
    }
    public static int G_MAXUSHORT() {
        return (int)65535L;
    }
    public static int G_MININT() {
        return (int)-2147483648L;
    }
    public static int G_MAXINT() {
        return (int)2147483647L;
    }
    public static int G_MAXUINT() {
        return (int)4294967295L;
    }
    public static long G_MINLONG() {
        return -9223372036854775808L;
    }
    public static long G_MAXLONG() {
        return 9223372036854775807L;
    }
    public static long G_MAXULONG() {
        return -1L;
    }
    public static MemorySegment G_GINT16_MODIFIER() {
        return constants$237.G_GINT16_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINT16_FORMAT() {
        return constants$237.G_GINT16_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINT16_FORMAT() {
        return constants$237.G_GUINT16_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GINT32_MODIFIER() {
        return constants$237.G_GINT32_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINT32_FORMAT() {
        return constants$238.G_GINT32_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINT32_FORMAT() {
        return constants$238.G_GUINT32_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GINT64_MODIFIER() {
        return constants$238.G_GINT64_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINT64_FORMAT() {
        return constants$238.G_GINT64_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINT64_FORMAT() {
        return constants$238.G_GUINT64_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GSIZE_MODIFIER() {
        return constants$238.G_GSIZE_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GSSIZE_MODIFIER() {
        return constants$239.G_GSSIZE_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GSIZE_FORMAT() {
        return constants$239.G_GSIZE_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GSSIZE_FORMAT() {
        return constants$239.G_GSSIZE_FORMAT$SEGMENT;
    }
    public static long G_MAXSIZE() {
        return -1L;
    }
    public static long G_MINSSIZE() {
        return -9223372036854775808L;
    }
    public static long G_MAXSSIZE() {
        return 9223372036854775807L;
    }
    public static long G_MINOFFSET() {
        return -9223372036854775808L;
    }
    public static long G_MAXOFFSET() {
        return 9223372036854775807L;
    }
    public static MemorySegment G_GOFFSET_MODIFIER() {
        return constants$239.G_GOFFSET_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GOFFSET_FORMAT() {
        return constants$239.G_GOFFSET_FORMAT$SEGMENT;
    }
    public static MemorySegment G_POLLFD_FORMAT() {
        return constants$239.G_POLLFD_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GINTPTR_MODIFIER() {
        return constants$240.G_GINTPTR_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINTPTR_FORMAT() {
        return constants$240.G_GINTPTR_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINTPTR_FORMAT() {
        return constants$240.G_GUINTPTR_FORMAT$SEGMENT;
    }
    public static int G_BYTE_ORDER() {
        return (int)1234L;
    }
    public static MemorySegment G_MODULE_SUFFIX() {
        return constants$240.G_MODULE_SUFFIX$SEGMENT;
    }
    public static MemorySegment G_PID_FORMAT() {
        return constants$240.G_PID_FORMAT$SEGMENT;
    }
    public static int G_DIR_SEPARATOR() {
        return (int)47L;
    }
    public static MemorySegment G_DIR_SEPARATOR_S() {
        return constants$240.G_DIR_SEPARATOR_S$SEGMENT;
    }
    public static int G_SEARCHPATH_SEPARATOR() {
        return (int)58L;
    }
    public static MemorySegment G_SEARCHPATH_SEPARATOR_S() {
        return constants$241.G_SEARCHPATH_SEPARATOR_S$SEGMENT;
    }
    public static int G_MEM_ALIGN() {
        return (int)8L;
    }
    public static int G_TYPE_FUNDAMENTAL_MAX() {
        return (int)1020L;
    }
    public static long G_TYPE_INVALID() {
        return 0L;
    }
    public static long G_TYPE_NONE() {
        return 4L;
    }
    public static long G_TYPE_INTERFACE() {
        return 8L;
    }
    public static long G_TYPE_CHAR() {
        return 12L;
    }
    public static long G_TYPE_UCHAR() {
        return 16L;
    }
    public static long G_TYPE_BOOLEAN() {
        return 20L;
    }
    public static long G_TYPE_INT() {
        return 24L;
    }
    public static long G_TYPE_UINT() {
        return 28L;
    }
    public static long G_TYPE_LONG() {
        return 32L;
    }
    public static long G_TYPE_ULONG() {
        return 36L;
    }
    public static long G_TYPE_INT64() {
        return 40L;
    }
    public static long G_TYPE_UINT64() {
        return 44L;
    }
    public static long G_TYPE_ENUM() {
        return 48L;
    }
    public static long G_TYPE_FLAGS() {
        return 52L;
    }
    public static long G_TYPE_FLOAT() {
        return 56L;
    }
    public static long G_TYPE_DOUBLE() {
        return 60L;
    }
    public static long G_TYPE_STRING() {
        return 64L;
    }
    public static long G_TYPE_POINTER() {
        return 68L;
    }
    public static long G_TYPE_BOXED() {
        return 72L;
    }
    public static long G_TYPE_PARAM() {
        return 76L;
    }
    public static long G_TYPE_OBJECT() {
        return 80L;
    }
    public static long G_TYPE_VARIANT() {
        return 84L;
    }
    public static int G_TYPE_FUNDAMENTAL_SHIFT() {
        return (int)2L;
    }
    public static int G_TYPE_RESERVED_GLIB_FIRST() {
        return (int)22L;
    }
    public static int G_TYPE_RESERVED_GLIB_LAST() {
        return (int)31L;
    }
    public static int G_TYPE_RESERVED_BSE_FIRST() {
        return (int)32L;
    }
    public static int G_TYPE_RESERVED_BSE_LAST() {
        return (int)48L;
    }
    public static int G_TYPE_RESERVED_USER_FIRST() {
        return (int)49L;
    }
    public static long G_TYPE_FLAG_RESERVED_ID_BIT() {
        return 1L;
    }
    public static long G_SIGNAL_TYPE_STATIC_SCOPE() {
        return 1L;
    }
    public static double VIPS_PI() {
        return 3.141592653589793d;
    }
    public static int VIPS_PATH_MAX() {
        return (int)4096L;
    }
    public static int VIPS_ARGUMENT_REQUIRED_INPUT() {
        return (int)19L;
    }
    public static int VIPS_ARGUMENT_OPTIONAL_INPUT() {
        return (int)18L;
    }
    public static int VIPS_ARGUMENT_REQUIRED_OUTPUT() {
        return (int)35L;
    }
    public static int VIPS_ARGUMENT_OPTIONAL_OUTPUT() {
        return (int)34L;
    }
    public static int VIPS_TARGET_BUFFER_SIZE() {
        return (int)8500L;
    }
    public static int VIPS_TARGET_CUSTOM_BUFFER_SIZE() {
        return (int)4096L;
    }
    public static int VIPS_SBUF_BUFFER_SIZE() {
        return (int)4096L;
    }
    public static MemorySegment VIPS_VERSION() {
        return constants$241.VIPS_VERSION$SEGMENT;
    }
    public static MemorySegment VIPS_VERSION_STRING() {
        return constants$241.VIPS_VERSION_STRING$SEGMENT;
    }
    public static int VIPS_MAJOR_VERSION() {
        return (int)8L;
    }
    public static int VIPS_MINOR_VERSION() {
        return (int)14L;
    }
    public static int VIPS_MICRO_VERSION() {
        return (int)1L;
    }
    public static int VIPS_LIBRARY_CURRENT() {
        return (int)58L;
    }
    public static int VIPS_LIBRARY_REVISION() {
        return (int)1L;
    }
    public static int VIPS_LIBRARY_AGE() {
        return (int)16L;
    }
    public static MemorySegment VIPS_CONFIG() {
        return constants$241.VIPS_CONFIG$SEGMENT;
    }
    public static int VIPS_SPARE() {
        return (int)8L;
    }
    public static int VIPS__WINDOW_MARGIN_PIXELS() {
        return (int)128L;
    }
    public static int VIPS__WINDOW_MARGIN_BYTES() {
        return (int)10485760L;
    }
    public static int VIPS_SIZEOF_HEADER() {
        return (int)64L;
    }
    public static int VIPS__TILE_WIDTH() {
        return (int)128L;
    }
    public static int VIPS__TILE_HEIGHT() {
        return (int)128L;
    }
    public static int VIPS__THINSTRIP_HEIGHT() {
        return (int)1L;
    }
    public static int VIPS__FATSTRIP_HEIGHT() {
        return (int)16L;
    }
    public static int VIPS_MAGIC_INTEL() {
        return (int)3064394248L;
    }
    public static int VIPS_MAGIC_SPARC() {
        return (int)150120118L;
    }
    public static int VIPS_MAX_COORD() {
        return (int)10000000L;
    }
    public static int VIPS_TRANSFORM_SHIFT() {
        return (int)6L;
    }
    public static int VIPS_TRANSFORM_SCALE() {
        return (int)64L;
    }
    public static int VIPS_INTERPOLATE_SHIFT() {
        return (int)12L;
    }
    public static int VIPS_INTERPOLATE_SCALE() {
        return (int)4096L;
    }
    public static MemorySegment VIPS_META_EXIF_NAME() {
        return constants$241.VIPS_META_EXIF_NAME$SEGMENT;
    }
    public static MemorySegment VIPS_META_XMP_NAME() {
        return constants$241.VIPS_META_XMP_NAME$SEGMENT;
    }
    public static MemorySegment VIPS_META_IPTC_NAME() {
        return constants$242.VIPS_META_IPTC_NAME$SEGMENT;
    }
    public static MemorySegment VIPS_META_PHOTOSHOP_NAME() {
        return constants$242.VIPS_META_PHOTOSHOP_NAME$SEGMENT;
    }
    public static MemorySegment VIPS_META_ICC_NAME() {
        return constants$242.VIPS_META_ICC_NAME$SEGMENT;
    }
    public static MemorySegment VIPS_META_IMAGEDESCRIPTION() {
        return constants$242.VIPS_META_IMAGEDESCRIPTION$SEGMENT;
    }
    public static MemorySegment VIPS_META_RESOLUTION_UNIT() {
        return constants$242.VIPS_META_RESOLUTION_UNIT$SEGMENT;
    }
    public static MemorySegment VIPS_META_LOADER() {
        return constants$242.VIPS_META_LOADER$SEGMENT;
    }
    public static MemorySegment VIPS_META_SEQUENTIAL() {
        return constants$243.VIPS_META_SEQUENTIAL$SEGMENT;
    }
    public static MemorySegment VIPS_META_ORIENTATION() {
        return constants$243.VIPS_META_ORIENTATION$SEGMENT;
    }
    public static MemorySegment VIPS_META_PAGE_HEIGHT() {
        return constants$243.VIPS_META_PAGE_HEIGHT$SEGMENT;
    }
    public static MemorySegment VIPS_META_N_PAGES() {
        return constants$243.VIPS_META_N_PAGES$SEGMENT;
    }
    public static MemorySegment VIPS_META_N_SUBIFDS() {
        return constants$243.VIPS_META_N_SUBIFDS$SEGMENT;
    }
    public static MemorySegment VIPS_META_CONCURRENCY() {
        return constants$243.VIPS_META_CONCURRENCY$SEGMENT;
    }
    public static double VIPS_D93_X0() {
        return 89.74d;
    }
    public static double VIPS_D93_Y0() {
        return 100.0d;
    }
    public static double VIPS_D93_Z0() {
        return 130.77d;
    }
    public static double VIPS_D75_X0() {
        return 94.9682d;
    }
    public static double VIPS_D75_Y0() {
        return 100.0d;
    }
    public static double VIPS_D75_Z0() {
        return 122.571d;
    }
    public static double VIPS_D65_X0() {
        return 95.047d;
    }
    public static double VIPS_D65_Y0() {
        return 100.0d;
    }
    public static double VIPS_D65_Z0() {
        return 108.8827d;
    }
    public static double VIPS_D55_X0() {
        return 95.6831d;
    }
    public static double VIPS_D55_Y0() {
        return 100.0d;
    }
    public static double VIPS_D55_Z0() {
        return 92.0871d;
    }
    public static double VIPS_D50_X0() {
        return 96.425d;
    }
    public static double VIPS_D50_Y0() {
        return 100.0d;
    }
    public static double VIPS_D50_Z0() {
        return 82.468d;
    }
    public static double VIPS_A_X0() {
        return 109.8503d;
    }
    public static double VIPS_A_Y0() {
        return 100.0d;
    }
    public static double VIPS_A_Z0() {
        return 35.5849d;
    }
    public static double VIPS_B_X0() {
        return 99.072d;
    }
    public static double VIPS_B_Y0() {
        return 100.0d;
    }
    public static double VIPS_B_Z0() {
        return 85.223d;
    }
    public static double VIPS_C_X0() {
        return 98.07d;
    }
    public static double VIPS_C_Y0() {
        return 100.0d;
    }
    public static double VIPS_C_Z0() {
        return 118.23d;
    }
    public static double VIPS_E_X0() {
        return 100.0d;
    }
    public static double VIPS_E_Y0() {
        return 100.0d;
    }
    public static double VIPS_E_Z0() {
        return 100.0d;
    }
    public static double VIPS_D3250_X0() {
        return 105.659d;
    }
    public static double VIPS_D3250_Y0() {
        return 100.0d;
    }
    public static double VIPS_D3250_Z0() {
        return 45.8501d;
    }
}


