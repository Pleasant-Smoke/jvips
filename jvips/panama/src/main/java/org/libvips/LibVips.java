/*
 * jvips, a Java implementation that interfaces to libvips
 *
 * Copyright (C) 2023 Jonathan Strauss
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * https://www.gnu.org/licenses/old-licenses/lgpl-2.1-standalone.html
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

// Generated by jextract

package org.libvips;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class LibVips extends LibVips_1 {

    /* package-private */ LibVips() {}
    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;
    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static int G_HAVE_GINT64() {
        return (int)1L;
    }
    public static int GLIB_SIZEOF_VOID_P() {
        return (int)8L;
    }
    public static int GLIB_SIZEOF_LONG() {
        return (int)8L;
    }
    public static int GLIB_SIZEOF_SIZE_T() {
        return (int)8L;
    }
    public static int GLIB_SIZEOF_SSIZE_T() {
        return (int)8L;
    }
    public static int GLIB_MAJOR_VERSION() {
        return (int)2L;
    }
    public static int GLIB_MINOR_VERSION() {
        return (int)74L;
    }
    public static int GLIB_MICRO_VERSION() {
        return (int)4L;
    }
    public static int G_VA_COPY_AS_ARRAY() {
        return (int)1L;
    }
    public static int G_HAVE_ISO_VARARGS() {
        return (int)1L;
    }
    public static int G_HAVE_GROWING_STACK() {
        return (int)0L;
    }
    public static int G_HAVE_GNUC_VISIBILITY() {
        return (int)1L;
    }
    public static int G_HAVE_GNUC_VARARGS() {
        return (int)1L;
    }
    public static int GLIB_SYSDEF_AF_UNIX() {
        return (int)1L;
    }
    public static int GLIB_SYSDEF_AF_INET() {
        return (int)2L;
    }
    public static int GLIB_SYSDEF_AF_INET6() {
        return (int)10L;
    }
    public static int GLIB_SYSDEF_MSG_OOB() {
        return (int)1L;
    }
    public static int GLIB_SYSDEF_MSG_PEEK() {
        return (int)2L;
    }
    public static int GLIB_SYSDEF_MSG_DONTROUTE() {
        return (int)4L;
    }
    public static int __GNUC_VA_LIST() {
        return (int)1L;
    }
    public static int G_SIGNAL_FLAGS_MASK() {
        return (int)511L;
    }
    public static int G_SIGNAL_MATCH_MASK() {
        return (int)63L;
    }
    public static int VIPS_ENABLE_DEPRECATED() {
        return (int)1L;
    }
    public static OfLong ptrdiff_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt wchar_t = Constants$root.C_INT$LAYOUT;
    public static OfShort gint16 = Constants$root.C_SHORT$LAYOUT;
    public static OfInt gint32 = Constants$root.C_INT$LAYOUT;
    public static OfLong gint64 = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong gssize = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong goffset = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong gintptr = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt GPid = Constants$root.C_INT$LAYOUT;
    public static MethodHandle g_free$MH() {
        return RuntimeHelper.requireNonNull(constants$0.g_free$MH,"g_free");
    }
    public static void g_free ( Addressable mem) {
        var mh$ = g_free$MH();
        try {
            mh$.invokeExact(mem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$0.g_clear_pointer$MH,"g_clear_pointer");
    }
    public static void g_clear_pointer ( Addressable pp,  Addressable destroy) {
        var mh$ = g_clear_pointer$MH();
        try {
            mh$.invokeExact(pp, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$0.g_malloc$MH,"g_malloc");
    }
    public static MemoryAddress g_malloc ( long n_bytes) {
        var mh$ = g_malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_malloc0$MH() {
        return RuntimeHelper.requireNonNull(constants$0.g_malloc0$MH,"g_malloc0");
    }
    public static MemoryAddress g_malloc0 ( long n_bytes) {
        var mh$ = g_malloc0$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$0.g_realloc$MH,"g_realloc");
    }
    public static MemoryAddress g_realloc ( Addressable mem,  long n_bytes) {
        var mh$ = g_realloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mem, n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$0.g_try_malloc$MH,"g_try_malloc");
    }
    public static MemoryAddress g_try_malloc ( long n_bytes) {
        var mh$ = g_try_malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_malloc0$MH() {
        return RuntimeHelper.requireNonNull(constants$1.g_try_malloc0$MH,"g_try_malloc0");
    }
    public static MemoryAddress g_try_malloc0 ( long n_bytes) {
        var mh$ = g_try_malloc0$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1.g_try_realloc$MH,"g_try_realloc");
    }
    public static MemoryAddress g_try_realloc ( Addressable mem,  long n_bytes) {
        var mh$ = g_try_realloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mem, n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_malloc_n$MH() {
        return RuntimeHelper.requireNonNull(constants$1.g_malloc_n$MH,"g_malloc_n");
    }
    public static MemoryAddress g_malloc_n ( long n_blocks,  long n_block_bytes) {
        var mh$ = g_malloc_n$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_malloc0_n$MH() {
        return RuntimeHelper.requireNonNull(constants$1.g_malloc0_n$MH,"g_malloc0_n");
    }
    public static MemoryAddress g_malloc0_n ( long n_blocks,  long n_block_bytes) {
        var mh$ = g_malloc0_n$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_realloc_n$MH() {
        return RuntimeHelper.requireNonNull(constants$1.g_realloc_n$MH,"g_realloc_n");
    }
    public static MemoryAddress g_realloc_n ( Addressable mem,  long n_blocks,  long n_block_bytes) {
        var mh$ = g_realloc_n$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mem, n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_malloc_n$MH() {
        return RuntimeHelper.requireNonNull(constants$1.g_try_malloc_n$MH,"g_try_malloc_n");
    }
    public static MemoryAddress g_try_malloc_n ( long n_blocks,  long n_block_bytes) {
        var mh$ = g_try_malloc_n$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_malloc0_n$MH() {
        return RuntimeHelper.requireNonNull(constants$2.g_try_malloc0_n$MH,"g_try_malloc0_n");
    }
    public static MemoryAddress g_try_malloc0_n ( long n_blocks,  long n_block_bytes) {
        var mh$ = g_try_malloc0_n$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_realloc_n$MH() {
        return RuntimeHelper.requireNonNull(constants$2.g_try_realloc_n$MH,"g_try_realloc_n");
    }
    public static MemoryAddress g_try_realloc_n ( Addressable mem,  long n_blocks,  long n_block_bytes) {
        var mh$ = g_try_realloc_n$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mem, n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_aligned_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2.g_aligned_alloc$MH,"g_aligned_alloc");
    }
    public static MemoryAddress g_aligned_alloc ( long n_blocks,  long n_block_bytes,  long alignment) {
        var mh$ = g_aligned_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes, alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_aligned_alloc0$MH() {
        return RuntimeHelper.requireNonNull(constants$2.g_aligned_alloc0$MH,"g_aligned_alloc0");
    }
    public static MemoryAddress g_aligned_alloc0 ( long n_blocks,  long n_block_bytes,  long alignment) {
        var mh$ = g_aligned_alloc0$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes, alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_aligned_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2.g_aligned_free$MH,"g_aligned_free");
    }
    public static void g_aligned_free ( Addressable mem) {
        var mh$ = g_aligned_free$MH();
        try {
            mh$.invokeExact(mem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_steal_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$2.g_steal_pointer$MH,"g_steal_pointer");
    }
    public static MemoryAddress g_steal_pointer ( Addressable pp) {
        var mh$ = g_steal_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_set_vtable$MH() {
        return RuntimeHelper.requireNonNull(constants$3.g_mem_set_vtable$MH,"g_mem_set_vtable");
    }
    public static void g_mem_set_vtable ( Addressable vtable) {
        var mh$ = g_mem_set_vtable$MH();
        try {
            mh$.invokeExact(vtable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_is_system_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$3.g_mem_is_system_malloc$MH,"g_mem_is_system_malloc");
    }
    public static int g_mem_is_system_malloc () {
        var mh$ = g_mem_is_system_malloc$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_mem_gc_friendly$LAYOUT() {
        return constants$3.g_mem_gc_friendly$LAYOUT;
    }
    public static VarHandle g_mem_gc_friendly$VH() {
        return constants$3.g_mem_gc_friendly$VH;
    }
    public static MemorySegment g_mem_gc_friendly$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3.g_mem_gc_friendly$SEGMENT,"g_mem_gc_friendly");
    }
    public static int g_mem_gc_friendly$get() {
        return (int) constants$3.g_mem_gc_friendly$VH.get(RuntimeHelper.requireNonNull(constants$3.g_mem_gc_friendly$SEGMENT, "g_mem_gc_friendly"));
    }
    public static void g_mem_gc_friendly$set( int x) {
        constants$3.g_mem_gc_friendly$VH.set(RuntimeHelper.requireNonNull(constants$3.g_mem_gc_friendly$SEGMENT, "g_mem_gc_friendly"), x);
    }
    public static MemoryLayout glib_mem_profiler_table$LAYOUT() {
        return constants$3.glib_mem_profiler_table$LAYOUT;
    }
    public static VarHandle glib_mem_profiler_table$VH() {
        return constants$3.glib_mem_profiler_table$VH;
    }
    public static MemorySegment glib_mem_profiler_table$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3.glib_mem_profiler_table$SEGMENT,"glib_mem_profiler_table");
    }
    public static MemoryAddress glib_mem_profiler_table$get() {
        return (java.lang.foreign.MemoryAddress) constants$3.glib_mem_profiler_table$VH.get(RuntimeHelper.requireNonNull(constants$3.glib_mem_profiler_table$SEGMENT, "glib_mem_profiler_table"));
    }
    public static void glib_mem_profiler_table$set( MemoryAddress x) {
        constants$3.glib_mem_profiler_table$VH.set(RuntimeHelper.requireNonNull(constants$3.glib_mem_profiler_table$SEGMENT, "glib_mem_profiler_table"), x);
    }
    public static MethodHandle g_mem_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$3.g_mem_profile$MH,"g_mem_profile");
    }
    public static void g_mem_profile () {
        var mh$ = g_mem_profile$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_TYPE_DEBUG_NONE() {
        return (int)0L;
    }
    public static int G_TYPE_DEBUG_OBJECTS() {
        return (int)1L;
    }
    public static int G_TYPE_DEBUG_SIGNALS() {
        return (int)2L;
    }
    public static int G_TYPE_DEBUG_INSTANCE_COUNT() {
        return (int)4L;
    }
    public static int G_TYPE_DEBUG_MASK() {
        return (int)7L;
    }
    public static MethodHandle g_type_init$MH() {
        return RuntimeHelper.requireNonNull(constants$3.g_type_init$MH,"g_type_init");
    }
    public static void g_type_init () {
        var mh$ = g_type_init$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_init_with_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$4.g_type_init_with_debug_flags$MH,"g_type_init_with_debug_flags");
    }
    public static void g_type_init_with_debug_flags ( int debug_flags) {
        var mh$ = g_type_init_with_debug_flags$MH();
        try {
            mh$.invokeExact(debug_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name$MH() {
        return RuntimeHelper.requireNonNull(constants$4.g_type_name$MH,"g_type_name");
    }
    public static MemoryAddress g_type_name ( long type) {
        var mh$ = g_type_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_qname$MH() {
        return RuntimeHelper.requireNonNull(constants$4.g_type_qname$MH,"g_type_qname");
    }
    public static int g_type_qname ( long type) {
        var mh$ = g_type_qname$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$4.g_type_from_name$MH,"g_type_from_name");
    }
    public static long g_type_from_name ( Addressable name) {
        var mh$ = g_type_from_name$MH();
        try {
            return (long)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$4.g_type_parent$MH,"g_type_parent");
    }
    public static long g_type_parent ( long type) {
        var mh$ = g_type_parent$MH();
        try {
            return (long)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$4.g_type_depth$MH,"g_type_depth");
    }
    public static int g_type_depth ( long type) {
        var mh$ = g_type_depth$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_next_base$MH() {
        return RuntimeHelper.requireNonNull(constants$5.g_type_next_base$MH,"g_type_next_base");
    }
    public static long g_type_next_base ( long leaf_type,  long root_type) {
        var mh$ = g_type_next_base$MH();
        try {
            return (long)mh$.invokeExact(leaf_type, root_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$5.g_type_is_a$MH,"g_type_is_a");
    }
    public static int g_type_is_a ( long type,  long is_a_type) {
        var mh$ = g_type_is_a$MH();
        try {
            return (int)mh$.invokeExact(type, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$5.g_type_class_ref$MH,"g_type_class_ref");
    }
    public static MemoryAddress g_type_class_ref ( long type) {
        var mh$ = g_type_class_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$5.g_type_class_peek$MH,"g_type_class_peek");
    }
    public static MemoryAddress g_type_class_peek ( long type) {
        var mh$ = g_type_class_peek$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek_static$MH() {
        return RuntimeHelper.requireNonNull(constants$5.g_type_class_peek_static$MH,"g_type_class_peek_static");
    }
    public static MemoryAddress g_type_class_peek_static ( long type) {
        var mh$ = g_type_class_peek_static$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$5.g_type_class_unref$MH,"g_type_class_unref");
    }
    public static void g_type_class_unref ( Addressable g_class) {
        var mh$ = g_type_class_unref$MH();
        try {
            mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$6.g_type_class_peek_parent$MH,"g_type_class_peek_parent");
    }
    public static MemoryAddress g_type_class_peek_parent ( Addressable g_class) {
        var mh$ = g_type_class_peek_parent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$6.g_type_interface_peek$MH,"g_type_interface_peek");
    }
    public static MemoryAddress g_type_interface_peek ( Addressable instance_class,  long iface_type) {
        var mh$ = g_type_interface_peek$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance_class, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$6.g_type_interface_peek_parent$MH,"g_type_interface_peek_parent");
    }
    public static MemoryAddress g_type_interface_peek_parent ( Addressable g_iface) {
        var mh$ = g_type_interface_peek_parent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_iface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$6.g_type_default_interface_ref$MH,"g_type_default_interface_ref");
    }
    public static MemoryAddress g_type_default_interface_ref ( long g_type) {
        var mh$ = g_type_default_interface_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$6.g_type_default_interface_peek$MH,"g_type_default_interface_peek");
    }
    public static MemoryAddress g_type_default_interface_peek ( long g_type) {
        var mh$ = g_type_default_interface_peek$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$6.g_type_default_interface_unref$MH,"g_type_default_interface_unref");
    }
    public static void g_type_default_interface_unref ( Addressable g_iface) {
        var mh$ = g_type_default_interface_unref$MH();
        try {
            mh$.invokeExact(g_iface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_children$MH() {
        return RuntimeHelper.requireNonNull(constants$7.g_type_children$MH,"g_type_children");
    }
    public static MemoryAddress g_type_children ( long type,  Addressable n_children) {
        var mh$ = g_type_children$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interfaces$MH() {
        return RuntimeHelper.requireNonNull(constants$7.g_type_interfaces$MH,"g_type_interfaces");
    }
    public static MemoryAddress g_type_interfaces ( long type,  Addressable n_interfaces) {
        var mh$ = g_type_interfaces$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, n_interfaces);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$7.g_type_set_qdata$MH,"g_type_set_qdata");
    }
    public static void g_type_set_qdata ( long type,  int quark,  Addressable data) {
        var mh$ = g_type_set_qdata$MH();
        try {
            mh$.invokeExact(type, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$7.g_type_get_qdata$MH,"g_type_get_qdata");
    }
    public static MemoryAddress g_type_get_qdata ( long type,  int quark) {
        var mh$ = g_type_get_qdata$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_query$MH() {
        return RuntimeHelper.requireNonNull(constants$7.g_type_query$MH,"g_type_query");
    }
    public static void g_type_query ( long type,  Addressable query) {
        var mh$ = g_type_query$MH();
        try {
            mh$.invokeExact(type, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_instance_count$MH() {
        return RuntimeHelper.requireNonNull(constants$7.g_type_get_instance_count$MH,"g_type_get_instance_count");
    }
    public static int g_type_get_instance_count ( long type) {
        var mh$ = g_type_get_instance_count$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_TYPE_FLAG_CLASSED() {
        return (int)1L;
    }
    public static int G_TYPE_FLAG_INSTANTIATABLE() {
        return (int)2L;
    }
    public static int G_TYPE_FLAG_DERIVABLE() {
        return (int)4L;
    }
    public static int G_TYPE_FLAG_DEEP_DERIVABLE() {
        return (int)8L;
    }
    public static int G_TYPE_FLAG_NONE() {
        return (int)0L;
    }
    public static int G_TYPE_FLAG_ABSTRACT() {
        return (int)16L;
    }
    public static int G_TYPE_FLAG_VALUE_ABSTRACT() {
        return (int)32L;
    }
    public static int G_TYPE_FLAG_FINAL() {
        return (int)64L;
    }
    public static MethodHandle g_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$11.g_type_register_static$MH,"g_type_register_static");
    }
    public static long g_type_register_static ( long parent_type,  Addressable type_name,  Addressable info,  int flags) {
        var mh$ = g_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, info, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_static_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$11.g_type_register_static_simple$MH,"g_type_register_static_simple");
    }
    public static long g_type_register_static_simple ( long parent_type,  Addressable type_name,  int class_size,  Addressable class_init,  int instance_size,  Addressable instance_init,  int flags) {
        var mh$ = g_type_register_static_simple$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, class_size, class_init, instance_size, instance_init, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$11.g_type_register_dynamic$MH,"g_type_register_dynamic");
    }
    public static long g_type_register_dynamic ( long parent_type,  Addressable type_name,  Addressable plugin,  int flags) {
        var mh$ = g_type_register_dynamic$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, plugin, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$11.g_type_register_fundamental$MH,"g_type_register_fundamental");
    }
    public static long g_type_register_fundamental ( long type_id,  Addressable type_name,  Addressable info,  Addressable finfo,  int flags) {
        var mh$ = g_type_register_fundamental$MH();
        try {
            return (long)mh$.invokeExact(type_id, type_name, info, finfo, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_static$MH() {
        return RuntimeHelper.requireNonNull(constants$11.g_type_add_interface_static$MH,"g_type_add_interface_static");
    }
    public static void g_type_add_interface_static ( long instance_type,  long interface_type,  Addressable info) {
        var mh$ = g_type_add_interface_static$MH();
        try {
            mh$.invokeExact(instance_type, interface_type, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$11.g_type_add_interface_dynamic$MH,"g_type_add_interface_dynamic");
    }
    public static void g_type_add_interface_dynamic ( long instance_type,  long interface_type,  Addressable plugin) {
        var mh$ = g_type_add_interface_dynamic$MH();
        try {
            mh$.invokeExact(instance_type, interface_type, plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_add_prerequisite$MH() {
        return RuntimeHelper.requireNonNull(constants$12.g_type_interface_add_prerequisite$MH,"g_type_interface_add_prerequisite");
    }
    public static void g_type_interface_add_prerequisite ( long interface_type,  long prerequisite_type) {
        var mh$ = g_type_interface_add_prerequisite$MH();
        try {
            mh$.invokeExact(interface_type, prerequisite_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_prerequisites$MH() {
        return RuntimeHelper.requireNonNull(constants$12.g_type_interface_prerequisites$MH,"g_type_interface_prerequisites");
    }
    public static MemoryAddress g_type_interface_prerequisites ( long interface_type,  Addressable n_prerequisites) {
        var mh$ = g_type_interface_prerequisites$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(interface_type, n_prerequisites);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_instantiatable_prerequisite$MH() {
        return RuntimeHelper.requireNonNull(constants$12.g_type_interface_instantiatable_prerequisite$MH,"g_type_interface_instantiatable_prerequisite");
    }
    public static long g_type_interface_instantiatable_prerequisite ( long interface_type) {
        var mh$ = g_type_interface_instantiatable_prerequisite$MH();
        try {
            return (long)mh$.invokeExact(interface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_add_private$MH() {
        return RuntimeHelper.requireNonNull(constants$12.g_type_class_add_private$MH,"g_type_class_add_private");
    }
    public static void g_type_class_add_private ( Addressable g_class,  long private_size) {
        var mh$ = g_type_class_add_private$MH();
        try {
            mh$.invokeExact(g_class, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_instance_private$MH() {
        return RuntimeHelper.requireNonNull(constants$12.g_type_add_instance_private$MH,"g_type_add_instance_private");
    }
    public static int g_type_add_instance_private ( long class_type,  long private_size) {
        var mh$ = g_type_add_instance_private$MH();
        try {
            return (int)mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_instance_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$12.g_type_instance_get_private$MH,"g_type_instance_get_private");
    }
    public static MemoryAddress g_type_instance_get_private ( Addressable instance,  long private_type) {
        var mh$ = g_type_instance_get_private$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_adjust_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$13.g_type_class_adjust_private_offset$MH,"g_type_class_adjust_private_offset");
    }
    public static void g_type_class_adjust_private_offset ( Addressable g_class,  Addressable private_size_or_offset) {
        var mh$ = g_type_class_adjust_private_offset$MH();
        try {
            mh$.invokeExact(g_class, private_size_or_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_private$MH() {
        return RuntimeHelper.requireNonNull(constants$13.g_type_add_class_private$MH,"g_type_add_class_private");
    }
    public static void g_type_add_class_private ( long class_type,  long private_size) {
        var mh$ = g_type_add_class_private$MH();
        try {
            mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$13.g_type_class_get_private$MH,"g_type_class_get_private");
    }
    public static MemoryAddress g_type_class_get_private ( Addressable klass,  long private_type) {
        var mh$ = g_type_class_get_private$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(klass, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_instance_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$13.g_type_class_get_instance_private_offset$MH,"g_type_class_get_instance_private_offset");
    }
    public static int g_type_class_get_instance_private_offset ( Addressable g_class) {
        var mh$ = g_type_class_get_instance_private_offset$MH();
        try {
            return (int)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_ensure$MH() {
        return RuntimeHelper.requireNonNull(constants$13.g_type_ensure$MH,"g_type_ensure");
    }
    public static void g_type_ensure ( long type) {
        var mh$ = g_type_ensure$MH();
        try {
            mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_type_registration_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$13.g_type_get_type_registration_serial$MH,"g_type_get_type_registration_serial");
    }
    public static int g_type_get_type_registration_serial () {
        var mh$ = g_type_get_type_registration_serial$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$14.g_type_get_plugin$MH,"g_type_get_plugin");
    }
    public static MemoryAddress g_type_get_plugin ( long type) {
        var mh$ = g_type_get_plugin$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$14.g_type_interface_get_plugin$MH,"g_type_interface_get_plugin");
    }
    public static MemoryAddress g_type_interface_get_plugin ( long instance_type,  long interface_type) {
        var mh$ = g_type_interface_get_plugin$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance_type, interface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental_next$MH() {
        return RuntimeHelper.requireNonNull(constants$14.g_type_fundamental_next$MH,"g_type_fundamental_next");
    }
    public static long g_type_fundamental_next () {
        var mh$ = g_type_fundamental_next$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$14.g_type_fundamental$MH,"g_type_fundamental");
    }
    public static long g_type_fundamental ( long type_id) {
        var mh$ = g_type_fundamental$MH();
        try {
            return (long)mh$.invokeExact(type_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_create_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$14.g_type_create_instance$MH,"g_type_create_instance");
    }
    public static MemoryAddress g_type_create_instance ( long type) {
        var mh$ = g_type_create_instance$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_free_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$14.g_type_free_instance$MH,"g_type_free_instance");
    }
    public static void g_type_free_instance ( Addressable instance) {
        var mh$ = g_type_free_instance$MH();
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$15.g_type_add_class_cache_func$MH,"g_type_add_class_cache_func");
    }
    public static void g_type_add_class_cache_func ( Addressable cache_data,  Addressable cache_func) {
        var mh$ = g_type_add_class_cache_func$MH();
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$15.g_type_remove_class_cache_func$MH,"g_type_remove_class_cache_func");
    }
    public static void g_type_remove_class_cache_func ( Addressable cache_data,  Addressable cache_func) {
        var mh$ = g_type_remove_class_cache_func$MH();
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_unref_uncached$MH() {
        return RuntimeHelper.requireNonNull(constants$15.g_type_class_unref_uncached$MH,"g_type_class_unref_uncached");
    }
    public static void g_type_class_unref_uncached ( Addressable g_class) {
        var mh$ = g_type_class_unref_uncached$MH();
        try {
            mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$15.g_type_add_interface_check$MH,"g_type_add_interface_check");
    }
    public static void g_type_add_interface_check ( Addressable check_data,  Addressable check_func) {
        var mh$ = g_type_add_interface_check$MH();
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$15.g_type_remove_interface_check$MH,"g_type_remove_interface_check");
    }
    public static void g_type_remove_interface_check ( Addressable check_data,  Addressable check_func) {
        var mh$ = g_type_remove_interface_check$MH();
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_value_table_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$15.g_type_value_table_peek$MH,"g_type_value_table_peek");
    }
    public static MemoryAddress g_type_value_table_peek ( long type) {
        var mh$ = g_type_value_table_peek$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$16.g_type_check_instance$MH,"g_type_check_instance");
    }
    public static int g_type_check_instance ( Addressable instance) {
        var mh$ = g_type_check_instance$MH();
        try {
            return (int)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$16.g_type_check_instance_cast$MH,"g_type_check_instance_cast");
    }
    public static MemoryAddress g_type_check_instance_cast ( Addressable instance,  long iface_type) {
        var mh$ = g_type_check_instance_cast$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$16.g_type_check_instance_is_a$MH,"g_type_check_instance_is_a");
    }
    public static int g_type_check_instance_is_a ( Addressable instance,  long iface_type) {
        var mh$ = g_type_check_instance_is_a$MH();
        try {
            return (int)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_fundamentally_a$MH() {
        return RuntimeHelper.requireNonNull(constants$16.g_type_check_instance_is_fundamentally_a$MH,"g_type_check_instance_is_fundamentally_a");
    }
    public static int g_type_check_instance_is_fundamentally_a ( Addressable instance,  long fundamental_type) {
        var mh$ = g_type_check_instance_is_fundamentally_a$MH();
        try {
            return (int)mh$.invokeExact(instance, fundamental_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$16.g_type_check_class_cast$MH,"g_type_check_class_cast");
    }
    public static MemoryAddress g_type_check_class_cast ( Addressable g_class,  long is_a_type) {
        var mh$ = g_type_check_class_cast$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$16.g_type_check_class_is_a$MH,"g_type_check_class_is_a");
    }
    public static int g_type_check_class_is_a ( Addressable g_class,  long is_a_type) {
        var mh$ = g_type_check_class_is_a$MH();
        try {
            return (int)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_is_value_type$MH() {
        return RuntimeHelper.requireNonNull(constants$17.g_type_check_is_value_type$MH,"g_type_check_is_value_type");
    }
    public static int g_type_check_is_value_type ( long type) {
        var mh$ = g_type_check_is_value_type$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value$MH() {
        return RuntimeHelper.requireNonNull(constants$17.g_type_check_value$MH,"g_type_check_value");
    }
    public static int g_type_check_value ( Addressable value) {
        var mh$ = g_type_check_value$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value_holds$MH() {
        return RuntimeHelper.requireNonNull(constants$17.g_type_check_value_holds$MH,"g_type_check_value_holds");
    }
    public static int g_type_check_value_holds ( Addressable value,  long type) {
        var mh$ = g_type_check_value_holds$MH();
        try {
            return (int)mh$.invokeExact(value, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_test_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$17.g_type_test_flags$MH,"g_type_test_flags");
    }
    public static int g_type_test_flags ( long type,  int flags) {
        var mh$ = g_type_test_flags$MH();
        try {
            return (int)mh$.invokeExact(type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$17.g_type_name_from_instance$MH,"g_type_name_from_instance");
    }
    public static MemoryAddress g_type_name_from_instance ( Addressable instance) {
        var mh$ = g_type_name_from_instance$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_class$MH() {
        return RuntimeHelper.requireNonNull(constants$17.g_type_name_from_class$MH,"g_type_name_from_class");
    }
    public static MemoryAddress g_type_name_from_class ( Addressable g_class) {
        var mh$ = g_type_name_from_class$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_SIGNAL_RUN_FIRST() {
        return (int)1L;
    }
    public static int G_SIGNAL_RUN_LAST() {
        return (int)2L;
    }
    public static int G_SIGNAL_RUN_CLEANUP() {
        return (int)4L;
    }
    public static int G_SIGNAL_NO_RECURSE() {
        return (int)8L;
    }
    public static int G_SIGNAL_DETAILED() {
        return (int)16L;
    }
    public static int G_SIGNAL_ACTION() {
        return (int)32L;
    }
    public static int G_SIGNAL_NO_HOOKS() {
        return (int)64L;
    }
    public static int G_SIGNAL_MUST_COLLECT() {
        return (int)128L;
    }
    public static int G_SIGNAL_DEPRECATED() {
        return (int)256L;
    }
    public static int G_SIGNAL_ACCUMULATOR_FIRST_RUN() {
        return (int)131072L;
    }
    public static int G_CONNECT_DEFAULT() {
        return (int)0L;
    }
    public static int G_CONNECT_AFTER() {
        return (int)1L;
    }
    public static int G_CONNECT_SWAPPED() {
        return (int)2L;
    }
    public static int G_SIGNAL_MATCH_ID() {
        return (int)1L;
    }
    public static int G_SIGNAL_MATCH_DETAIL() {
        return (int)2L;
    }
    public static int G_SIGNAL_MATCH_CLOSURE() {
        return (int)4L;
    }
    public static int G_SIGNAL_MATCH_FUNC() {
        return (int)8L;
    }
    public static int G_SIGNAL_MATCH_DATA() {
        return (int)16L;
    }
    public static int G_SIGNAL_MATCH_UNBLOCKED() {
        return (int)32L;
    }
    public static MethodHandle g_signal_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$19.g_signal_newv$MH,"g_signal_newv");
    }
    public static int g_signal_newv ( Addressable signal_name,  long itype,  int signal_flags,  Addressable class_closure,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params,  Addressable param_types) {
        var mh$ = g_signal_newv$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$19.g_signal_new_valist$MH,"g_signal_new_valist");
    }
    public static int g_signal_new_valist ( Addressable signal_name,  long itype,  int signal_flags,  Addressable class_closure,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params,  Addressable args) {
        var mh$ = g_signal_new_valist$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new$MH() {
        return RuntimeHelper.requireNonNull(constants$19.g_signal_new$MH,"g_signal_new");
    }
    public static int g_signal_new ( Addressable signal_name,  long itype,  int signal_flags,  int class_offset,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params, Object... x9) {
        var mh$ = g_signal_new$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_offset, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$19.g_signal_new_class_handler$MH,"g_signal_new_class_handler");
    }
    public static int g_signal_new_class_handler ( Addressable signal_name,  long itype,  int signal_flags,  Addressable class_handler,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params, Object... x9) {
        var mh$ = g_signal_new_class_handler$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_handler, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_set_va_marshaller$MH() {
        return RuntimeHelper.requireNonNull(constants$20.g_signal_set_va_marshaller$MH,"g_signal_set_va_marshaller");
    }
    public static void g_signal_set_va_marshaller ( int signal_id,  long instance_type,  Addressable va_marshaller) {
        var mh$ = g_signal_set_va_marshaller$MH();
        try {
            mh$.invokeExact(signal_id, instance_type, va_marshaller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emitv$MH() {
        return RuntimeHelper.requireNonNull(constants$20.g_signal_emitv$MH,"g_signal_emitv");
    }
    public static void g_signal_emitv ( Addressable instance_and_params,  int signal_id,  int detail,  Addressable return_value) {
        var mh$ = g_signal_emitv$MH();
        try {
            mh$.invokeExact(instance_and_params, signal_id, detail, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$20.g_signal_emit_valist$MH,"g_signal_emit_valist");
    }
    public static void g_signal_emit_valist ( Addressable instance,  int signal_id,  int detail,  Addressable var_args) {
        var mh$ = g_signal_emit_valist$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit$MH() {
        return RuntimeHelper.requireNonNull(constants$20.g_signal_emit$MH,"g_signal_emit");
    }
    public static void g_signal_emit ( Addressable instance,  int signal_id,  int detail, Object... x3) {
        var mh$ = g_signal_emit$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$20.g_signal_emit_by_name$MH,"g_signal_emit_by_name");
    }
    public static void g_signal_emit_by_name ( Addressable instance,  Addressable detailed_signal, Object... x2) {
        var mh$ = g_signal_emit_by_name$MH();
        try {
            mh$.invokeExact(instance, detailed_signal, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$20.g_signal_lookup$MH,"g_signal_lookup");
    }
    public static int g_signal_lookup ( Addressable name,  long itype) {
        var mh$ = g_signal_lookup$MH();
        try {
            return (int)mh$.invokeExact(name, itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_name$MH() {
        return RuntimeHelper.requireNonNull(constants$21.g_signal_name$MH,"g_signal_name");
    }
    public static MemoryAddress g_signal_name ( int signal_id) {
        var mh$ = g_signal_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(signal_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_query$MH() {
        return RuntimeHelper.requireNonNull(constants$21.g_signal_query$MH,"g_signal_query");
    }
    public static void g_signal_query ( int signal_id,  Addressable query) {
        var mh$ = g_signal_query$MH();
        try {
            mh$.invokeExact(signal_id, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_list_ids$MH() {
        return RuntimeHelper.requireNonNull(constants$21.g_signal_list_ids$MH,"g_signal_list_ids");
    }
    public static MemoryAddress g_signal_list_ids ( long itype,  Addressable n_ids) {
        var mh$ = g_signal_list_ids$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(itype, n_ids);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_is_valid_name$MH() {
        return RuntimeHelper.requireNonNull(constants$21.g_signal_is_valid_name$MH,"g_signal_is_valid_name");
    }
    public static int g_signal_is_valid_name ( Addressable name) {
        var mh$ = g_signal_is_valid_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$21.g_signal_parse_name$MH,"g_signal_parse_name");
    }
    public static int g_signal_parse_name ( Addressable detailed_signal,  long itype,  Addressable signal_id_p,  Addressable detail_p,  int force_detail_quark) {
        var mh$ = g_signal_parse_name$MH();
        try {
            return (int)mh$.invokeExact(detailed_signal, itype, signal_id_p, detail_p, force_detail_quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_get_invocation_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$21.g_signal_get_invocation_hint$MH,"g_signal_get_invocation_hint");
    }
    public static MemoryAddress g_signal_get_invocation_hint ( Addressable instance) {
        var mh$ = g_signal_get_invocation_hint$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission$MH() {
        return RuntimeHelper.requireNonNull(constants$22.g_signal_stop_emission$MH,"g_signal_stop_emission");
    }
    public static void g_signal_stop_emission ( Addressable instance,  int signal_id,  int detail) {
        var mh$ = g_signal_stop_emission$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$22.g_signal_stop_emission_by_name$MH,"g_signal_stop_emission_by_name");
    }
    public static void g_signal_stop_emission_by_name ( Addressable instance,  Addressable detailed_signal) {
        var mh$ = g_signal_stop_emission_by_name$MH();
        try {
            mh$.invokeExact(instance, detailed_signal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_add_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$22.g_signal_add_emission_hook$MH,"g_signal_add_emission_hook");
    }
    public static long g_signal_add_emission_hook ( int signal_id,  int detail,  Addressable hook_func,  Addressable hook_data,  Addressable data_destroy) {
        var mh$ = g_signal_add_emission_hook$MH();
        try {
            return (long)mh$.invokeExact(signal_id, detail, hook_func, hook_data, data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_remove_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$22.g_signal_remove_emission_hook$MH,"g_signal_remove_emission_hook");
    }
    public static void g_signal_remove_emission_hook ( int signal_id,  long hook_id) {
        var mh$ = g_signal_remove_emission_hook$MH();
        try {
            mh$.invokeExact(signal_id, hook_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_has_handler_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$22.g_signal_has_handler_pending$MH,"g_signal_has_handler_pending");
    }
    public static int g_signal_has_handler_pending ( Addressable instance,  int signal_id,  int detail,  int may_be_blocked) {
        var mh$ = g_signal_has_handler_pending$MH();
        try {
            return (int)mh$.invokeExact(instance, signal_id, detail, may_be_blocked);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$22.g_signal_connect_closure_by_id$MH,"g_signal_connect_closure_by_id");
    }
    public static long g_signal_connect_closure_by_id ( Addressable instance,  int signal_id,  int detail,  Addressable closure,  int after) {
        var mh$ = g_signal_connect_closure_by_id$MH();
        try {
            return (long)mh$.invokeExact(instance, signal_id, detail, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$23.g_signal_connect_closure$MH,"g_signal_connect_closure");
    }
    public static long g_signal_connect_closure ( Addressable instance,  Addressable detailed_signal,  Addressable closure,  int after) {
        var mh$ = g_signal_connect_closure$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_data$MH() {
        return RuntimeHelper.requireNonNull(constants$23.g_signal_connect_data$MH,"g_signal_connect_data");
    }
    public static long g_signal_connect_data ( Addressable instance,  Addressable detailed_signal,  Addressable c_handler,  Addressable data,  Addressable destroy_data,  int connect_flags) {
        var mh$ = g_signal_connect_data$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, data, destroy_data, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_block$MH() {
        return RuntimeHelper.requireNonNull(constants$23.g_signal_handler_block$MH,"g_signal_handler_block");
    }
    public static void g_signal_handler_block ( Addressable instance,  long handler_id) {
        var mh$ = g_signal_handler_block$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_unblock$MH() {
        return RuntimeHelper.requireNonNull(constants$23.g_signal_handler_unblock$MH,"g_signal_handler_unblock");
    }
    public static void g_signal_handler_unblock ( Addressable instance,  long handler_id) {
        var mh$ = g_signal_handler_unblock$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$23.g_signal_handler_disconnect$MH,"g_signal_handler_disconnect");
    }
    public static void g_signal_handler_disconnect ( Addressable instance,  long handler_id) {
        var mh$ = g_signal_handler_disconnect$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$23.g_signal_handler_is_connected$MH,"g_signal_handler_is_connected");
    }
    public static int g_signal_handler_is_connected ( Addressable instance,  long handler_id) {
        var mh$ = g_signal_handler_is_connected$MH();
        try {
            return (int)mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_find$MH() {
        return RuntimeHelper.requireNonNull(constants$24.g_signal_handler_find$MH,"g_signal_handler_find");
    }
    public static long g_signal_handler_find ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = g_signal_handler_find$MH();
        try {
            return (long)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_block_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$24.g_signal_handlers_block_matched$MH,"g_signal_handlers_block_matched");
    }
    public static int g_signal_handlers_block_matched ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = g_signal_handlers_block_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_unblock_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$24.g_signal_handlers_unblock_matched$MH,"g_signal_handlers_unblock_matched");
    }
    public static int g_signal_handlers_unblock_matched ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = g_signal_handlers_unblock_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_disconnect_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$24.g_signal_handlers_disconnect_matched$MH,"g_signal_handlers_disconnect_matched");
    }
    public static int g_signal_handlers_disconnect_matched ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = g_signal_handlers_disconnect_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_signal_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$24.g_clear_signal_handler$MH,"g_clear_signal_handler");
    }
    public static void g_clear_signal_handler ( Addressable handler_id_ptr,  Addressable instance) {
        var mh$ = g_clear_signal_handler$MH();
        try {
            mh$.invokeExact(handler_id_ptr, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$24.g_signal_override_class_closure$MH,"g_signal_override_class_closure");
    }
    public static void g_signal_override_class_closure ( int signal_id,  long instance_type,  Addressable class_closure) {
        var mh$ = g_signal_override_class_closure$MH();
        try {
            mh$.invokeExact(signal_id, instance_type, class_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$25.g_signal_override_class_handler$MH,"g_signal_override_class_handler");
    }
    public static void g_signal_override_class_handler ( Addressable signal_name,  long instance_type,  Addressable class_handler) {
        var mh$ = g_signal_override_class_handler$MH();
        try {
            mh$.invokeExact(signal_name, instance_type, class_handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden$MH() {
        return RuntimeHelper.requireNonNull(constants$25.g_signal_chain_from_overridden$MH,"g_signal_chain_from_overridden");
    }
    public static void g_signal_chain_from_overridden ( Addressable instance_and_params,  Addressable return_value) {
        var mh$ = g_signal_chain_from_overridden$MH();
        try {
            mh$.invokeExact(instance_and_params, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$25.g_signal_chain_from_overridden_handler$MH,"g_signal_chain_from_overridden_handler");
    }
    public static void g_signal_chain_from_overridden_handler ( Addressable instance, Object... x1) {
        var mh$ = g_signal_chain_from_overridden_handler$MH();
        try {
            mh$.invokeExact(instance, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_true_handled$MH() {
        return RuntimeHelper.requireNonNull(constants$25.g_signal_accumulator_true_handled$MH,"g_signal_accumulator_true_handled");
    }
    public static int g_signal_accumulator_true_handled ( Addressable ihint,  Addressable return_accu,  Addressable handler_return,  Addressable dummy) {
        var mh$ = g_signal_accumulator_true_handled$MH();
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_first_wins$MH() {
        return RuntimeHelper.requireNonNull(constants$25.g_signal_accumulator_first_wins$MH,"g_signal_accumulator_first_wins");
    }
    public static int g_signal_accumulator_first_wins ( Addressable ihint,  Addressable return_accu,  Addressable handler_return,  Addressable dummy) {
        var mh$ = g_signal_accumulator_first_wins$MH();
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$25.g_signal_handlers_destroy$MH,"g_signal_handlers_destroy");
    }
    public static void g_signal_handlers_destroy ( Addressable instance) {
        var mh$ = g_signal_handlers_destroy$MH();
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_signals_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$26._g_signals_destroy$MH,"_g_signals_destroy");
    }
    public static void _g_signals_destroy ( long itype) {
        var mh$ = _g_signals_destroy$MH();
        try {
            mh$.invokeExact(itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initially_unowned_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$27.g_initially_unowned_get_type$MH,"g_initially_unowned_get_type");
    }
    public static long g_initially_unowned_get_type () {
        var mh$ = g_initially_unowned_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_install_property$MH() {
        return RuntimeHelper.requireNonNull(constants$27.g_object_class_install_property$MH,"g_object_class_install_property");
    }
    public static void g_object_class_install_property ( Addressable oclass,  int property_id,  Addressable pspec) {
        var mh$ = g_object_class_install_property$MH();
        try {
            mh$.invokeExact(oclass, property_id, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_find_property$MH() {
        return RuntimeHelper.requireNonNull(constants$27.g_object_class_find_property$MH,"g_object_class_find_property");
    }
    public static MemoryAddress g_object_class_find_property ( Addressable oclass,  Addressable property_name) {
        var mh$ = g_object_class_find_property$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(oclass, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_list_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$28.g_object_class_list_properties$MH,"g_object_class_list_properties");
    }
    public static MemoryAddress g_object_class_list_properties ( Addressable oclass,  Addressable n_properties) {
        var mh$ = g_object_class_list_properties$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(oclass, n_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_override_property$MH() {
        return RuntimeHelper.requireNonNull(constants$28.g_object_class_override_property$MH,"g_object_class_override_property");
    }
    public static void g_object_class_override_property ( Addressable oclass,  int property_id,  Addressable name) {
        var mh$ = g_object_class_override_property$MH();
        try {
            mh$.invokeExact(oclass, property_id, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_install_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$28.g_object_class_install_properties$MH,"g_object_class_install_properties");
    }
    public static void g_object_class_install_properties ( Addressable oclass,  int n_pspecs,  Addressable pspecs) {
        var mh$ = g_object_class_install_properties$MH();
        try {
            mh$.invokeExact(oclass, n_pspecs, pspecs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_install_property$MH() {
        return RuntimeHelper.requireNonNull(constants$28.g_object_interface_install_property$MH,"g_object_interface_install_property");
    }
    public static void g_object_interface_install_property ( Addressable g_iface,  Addressable pspec) {
        var mh$ = g_object_interface_install_property$MH();
        try {
            mh$.invokeExact(g_iface, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_find_property$MH() {
        return RuntimeHelper.requireNonNull(constants$28.g_object_interface_find_property$MH,"g_object_interface_find_property");
    }
    public static MemoryAddress g_object_interface_find_property ( Addressable g_iface,  Addressable property_name) {
        var mh$ = g_object_interface_find_property$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_iface, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_list_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$28.g_object_interface_list_properties$MH,"g_object_interface_list_properties");
    }
    public static MemoryAddress g_object_interface_list_properties ( Addressable g_iface,  Addressable n_properties_p) {
        var mh$ = g_object_interface_list_properties$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_iface, n_properties_p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$29.g_object_get_type$MH,"g_object_get_type");
    }
    public static long g_object_get_type () {
        var mh$ = g_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$29.g_object_new$MH,"g_object_new");
    }
    public static MemoryAddress g_object_new ( long object_type,  Addressable first_property_name, Object... x2) {
        var mh$ = g_object_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new_with_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$29.g_object_new_with_properties$MH,"g_object_new_with_properties");
    }
    public static MemoryAddress g_object_new_with_properties ( long object_type,  int n_properties,  Addressable names,  Addressable values) {
        var mh$ = g_object_new_with_properties$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$29.g_object_newv$MH,"g_object_newv");
    }
    public static MemoryAddress g_object_newv ( long object_type,  int n_parameters,  Addressable parameters) {
        var mh$ = g_object_newv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, n_parameters, parameters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$29.g_object_new_valist$MH,"g_object_new_valist");
    }
    public static MemoryAddress g_object_new_valist ( long object_type,  Addressable first_property_name,  Addressable var_args) {
        var mh$ = g_object_new_valist$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set$MH() {
        return RuntimeHelper.requireNonNull(constants$29.g_object_set$MH,"g_object_set");
    }
    public static void g_object_set ( Addressable object,  Addressable first_property_name, Object... x2) {
        var mh$ = g_object_set$MH();
        try {
            mh$.invokeExact(object, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get$MH() {
        return RuntimeHelper.requireNonNull(constants$30.g_object_get$MH,"g_object_get");
    }
    public static void g_object_get ( Addressable object,  Addressable first_property_name, Object... x2) {
        var mh$ = g_object_get$MH();
        try {
            mh$.invokeExact(object, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$30.g_object_connect$MH,"g_object_connect");
    }
    public static MemoryAddress g_object_connect ( Addressable object,  Addressable signal_spec, Object... x2) {
        var mh$ = g_object_connect$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, signal_spec, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$30.g_object_disconnect$MH,"g_object_disconnect");
    }
    public static void g_object_disconnect ( Addressable object,  Addressable signal_spec, Object... x2) {
        var mh$ = g_object_disconnect$MH();
        try {
            mh$.invokeExact(object, signal_spec, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_setv$MH() {
        return RuntimeHelper.requireNonNull(constants$30.g_object_setv$MH,"g_object_setv");
    }
    public static void g_object_setv ( Addressable object,  int n_properties,  Addressable names,  Addressable values) {
        var mh$ = g_object_setv$MH();
        try {
            mh$.invokeExact(object, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$30.g_object_set_valist$MH,"g_object_set_valist");
    }
    public static void g_object_set_valist ( Addressable object,  Addressable first_property_name,  Addressable var_args) {
        var mh$ = g_object_set_valist$MH();
        try {
            mh$.invokeExact(object, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_getv$MH() {
        return RuntimeHelper.requireNonNull(constants$30.g_object_getv$MH,"g_object_getv");
    }
    public static void g_object_getv ( Addressable object,  int n_properties,  Addressable names,  Addressable values) {
        var mh$ = g_object_getv$MH();
        try {
            mh$.invokeExact(object, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$31.g_object_get_valist$MH,"g_object_get_valist");
    }
    public static void g_object_get_valist ( Addressable object,  Addressable first_property_name,  Addressable var_args) {
        var mh$ = g_object_get_valist$MH();
        try {
            mh$.invokeExact(object, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$31.g_object_set_property$MH,"g_object_set_property");
    }
    public static void g_object_set_property ( Addressable object,  Addressable property_name,  Addressable value) {
        var mh$ = g_object_set_property$MH();
        try {
            mh$.invokeExact(object, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$31.g_object_get_property$MH,"g_object_get_property");
    }
    public static void g_object_get_property ( Addressable object,  Addressable property_name,  Addressable value) {
        var mh$ = g_object_get_property$MH();
        try {
            mh$.invokeExact(object, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_freeze_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$31.g_object_freeze_notify$MH,"g_object_freeze_notify");
    }
    public static void g_object_freeze_notify ( Addressable object) {
        var mh$ = g_object_freeze_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$31.g_object_notify$MH,"g_object_notify");
    }
    public static void g_object_notify ( Addressable object,  Addressable property_name) {
        var mh$ = g_object_notify$MH();
        try {
            mh$.invokeExact(object, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_notify_by_pspec$MH() {
        return RuntimeHelper.requireNonNull(constants$31.g_object_notify_by_pspec$MH,"g_object_notify_by_pspec");
    }
    public static void g_object_notify_by_pspec ( Addressable object,  Addressable pspec) {
        var mh$ = g_object_notify_by_pspec$MH();
        try {
            mh$.invokeExact(object, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_thaw_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$32.g_object_thaw_notify$MH,"g_object_thaw_notify");
    }
    public static void g_object_thaw_notify ( Addressable object) {
        var mh$ = g_object_thaw_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_is_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$32.g_object_is_floating$MH,"g_object_is_floating");
    }
    public static int g_object_is_floating ( Addressable object) {
        var mh$ = g_object_is_floating$MH();
        try {
            return (int)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$32.g_object_ref_sink$MH,"g_object_ref_sink");
    }
    public static MemoryAddress g_object_ref_sink ( Addressable object) {
        var mh$ = g_object_ref_sink$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_take_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$32.g_object_take_ref$MH,"g_object_take_ref");
    }
    public static MemoryAddress g_object_take_ref ( Addressable object) {
        var mh$ = g_object_take_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$32.g_object_ref$MH,"g_object_ref");
    }
    public static MemoryAddress g_object_ref ( Addressable object) {
        var mh$ = g_object_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$32.g_object_unref$MH,"g_object_unref");
    }
    public static void g_object_unref ( Addressable object) {
        var mh$ = g_object_unref$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_weak_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$33.g_object_weak_ref$MH,"g_object_weak_ref");
    }
    public static void g_object_weak_ref ( Addressable object,  Addressable notify,  Addressable data) {
        var mh$ = g_object_weak_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_weak_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$33.g_object_weak_unref$MH,"g_object_weak_unref");
    }
    public static void g_object_weak_unref ( Addressable object,  Addressable notify,  Addressable data) {
        var mh$ = g_object_weak_unref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_add_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$33.g_object_add_weak_pointer$MH,"g_object_add_weak_pointer");
    }
    public static void g_object_add_weak_pointer ( Addressable object,  Addressable weak_pointer_location) {
        var mh$ = g_object_add_weak_pointer$MH();
        try {
            mh$.invokeExact(object, weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_remove_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$33.g_object_remove_weak_pointer$MH,"g_object_remove_weak_pointer");
    }
    public static void g_object_remove_weak_pointer ( Addressable object,  Addressable weak_pointer_location) {
        var mh$ = g_object_remove_weak_pointer$MH();
        try {
            mh$.invokeExact(object, weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_add_toggle_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$34.g_object_add_toggle_ref$MH,"g_object_add_toggle_ref");
    }
    public static void g_object_add_toggle_ref ( Addressable object,  Addressable notify,  Addressable data) {
        var mh$ = g_object_add_toggle_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_remove_toggle_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$34.g_object_remove_toggle_ref$MH,"g_object_remove_toggle_ref");
    }
    public static void g_object_remove_toggle_ref ( Addressable object,  Addressable notify,  Addressable data) {
        var mh$ = g_object_remove_toggle_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$34.g_object_get_qdata$MH,"g_object_get_qdata");
    }
    public static MemoryAddress g_object_get_qdata ( Addressable object,  int quark) {
        var mh$ = g_object_get_qdata$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$34.g_object_set_qdata$MH,"g_object_set_qdata");
    }
    public static void g_object_set_qdata ( Addressable object,  int quark,  Addressable data) {
        var mh$ = g_object_set_qdata$MH();
        try {
            mh$.invokeExact(object, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_qdata_full$MH() {
        return RuntimeHelper.requireNonNull(constants$34.g_object_set_qdata_full$MH,"g_object_set_qdata_full");
    }
    public static void g_object_set_qdata_full ( Addressable object,  int quark,  Addressable data,  Addressable destroy) {
        var mh$ = g_object_set_qdata_full$MH();
        try {
            mh$.invokeExact(object, quark, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_steal_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$34.g_object_steal_qdata$MH,"g_object_steal_qdata");
    }
    public static MemoryAddress g_object_steal_qdata ( Addressable object,  int quark) {
        var mh$ = g_object_steal_qdata$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_dup_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$35.g_object_dup_qdata$MH,"g_object_dup_qdata");
    }
    public static MemoryAddress g_object_dup_qdata ( Addressable object,  int quark,  Addressable dup_func,  Addressable user_data) {
        var mh$ = g_object_dup_qdata$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, quark, dup_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_replace_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$35.g_object_replace_qdata$MH,"g_object_replace_qdata");
    }
    public static int g_object_replace_qdata ( Addressable object,  int quark,  Addressable oldval,  Addressable newval,  Addressable destroy,  Addressable old_destroy) {
        var mh$ = g_object_replace_qdata$MH();
        try {
            return (int)mh$.invokeExact(object, quark, oldval, newval, destroy, old_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$35.g_object_get_data$MH,"g_object_get_data");
    }
    public static MemoryAddress g_object_get_data ( Addressable object,  Addressable key) {
        var mh$ = g_object_get_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_data$MH() {
        return RuntimeHelper.requireNonNull(constants$35.g_object_set_data$MH,"g_object_set_data");
    }
    public static void g_object_set_data ( Addressable object,  Addressable key,  Addressable data) {
        var mh$ = g_object_set_data$MH();
        try {
            mh$.invokeExact(object, key, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_data_full$MH() {
        return RuntimeHelper.requireNonNull(constants$35.g_object_set_data_full$MH,"g_object_set_data_full");
    }
    public static void g_object_set_data_full ( Addressable object,  Addressable key,  Addressable data,  Addressable destroy) {
        var mh$ = g_object_set_data_full$MH();
        try {
            mh$.invokeExact(object, key, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_steal_data$MH() {
        return RuntimeHelper.requireNonNull(constants$35.g_object_steal_data$MH,"g_object_steal_data");
    }
    public static MemoryAddress g_object_steal_data ( Addressable object,  Addressable key) {
        var mh$ = g_object_steal_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_dup_data$MH() {
        return RuntimeHelper.requireNonNull(constants$36.g_object_dup_data$MH,"g_object_dup_data");
    }
    public static MemoryAddress g_object_dup_data ( Addressable object,  Addressable key,  Addressable dup_func,  Addressable user_data) {
        var mh$ = g_object_dup_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, key, dup_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_replace_data$MH() {
        return RuntimeHelper.requireNonNull(constants$36.g_object_replace_data$MH,"g_object_replace_data");
    }
    public static int g_object_replace_data ( Addressable object,  Addressable key,  Addressable oldval,  Addressable newval,  Addressable destroy,  Addressable old_destroy) {
        var mh$ = g_object_replace_data$MH();
        try {
            return (int)mh$.invokeExact(object, key, oldval, newval, destroy, old_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_watch_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$36.g_object_watch_closure$MH,"g_object_watch_closure");
    }
    public static void g_object_watch_closure ( Addressable object,  Addressable closure) {
        var mh$ = g_object_watch_closure$MH();
        try {
            mh$.invokeExact(object, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_object$MH() {
        return RuntimeHelper.requireNonNull(constants$36.g_cclosure_new_object$MH,"g_cclosure_new_object");
    }
    public static MemoryAddress g_cclosure_new_object ( Addressable callback_func,  Addressable object) {
        var mh$ = g_cclosure_new_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(callback_func, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_object_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$36.g_cclosure_new_object_swap$MH,"g_cclosure_new_object_swap");
    }
    public static MemoryAddress g_cclosure_new_object_swap ( Addressable callback_func,  Addressable object) {
        var mh$ = g_cclosure_new_object_swap$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(callback_func, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_new_object$MH() {
        return RuntimeHelper.requireNonNull(constants$36.g_closure_new_object$MH,"g_closure_new_object");
    }
    public static MemoryAddress g_closure_new_object ( int sizeof_closure,  Addressable object) {
        var mh$ = g_closure_new_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(sizeof_closure, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_object$MH() {
        return RuntimeHelper.requireNonNull(constants$37.g_value_set_object$MH,"g_value_set_object");
    }
    public static void g_value_set_object ( Addressable value,  Addressable v_object) {
        var mh$ = g_value_set_object$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$37.g_value_get_object$MH,"g_value_get_object");
    }
    public static MemoryAddress g_value_get_object ( Addressable value) {
        var mh$ = g_value_get_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_object$MH() {
        return RuntimeHelper.requireNonNull(constants$37.g_value_dup_object$MH,"g_value_dup_object");
    }
    public static MemoryAddress g_value_dup_object ( Addressable value) {
        var mh$ = g_value_dup_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_object$MH() {
        return RuntimeHelper.requireNonNull(constants$37.g_signal_connect_object$MH,"g_signal_connect_object");
    }
    public static long g_signal_connect_object ( Addressable instance,  Addressable detailed_signal,  Addressable c_handler,  Addressable gobject,  int connect_flags) {
        var mh$ = g_signal_connect_object$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, gobject, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_force_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$37.g_object_force_floating$MH,"g_object_force_floating");
    }
    public static void g_object_force_floating ( Addressable object) {
        var mh$ = g_object_force_floating$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_run_dispose$MH() {
        return RuntimeHelper.requireNonNull(constants$37.g_object_run_dispose$MH,"g_object_run_dispose");
    }
    public static void g_object_run_dispose ( Addressable object) {
        var mh$ = g_object_run_dispose$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_object$MH() {
        return RuntimeHelper.requireNonNull(constants$38.g_value_take_object$MH,"g_value_take_object");
    }
    public static void g_value_take_object ( Addressable value,  Addressable v_object) {
        var mh$ = g_value_take_object$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_object_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$38.g_value_set_object_take_ownership$MH,"g_value_set_object_take_ownership");
    }
    public static void g_value_set_object_take_ownership ( Addressable value,  Addressable v_object) {
        var mh$ = g_value_set_object_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_compat_control$MH() {
        return RuntimeHelper.requireNonNull(constants$38.g_object_compat_control$MH,"g_object_compat_control");
    }
    public static long g_object_compat_control ( long what,  Addressable data) {
        var mh$ = g_object_compat_control$MH();
        try {
            return (long)mh$.invokeExact(what, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_object$MH() {
        return RuntimeHelper.requireNonNull(constants$38.g_clear_object$MH,"g_clear_object");
    }
    public static void g_clear_object ( Addressable object_ptr) {
        var mh$ = g_clear_object$MH();
        try {
            mh$.invokeExact(object_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_set_object$MH() {
        return RuntimeHelper.requireNonNull(constants$38.g_set_object$MH,"g_set_object");
    }
    public static int g_set_object ( Addressable object_ptr,  Addressable new_object) {
        var mh$ = g_set_object$MH();
        try {
            return (int)mh$.invokeExact(object_ptr, new_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_assert_finalize_object$MH() {
        return RuntimeHelper.requireNonNull(constants$38.g_assert_finalize_object$MH,"g_assert_finalize_object");
    }
    public static void g_assert_finalize_object ( Addressable object) {
        var mh$ = g_assert_finalize_object$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$39.g_clear_weak_pointer$MH,"g_clear_weak_pointer");
    }
    public static void g_clear_weak_pointer ( Addressable weak_pointer_location) {
        var mh$ = g_clear_weak_pointer$MH();
        try {
            mh$.invokeExact(weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_set_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$39.g_set_weak_pointer$MH,"g_set_weak_pointer");
    }
    public static int g_set_weak_pointer ( Addressable weak_pointer_location,  Addressable new_object) {
        var mh$ = g_set_weak_pointer$MH();
        try {
            return (int)mh$.invokeExact(weak_pointer_location, new_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_init$MH() {
        return RuntimeHelper.requireNonNull(constants$39.g_weak_ref_init$MH,"g_weak_ref_init");
    }
    public static void g_weak_ref_init ( Addressable weak_ref,  Addressable object) {
        var mh$ = g_weak_ref_init$MH();
        try {
            mh$.invokeExact(weak_ref, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$39.g_weak_ref_clear$MH,"g_weak_ref_clear");
    }
    public static void g_weak_ref_clear ( Addressable weak_ref) {
        var mh$ = g_weak_ref_clear$MH();
        try {
            mh$.invokeExact(weak_ref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_get$MH() {
        return RuntimeHelper.requireNonNull(constants$39.g_weak_ref_get$MH,"g_weak_ref_get");
    }
    public static MemoryAddress g_weak_ref_get ( Addressable weak_ref) {
        var mh$ = g_weak_ref_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(weak_ref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_set$MH() {
        return RuntimeHelper.requireNonNull(constants$39.g_weak_ref_set$MH,"g_weak_ref_set");
    }
    public static void g_weak_ref_set ( Addressable weak_ref,  Addressable object) {
        var mh$ = g_weak_ref_set$MH();
        try {
            mh$.invokeExact(weak_ref, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_PRECISION_INTEGER() {
        return (int)0L;
    }
    public static int VIPS_PRECISION_FLOAT() {
        return (int)1L;
    }
    public static int VIPS_PRECISION_APPROXIMATE() {
        return (int)2L;
    }
    public static int VIPS_PRECISION_LAST() {
        return (int)3L;
    }
    public static MethodHandle vips_path_filename7$MH() {
        return RuntimeHelper.requireNonNull(constants$41.vips_path_filename7$MH,"vips_path_filename7");
    }
    public static MemoryAddress vips_path_filename7 ( Addressable path) {
        var mh$ = vips_path_filename7$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_path_mode7$MH() {
        return RuntimeHelper.requireNonNull(constants$41.vips_path_mode7$MH,"vips_path_mode7");
    }
    public static MemoryAddress vips_path_mode7 ( Addressable path) {
        var mh$ = vips_path_mode7$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_rewind$MH() {
        return RuntimeHelper.requireNonNull(constants$41.vips_buf_rewind$MH,"vips_buf_rewind");
    }
    public static void vips_buf_rewind ( Addressable buf) {
        var mh$ = vips_buf_rewind$MH();
        try {
            mh$.invokeExact(buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$41.vips_buf_destroy$MH,"vips_buf_destroy");
    }
    public static void vips_buf_destroy ( Addressable buf) {
        var mh$ = vips_buf_destroy$MH();
        try {
            mh$.invokeExact(buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_init$MH() {
        return RuntimeHelper.requireNonNull(constants$42.vips_buf_init$MH,"vips_buf_init");
    }
    public static void vips_buf_init ( Addressable buf) {
        var mh$ = vips_buf_init$MH();
        try {
            mh$.invokeExact(buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_set_static$MH() {
        return RuntimeHelper.requireNonNull(constants$42.vips_buf_set_static$MH,"vips_buf_set_static");
    }
    public static void vips_buf_set_static ( Addressable buf,  Addressable base,  int mx) {
        var mh$ = vips_buf_set_static$MH();
        try {
            mh$.invokeExact(buf, base, mx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_set_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$42.vips_buf_set_dynamic$MH,"vips_buf_set_dynamic");
    }
    public static void vips_buf_set_dynamic ( Addressable buf,  int mx) {
        var mh$ = vips_buf_set_dynamic$MH();
        try {
            mh$.invokeExact(buf, mx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_init_static$MH() {
        return RuntimeHelper.requireNonNull(constants$42.vips_buf_init_static$MH,"vips_buf_init_static");
    }
    public static void vips_buf_init_static ( Addressable buf,  Addressable base,  int mx) {
        var mh$ = vips_buf_init_static$MH();
        try {
            mh$.invokeExact(buf, base, mx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_init_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$42.vips_buf_init_dynamic$MH,"vips_buf_init_dynamic");
    }
    public static void vips_buf_init_dynamic ( Addressable buf,  int mx) {
        var mh$ = vips_buf_init_dynamic$MH();
        try {
            mh$.invokeExact(buf, mx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_appendns$MH() {
        return RuntimeHelper.requireNonNull(constants$42.vips_buf_appendns$MH,"vips_buf_appendns");
    }
    public static int vips_buf_appendns ( Addressable buf,  Addressable str,  int sz) {
        var mh$ = vips_buf_appendns$MH();
        try {
            return (int)mh$.invokeExact(buf, str, sz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_appends$MH() {
        return RuntimeHelper.requireNonNull(constants$43.vips_buf_appends$MH,"vips_buf_appends");
    }
    public static int vips_buf_appends ( Addressable buf,  Addressable str) {
        var mh$ = vips_buf_appends$MH();
        try {
            return (int)mh$.invokeExact(buf, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_appendf$MH() {
        return RuntimeHelper.requireNonNull(constants$43.vips_buf_appendf$MH,"vips_buf_appendf");
    }
    public static int vips_buf_appendf ( Addressable buf,  Addressable fmt, Object... x2) {
        var mh$ = vips_buf_appendf$MH();
        try {
            return (int)mh$.invokeExact(buf, fmt, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_vappendf$MH() {
        return RuntimeHelper.requireNonNull(constants$43.vips_buf_vappendf$MH,"vips_buf_vappendf");
    }
    public static int vips_buf_vappendf ( Addressable buf,  Addressable fmt,  Addressable ap) {
        var mh$ = vips_buf_vappendf$MH();
        try {
            return (int)mh$.invokeExact(buf, fmt, ap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_appendc$MH() {
        return RuntimeHelper.requireNonNull(constants$43.vips_buf_appendc$MH,"vips_buf_appendc");
    }
    public static int vips_buf_appendc ( Addressable buf,  byte ch) {
        var mh$ = vips_buf_appendc$MH();
        try {
            return (int)mh$.invokeExact(buf, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_appendsc$MH() {
        return RuntimeHelper.requireNonNull(constants$43.vips_buf_appendsc$MH,"vips_buf_appendsc");
    }
    public static int vips_buf_appendsc ( Addressable buf,  int quote,  Addressable str) {
        var mh$ = vips_buf_appendsc$MH();
        try {
            return (int)mh$.invokeExact(buf, quote, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_appendgv$MH() {
        return RuntimeHelper.requireNonNull(constants$43.vips_buf_appendgv$MH,"vips_buf_appendgv");
    }
    public static int vips_buf_appendgv ( Addressable buf,  Addressable value) {
        var mh$ = vips_buf_appendgv$MH();
        try {
            return (int)mh$.invokeExact(buf, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_append_size$MH() {
        return RuntimeHelper.requireNonNull(constants$44.vips_buf_append_size$MH,"vips_buf_append_size");
    }
    public static int vips_buf_append_size ( Addressable buf,  long n) {
        var mh$ = vips_buf_append_size$MH();
        try {
            return (int)mh$.invokeExact(buf, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_removec$MH() {
        return RuntimeHelper.requireNonNull(constants$44.vips_buf_removec$MH,"vips_buf_removec");
    }
    public static int vips_buf_removec ( Addressable buf,  byte ch) {
        var mh$ = vips_buf_removec$MH();
        try {
            return (int)mh$.invokeExact(buf, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_change$MH() {
        return RuntimeHelper.requireNonNull(constants$44.vips_buf_change$MH,"vips_buf_change");
    }
    public static int vips_buf_change ( Addressable buf,  Addressable o,  Addressable n) {
        var mh$ = vips_buf_change$MH();
        try {
            return (int)mh$.invokeExact(buf, o, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$44.vips_buf_is_empty$MH,"vips_buf_is_empty");
    }
    public static int vips_buf_is_empty ( Addressable buf) {
        var mh$ = vips_buf_is_empty$MH();
        try {
            return (int)mh$.invokeExact(buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_is_full$MH() {
        return RuntimeHelper.requireNonNull(constants$44.vips_buf_is_full$MH,"vips_buf_is_full");
    }
    public static int vips_buf_is_full ( Addressable buf) {
        var mh$ = vips_buf_is_full$MH();
        try {
            return (int)mh$.invokeExact(buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_all$MH() {
        return RuntimeHelper.requireNonNull(constants$44.vips_buf_all$MH,"vips_buf_all");
    }
    public static MemoryAddress vips_buf_all ( Addressable buf) {
        var mh$ = vips_buf_all$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_firstline$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vips_buf_firstline$MH,"vips_buf_firstline");
    }
    public static MemoryAddress vips_buf_firstline ( Addressable buf) {
        var mh$ = vips_buf_firstline$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_appendg$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vips_buf_appendg$MH,"vips_buf_appendg");
    }
    public static int vips_buf_appendg ( Addressable buf,  double g) {
        var mh$ = vips_buf_appendg$MH();
        try {
            return (int)mh$.invokeExact(buf, g);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_appendd$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vips_buf_appendd$MH,"vips_buf_appendd");
    }
    public static int vips_buf_appendd ( Addressable buf,  int d) {
        var mh$ = vips_buf_appendd$MH();
        try {
            return (int)mh$.invokeExact(buf, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buf_len$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vips_buf_len$MH,"vips_buf_len");
    }
    public static int vips_buf_len ( Addressable buf) {
        var mh$ = vips_buf_len$MH();
        try {
            return (int)mh$.invokeExact(buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vips_dbuf_destroy$MH,"vips_dbuf_destroy");
    }
    public static void vips_dbuf_destroy ( Addressable dbuf) {
        var mh$ = vips_dbuf_destroy$MH();
        try {
            mh$.invokeExact(dbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_init$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vips_dbuf_init$MH,"vips_dbuf_init");
    }
    public static void vips_dbuf_init ( Addressable dbuf) {
        var mh$ = vips_dbuf_init$MH();
        try {
            mh$.invokeExact(dbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_minimum_size$MH() {
        return RuntimeHelper.requireNonNull(constants$46.vips_dbuf_minimum_size$MH,"vips_dbuf_minimum_size");
    }
    public static int vips_dbuf_minimum_size ( Addressable dbuf,  long size) {
        var mh$ = vips_dbuf_minimum_size$MH();
        try {
            return (int)mh$.invokeExact(dbuf, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$46.vips_dbuf_allocate$MH,"vips_dbuf_allocate");
    }
    public static int vips_dbuf_allocate ( Addressable dbuf,  long size) {
        var mh$ = vips_dbuf_allocate$MH();
        try {
            return (int)mh$.invokeExact(dbuf, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_read$MH() {
        return RuntimeHelper.requireNonNull(constants$46.vips_dbuf_read$MH,"vips_dbuf_read");
    }
    public static long vips_dbuf_read ( Addressable dbuf,  Addressable data,  long size) {
        var mh$ = vips_dbuf_read$MH();
        try {
            return (long)mh$.invokeExact(dbuf, data, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_get_write$MH() {
        return RuntimeHelper.requireNonNull(constants$46.vips_dbuf_get_write$MH,"vips_dbuf_get_write");
    }
    public static MemoryAddress vips_dbuf_get_write ( Addressable dbuf,  Addressable size) {
        var mh$ = vips_dbuf_get_write$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dbuf, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_write$MH() {
        return RuntimeHelper.requireNonNull(constants$46.vips_dbuf_write$MH,"vips_dbuf_write");
    }
    public static int vips_dbuf_write ( Addressable dbuf,  Addressable data,  long size) {
        var mh$ = vips_dbuf_write$MH();
        try {
            return (int)mh$.invokeExact(dbuf, data, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_writef$MH() {
        return RuntimeHelper.requireNonNull(constants$46.vips_dbuf_writef$MH,"vips_dbuf_writef");
    }
    public static int vips_dbuf_writef ( Addressable dbuf,  Addressable fmt, Object... x2) {
        var mh$ = vips_dbuf_writef$MH();
        try {
            return (int)mh$.invokeExact(dbuf, fmt, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_write_amp$MH() {
        return RuntimeHelper.requireNonNull(constants$47.vips_dbuf_write_amp$MH,"vips_dbuf_write_amp");
    }
    public static int vips_dbuf_write_amp ( Addressable dbuf,  Addressable str) {
        var mh$ = vips_dbuf_write_amp$MH();
        try {
            return (int)mh$.invokeExact(dbuf, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$47.vips_dbuf_reset$MH,"vips_dbuf_reset");
    }
    public static void vips_dbuf_reset ( Addressable dbuf) {
        var mh$ = vips_dbuf_reset$MH();
        try {
            mh$.invokeExact(dbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$47.vips_dbuf_seek$MH,"vips_dbuf_seek");
    }
    public static int vips_dbuf_seek ( Addressable dbuf,  long offset,  int whence) {
        var mh$ = vips_dbuf_seek$MH();
        try {
            return (int)mh$.invokeExact(dbuf, offset, whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$47.vips_dbuf_truncate$MH,"vips_dbuf_truncate");
    }
    public static void vips_dbuf_truncate ( Addressable dbuf) {
        var mh$ = vips_dbuf_truncate$MH();
        try {
            mh$.invokeExact(dbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_tell$MH() {
        return RuntimeHelper.requireNonNull(constants$47.vips_dbuf_tell$MH,"vips_dbuf_tell");
    }
    public static long vips_dbuf_tell ( Addressable dbuf) {
        var mh$ = vips_dbuf_tell$MH();
        try {
            return (long)mh$.invokeExact(dbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_string$MH() {
        return RuntimeHelper.requireNonNull(constants$47.vips_dbuf_string$MH,"vips_dbuf_string");
    }
    public static MemoryAddress vips_dbuf_string ( Addressable dbuf,  Addressable size) {
        var mh$ = vips_dbuf_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dbuf, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_dbuf_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$48.vips_dbuf_steal$MH,"vips_dbuf_steal");
    }
    public static MemoryAddress vips_dbuf_steal ( Addressable dbuf,  Addressable size) {
        var mh$ = vips_dbuf_steal$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dbuf, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_enum_string$MH() {
        return RuntimeHelper.requireNonNull(constants$48.vips_enum_string$MH,"vips_enum_string");
    }
    public static MemoryAddress vips_enum_string ( long enm,  int value) {
        var mh$ = vips_enum_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(enm, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_enum_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$48.vips_enum_nick$MH,"vips_enum_nick");
    }
    public static MemoryAddress vips_enum_nick ( long enm,  int value) {
        var mh$ = vips_enum_nick$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(enm, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_enum_from_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$48.vips_enum_from_nick$MH,"vips_enum_from_nick");
    }
    public static int vips_enum_from_nick ( Addressable domain,  long type,  Addressable str) {
        var mh$ = vips_enum_from_nick$MH();
        try {
            return (int)mh$.invokeExact(domain, type, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_flags_from_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$48.vips_flags_from_nick$MH,"vips_flags_from_nick");
    }
    public static int vips_flags_from_nick ( Addressable domain,  long type,  Addressable nick) {
        var mh$ = vips_flags_from_nick$MH();
        try {
            return (int)mh$.invokeExact(domain, type, nick);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_slist_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$48.vips_slist_equal$MH,"vips_slist_equal");
    }
    public static int vips_slist_equal ( Addressable l1,  Addressable l2) {
        var mh$ = vips_slist_equal$MH();
        try {
            return (int)mh$.invokeExact(l1, l2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_slist_map2$MH() {
        return RuntimeHelper.requireNonNull(constants$49.vips_slist_map2$MH,"vips_slist_map2");
    }
    public static MemoryAddress vips_slist_map2 ( Addressable list,  Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_slist_map2$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_slist_map2_rev$MH() {
        return RuntimeHelper.requireNonNull(constants$49.vips_slist_map2_rev$MH,"vips_slist_map2_rev");
    }
    public static MemoryAddress vips_slist_map2_rev ( Addressable list,  Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_slist_map2_rev$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_slist_map4$MH() {
        return RuntimeHelper.requireNonNull(constants$49.vips_slist_map4$MH,"vips_slist_map4");
    }
    public static MemoryAddress vips_slist_map4 ( Addressable list,  Addressable fn,  Addressable a,  Addressable b,  Addressable c,  Addressable d) {
        var mh$ = vips_slist_map4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, fn, a, b, c, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_slist_fold2$MH() {
        return RuntimeHelper.requireNonNull(constants$49.vips_slist_fold2$MH,"vips_slist_fold2");
    }
    public static MemoryAddress vips_slist_fold2 ( Addressable list,  Addressable start,  Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_slist_fold2$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, start, fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_slist_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$49.vips_slist_filter$MH,"vips_slist_filter");
    }
    public static MemoryAddress vips_slist_filter ( Addressable list,  Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_slist_filter$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_slist_free_all$MH() {
        return RuntimeHelper.requireNonNull(constants$49.vips_slist_free_all$MH,"vips_slist_free_all");
    }
    public static void vips_slist_free_all ( Addressable list) {
        var mh$ = vips_slist_free_all$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_map_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$50.vips_map_equal$MH,"vips_map_equal");
    }
    public static MemoryAddress vips_map_equal ( Addressable a,  Addressable b) {
        var mh$ = vips_map_equal$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_hash_table_map$MH() {
        return RuntimeHelper.requireNonNull(constants$50.vips_hash_table_map$MH,"vips_hash_table_map");
    }
    public static MemoryAddress vips_hash_table_map ( Addressable hash,  Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_hash_table_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hash, fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_strncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$50.vips_strncpy$MH,"vips_strncpy");
    }
    public static MemoryAddress vips_strncpy ( Addressable dest,  Addressable src,  int n) {
        var mh$ = vips_strncpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dest, src, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_strrstr$MH() {
        return RuntimeHelper.requireNonNull(constants$50.vips_strrstr$MH,"vips_strrstr");
    }
    public static MemoryAddress vips_strrstr ( Addressable haystack,  Addressable needle) {
        var mh$ = vips_strrstr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(haystack, needle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ispostfix$MH() {
        return RuntimeHelper.requireNonNull(constants$50.vips_ispostfix$MH,"vips_ispostfix");
    }
    public static int vips_ispostfix ( Addressable a,  Addressable b) {
        var mh$ = vips_ispostfix$MH();
        try {
            return (int)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_iscasepostfix$MH() {
        return RuntimeHelper.requireNonNull(constants$50.vips_iscasepostfix$MH,"vips_iscasepostfix");
    }
    public static int vips_iscasepostfix ( Addressable a,  Addressable b) {
        var mh$ = vips_iscasepostfix$MH();
        try {
            return (int)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_isprefix$MH() {
        return RuntimeHelper.requireNonNull(constants$51.vips_isprefix$MH,"vips_isprefix");
    }
    public static int vips_isprefix ( Addressable a,  Addressable b) {
        var mh$ = vips_isprefix$MH();
        try {
            return (int)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_break_token$MH() {
        return RuntimeHelper.requireNonNull(constants$51.vips_break_token$MH,"vips_break_token");
    }
    public static MemoryAddress vips_break_token ( Addressable str,  Addressable brk) {
        var mh$ = vips_break_token$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, brk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__chomp$MH() {
        return RuntimeHelper.requireNonNull(constants$51.vips__chomp$MH,"vips__chomp");
    }
    public static void vips__chomp ( Addressable str) {
        var mh$ = vips__chomp$MH();
        try {
            mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$51.vips_vsnprintf$MH,"vips_vsnprintf");
    }
    public static int vips_vsnprintf ( Addressable str,  long size,  Addressable format,  Addressable ap) {
        var mh$ = vips_vsnprintf$MH();
        try {
            return (int)mh$.invokeExact(str, size, format, ap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$51.vips_snprintf$MH,"vips_snprintf");
    }
    public static int vips_snprintf ( Addressable str,  long size,  Addressable format, Object... x3) {
        var mh$ = vips_snprintf$MH();
        try {
            return (int)mh$.invokeExact(str, size, format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_filename_suffix_match$MH() {
        return RuntimeHelper.requireNonNull(constants$51.vips_filename_suffix_match$MH,"vips_filename_suffix_match");
    }
    public static int vips_filename_suffix_match ( Addressable path,  Addressable suffixes) {
        var mh$ = vips_filename_suffix_match$MH();
        try {
            return (int)mh$.invokeExact(path, suffixes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_file_length$MH() {
        return RuntimeHelper.requireNonNull(constants$52.vips_file_length$MH,"vips_file_length");
    }
    public static long vips_file_length ( int fd) {
        var mh$ = vips_file_length$MH();
        try {
            return (long)mh$.invokeExact(fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__write$MH() {
        return RuntimeHelper.requireNonNull(constants$52.vips__write$MH,"vips__write");
    }
    public static int vips__write ( int fd,  Addressable buf,  long count) {
        var mh$ = vips__write$MH();
        try {
            return (int)mh$.invokeExact(fd, buf, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__open$MH() {
        return RuntimeHelper.requireNonNull(constants$52.vips__open$MH,"vips__open");
    }
    public static int vips__open ( Addressable filename,  int flags,  int mode) {
        var mh$ = vips__open$MH();
        try {
            return (int)mh$.invokeExact(filename, flags, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__open_read$MH() {
        return RuntimeHelper.requireNonNull(constants$52.vips__open_read$MH,"vips__open_read");
    }
    public static int vips__open_read ( Addressable filename) {
        var mh$ = vips__open_read$MH();
        try {
            return (int)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__fopen$MH() {
        return RuntimeHelper.requireNonNull(constants$52.vips__fopen$MH,"vips__fopen");
    }
    public static MemoryAddress vips__fopen ( Addressable filename,  Addressable mode) {
        var mh$ = vips__fopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__file_open_read$MH() {
        return RuntimeHelper.requireNonNull(constants$52.vips__file_open_read$MH,"vips__file_open_read");
    }
    public static MemoryAddress vips__file_open_read ( Addressable filename,  Addressable fallback_dir,  int text_mode) {
        var mh$ = vips__file_open_read$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, fallback_dir, text_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__file_open_write$MH() {
        return RuntimeHelper.requireNonNull(constants$53.vips__file_open_write$MH,"vips__file_open_write");
    }
    public static MemoryAddress vips__file_open_write ( Addressable filename,  int text_mode) {
        var mh$ = vips__file_open_write$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, text_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__file_read$MH() {
        return RuntimeHelper.requireNonNull(constants$53.vips__file_read$MH,"vips__file_read");
    }
    public static MemoryAddress vips__file_read ( Addressable fp,  Addressable name,  Addressable length_out) {
        var mh$ = vips__file_read$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fp, name, length_out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__file_read_name$MH() {
        return RuntimeHelper.requireNonNull(constants$53.vips__file_read_name$MH,"vips__file_read_name");
    }
    public static MemoryAddress vips__file_read_name ( Addressable name,  Addressable fallback_dir,  Addressable length_out) {
        var mh$ = vips__file_read_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, fallback_dir, length_out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__file_write$MH() {
        return RuntimeHelper.requireNonNull(constants$53.vips__file_write$MH,"vips__file_write");
    }
    public static int vips__file_write ( Addressable data,  long size,  long nmemb,  Addressable stream) {
        var mh$ = vips__file_write$MH();
        try {
            return (int)mh$.invokeExact(data, size, nmemb, stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__get_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$53.vips__get_bytes$MH,"vips__get_bytes");
    }
    public static long vips__get_bytes ( Addressable filename,  Addressable buf,  long len) {
        var mh$ = vips__get_bytes$MH();
        try {
            return (long)mh$.invokeExact(filename, buf, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__fgetc$MH() {
        return RuntimeHelper.requireNonNull(constants$53.vips__fgetc$MH,"vips__fgetc");
    }
    public static int vips__fgetc ( Addressable fp) {
        var mh$ = vips__fgetc$MH();
        try {
            return (int)mh$.invokeExact(fp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__gvalue_ref_string_new$MH() {
        return RuntimeHelper.requireNonNull(constants$54.vips__gvalue_ref_string_new$MH,"vips__gvalue_ref_string_new");
    }
    public static MemoryAddress vips__gvalue_ref_string_new ( Addressable text) {
        var mh$ = vips__gvalue_ref_string_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__gslist_gvalue_free$MH() {
        return RuntimeHelper.requireNonNull(constants$54.vips__gslist_gvalue_free$MH,"vips__gslist_gvalue_free");
    }
    public static void vips__gslist_gvalue_free ( Addressable list) {
        var mh$ = vips__gslist_gvalue_free$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__gslist_gvalue_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$54.vips__gslist_gvalue_copy$MH,"vips__gslist_gvalue_copy");
    }
    public static MemoryAddress vips__gslist_gvalue_copy ( Addressable list) {
        var mh$ = vips__gslist_gvalue_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__gslist_gvalue_merge$MH() {
        return RuntimeHelper.requireNonNull(constants$54.vips__gslist_gvalue_merge$MH,"vips__gslist_gvalue_merge");
    }
    public static MemoryAddress vips__gslist_gvalue_merge ( Addressable a,  Addressable b) {
        var mh$ = vips__gslist_gvalue_merge$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__gslist_gvalue_get$MH() {
        return RuntimeHelper.requireNonNull(constants$54.vips__gslist_gvalue_get$MH,"vips__gslist_gvalue_get");
    }
    public static MemoryAddress vips__gslist_gvalue_get ( Addressable list) {
        var mh$ = vips__gslist_gvalue_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__seek_no_error$MH() {
        return RuntimeHelper.requireNonNull(constants$54.vips__seek_no_error$MH,"vips__seek_no_error");
    }
    public static long vips__seek_no_error ( int fd,  long pos,  int whence) {
        var mh$ = vips__seek_no_error$MH();
        try {
            return (long)mh$.invokeExact(fd, pos, whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__seek$MH() {
        return RuntimeHelper.requireNonNull(constants$55.vips__seek$MH,"vips__seek");
    }
    public static long vips__seek ( int fd,  long pos,  int whence) {
        var mh$ = vips__seek$MH();
        try {
            return (long)mh$.invokeExact(fd, pos, whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__ftruncate$MH() {
        return RuntimeHelper.requireNonNull(constants$55.vips__ftruncate$MH,"vips__ftruncate");
    }
    public static int vips__ftruncate ( int fd,  long pos) {
        var mh$ = vips__ftruncate$MH();
        try {
            return (int)mh$.invokeExact(fd, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_existsf$MH() {
        return RuntimeHelper.requireNonNull(constants$55.vips_existsf$MH,"vips_existsf");
    }
    public static int vips_existsf ( Addressable name, Object... x1) {
        var mh$ = vips_existsf$MH();
        try {
            return (int)mh$.invokeExact(name, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_isdirf$MH() {
        return RuntimeHelper.requireNonNull(constants$55.vips_isdirf$MH,"vips_isdirf");
    }
    public static int vips_isdirf ( Addressable name, Object... x1) {
        var mh$ = vips_isdirf$MH();
        try {
            return (int)mh$.invokeExact(name, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_mkdirf$MH() {
        return RuntimeHelper.requireNonNull(constants$55.vips_mkdirf$MH,"vips_mkdirf");
    }
    public static int vips_mkdirf ( Addressable name, Object... x1) {
        var mh$ = vips_mkdirf$MH();
        try {
            return (int)mh$.invokeExact(name, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rmdirf$MH() {
        return RuntimeHelper.requireNonNull(constants$55.vips_rmdirf$MH,"vips_rmdirf");
    }
    public static int vips_rmdirf ( Addressable name, Object... x1) {
        var mh$ = vips_rmdirf$MH();
        try {
            return (int)mh$.invokeExact(name, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rename$MH() {
        return RuntimeHelper.requireNonNull(constants$56.vips_rename$MH,"vips_rename");
    }
    public static int vips_rename ( Addressable old_name,  Addressable new_name) {
        var mh$ = vips_rename$MH();
        try {
            return (int)mh$.invokeExact(old_name, new_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_TOKEN_LEFT() {
        return (int)1L;
    }
    public static int VIPS_TOKEN_RIGHT() {
        return (int)2L;
    }
    public static int VIPS_TOKEN_STRING() {
        return (int)3L;
    }
    public static int VIPS_TOKEN_EQUALS() {
        return (int)4L;
    }
    public static int VIPS_TOKEN_COMMA() {
        return (int)5L;
    }
    public static MethodHandle vips__token_get$MH() {
        return RuntimeHelper.requireNonNull(constants$56.vips__token_get$MH,"vips__token_get");
    }
    public static MemoryAddress vips__token_get ( Addressable buffer,  Addressable token,  Addressable string,  int size) {
        var mh$ = vips__token_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, token, string, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__token_must$MH() {
        return RuntimeHelper.requireNonNull(constants$56.vips__token_must$MH,"vips__token_must");
    }
    public static MemoryAddress vips__token_must ( Addressable buffer,  Addressable token,  Addressable string,  int size) {
        var mh$ = vips__token_must$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, token, string, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__token_need$MH() {
        return RuntimeHelper.requireNonNull(constants$56.vips__token_need$MH,"vips__token_need");
    }
    public static MemoryAddress vips__token_need ( Addressable buffer,  int need_token,  Addressable string,  int size) {
        var mh$ = vips__token_need$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, need_token, string, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__token_segment$MH() {
        return RuntimeHelper.requireNonNull(constants$56.vips__token_segment$MH,"vips__token_segment");
    }
    public static MemoryAddress vips__token_segment ( Addressable p,  Addressable token,  Addressable string,  int size) {
        var mh$ = vips__token_segment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, token, string, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__token_segment_need$MH() {
        return RuntimeHelper.requireNonNull(constants$56.vips__token_segment_need$MH,"vips__token_segment_need");
    }
    public static MemoryAddress vips__token_segment_need ( Addressable p,  int need_token,  Addressable string,  int size) {
        var mh$ = vips__token_segment_need$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, need_token, string, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__find_rightmost_brackets$MH() {
        return RuntimeHelper.requireNonNull(constants$57.vips__find_rightmost_brackets$MH,"vips__find_rightmost_brackets");
    }
    public static MemoryAddress vips__find_rightmost_brackets ( Addressable p) {
        var mh$ = vips__find_rightmost_brackets$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__filename_split8$MH() {
        return RuntimeHelper.requireNonNull(constants$57.vips__filename_split8$MH,"vips__filename_split8");
    }
    public static void vips__filename_split8 ( Addressable name,  Addressable filename,  Addressable option_string) {
        var mh$ = vips__filename_split8$MH();
        try {
            mh$.invokeExact(name, filename, option_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ispoweroftwo$MH() {
        return RuntimeHelper.requireNonNull(constants$57.vips_ispoweroftwo$MH,"vips_ispoweroftwo");
    }
    public static int vips_ispoweroftwo ( int p) {
        var mh$ = vips_ispoweroftwo$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_amiMSBfirst$MH() {
        return RuntimeHelper.requireNonNull(constants$57.vips_amiMSBfirst$MH,"vips_amiMSBfirst");
    }
    public static int vips_amiMSBfirst () {
        var mh$ = vips_amiMSBfirst$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__temp_name$MH() {
        return RuntimeHelper.requireNonNull(constants$57.vips__temp_name$MH,"vips__temp_name");
    }
    public static MemoryAddress vips__temp_name ( Addressable format) {
        var mh$ = vips__temp_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__change_suffix$MH() {
        return RuntimeHelper.requireNonNull(constants$57.vips__change_suffix$MH,"vips__change_suffix");
    }
    public static void vips__change_suffix ( Addressable name,  Addressable out,  int mx,  Addressable new_suff,  Addressable olds,  int nolds) {
        var mh$ = vips__change_suffix$MH();
        try {
            mh$.invokeExact(name, out, mx, new_suff, olds, nolds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_realpath$MH() {
        return RuntimeHelper.requireNonNull(constants$58.vips_realpath$MH,"vips_realpath");
    }
    public static MemoryAddress vips_realpath ( Addressable path) {
        var mh$ = vips_realpath$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__random$MH() {
        return RuntimeHelper.requireNonNull(constants$58.vips__random$MH,"vips__random");
    }
    public static int vips__random ( int seed) {
        var mh$ = vips__random$MH();
        try {
            return (int)mh$.invokeExact(seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__random_add$MH() {
        return RuntimeHelper.requireNonNull(constants$58.vips__random_add$MH,"vips__random_add");
    }
    public static int vips__random_add ( int seed,  int value) {
        var mh$ = vips__random_add$MH();
        try {
            return (int)mh$.invokeExact(seed, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__icc_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$58.vips__icc_dir$MH,"vips__icc_dir");
    }
    public static MemoryAddress vips__icc_dir () {
        var mh$ = vips__icc_dir$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__windows_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$58.vips__windows_prefix$MH,"vips__windows_prefix");
    }
    public static MemoryAddress vips__windows_prefix () {
        var mh$ = vips__windows_prefix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__get_iso8601$MH() {
        return RuntimeHelper.requireNonNull(constants$58.vips__get_iso8601$MH,"vips__get_iso8601");
    }
    public static MemoryAddress vips__get_iso8601 () {
        var mh$ = vips__get_iso8601$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_strtod$MH() {
        return RuntimeHelper.requireNonNull(constants$59.vips_strtod$MH,"vips_strtod");
    }
    public static int vips_strtod ( Addressable str,  Addressable out) {
        var mh$ = vips_strtod$MH();
        try {
            return (int)mh$.invokeExact(str, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_ARGUMENT_NONE() {
        return (int)0L;
    }
    public static int VIPS_ARGUMENT_REQUIRED() {
        return (int)1L;
    }
    public static int VIPS_ARGUMENT_CONSTRUCT() {
        return (int)2L;
    }
    public static int VIPS_ARGUMENT_SET_ONCE() {
        return (int)4L;
    }
    public static int VIPS_ARGUMENT_SET_ALWAYS() {
        return (int)8L;
    }
    public static int VIPS_ARGUMENT_INPUT() {
        return (int)16L;
    }
    public static int VIPS_ARGUMENT_OUTPUT() {
        return (int)32L;
    }
    public static int VIPS_ARGUMENT_DEPRECATED() {
        return (int)64L;
    }
    public static int VIPS_ARGUMENT_MODIFY() {
        return (int)128L;
    }
    public static MethodHandle vips_argument_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$59.vips_argument_get_id$MH,"vips_argument_get_id");
    }
    public static int vips_argument_get_id () {
        var mh$ = vips_argument_get_id$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__object_set_member$MH() {
        return RuntimeHelper.requireNonNull(constants$59.vips__object_set_member$MH,"vips__object_set_member");
    }
    public static void vips__object_set_member ( Addressable object,  Addressable pspec,  Addressable member,  Addressable argument) {
        var mh$ = vips__object_set_member$MH();
        try {
            mh$.invokeExact(object, pspec, member, argument);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_argument_map$MH() {
        return RuntimeHelper.requireNonNull(constants$59.vips_argument_map$MH,"vips_argument_map");
    }
    public static MemoryAddress vips_argument_map ( Addressable object,  Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_argument_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_get_args$MH() {
        return RuntimeHelper.requireNonNull(constants$60.vips_object_get_args$MH,"vips_object_get_args");
    }
    public static int vips_object_get_args ( Addressable object,  Addressable names,  Addressable flags,  Addressable n_args) {
        var mh$ = vips_object_get_args$MH();
        try {
            return (int)mh$.invokeExact(object, names, flags, n_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_argument_class_map$MH() {
        return RuntimeHelper.requireNonNull(constants$60.vips_argument_class_map$MH,"vips_argument_class_map");
    }
    public static MemoryAddress vips_argument_class_map ( Addressable object_class,  Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_argument_class_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_class, fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_argument_class_needsstring$MH() {
        return RuntimeHelper.requireNonNull(constants$60.vips_argument_class_needsstring$MH,"vips_argument_class_needsstring");
    }
    public static int vips_argument_class_needsstring ( Addressable argument_class) {
        var mh$ = vips_argument_class_needsstring$MH();
        try {
            return (int)mh$.invokeExact(argument_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_get_argument$MH() {
        return RuntimeHelper.requireNonNull(constants$60.vips_object_get_argument$MH,"vips_object_get_argument");
    }
    public static int vips_object_get_argument ( Addressable object,  Addressable name,  Addressable pspec,  Addressable argument_class,  Addressable argument_instance) {
        var mh$ = vips_object_get_argument$MH();
        try {
            return (int)mh$.invokeExact(object, name, pspec, argument_class, argument_instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_argument_isset$MH() {
        return RuntimeHelper.requireNonNull(constants$61.vips_object_argument_isset$MH,"vips_object_argument_isset");
    }
    public static int vips_object_argument_isset ( Addressable object,  Addressable name) {
        var mh$ = vips_object_argument_isset$MH();
        try {
            return (int)mh$.invokeExact(object, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_get_argument_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$61.vips_object_get_argument_flags$MH,"vips_object_get_argument_flags");
    }
    public static int vips_object_get_argument_flags ( Addressable object,  Addressable name) {
        var mh$ = vips_object_get_argument_flags$MH();
        try {
            return (int)mh$.invokeExact(object, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_get_argument_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$61.vips_object_get_argument_priority$MH,"vips_object_get_argument_priority");
    }
    public static int vips_object_get_argument_priority ( Addressable object,  Addressable name) {
        var mh$ = vips_object_get_argument_priority$MH();
        try {
            return (int)mh$.invokeExact(object, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_is_null$MH() {
        return RuntimeHelper.requireNonNull(constants$61.vips_value_is_null$MH,"vips_value_is_null");
    }
    public static int vips_value_is_null ( Addressable psoec,  Addressable value) {
        var mh$ = vips_value_is_null$MH();
        try {
            return (int)mh$.invokeExact(psoec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$61.vips_object_set_property$MH,"vips_object_set_property");
    }
    public static void vips_object_set_property ( Addressable gobject,  int property_id,  Addressable value,  Addressable pspec) {
        var mh$ = vips_object_set_property$MH();
        try {
            mh$.invokeExact(gobject, property_id, value, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$61.vips_object_get_property$MH,"vips_object_get_property");
    }
    public static void vips_object_get_property ( Addressable gobject,  int property_id,  Addressable value,  Addressable pspec) {
        var mh$ = vips_object_get_property$MH();
        try {
            mh$.invokeExact(gobject, property_id, value, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_preclose$MH() {
        return RuntimeHelper.requireNonNull(constants$62.vips_object_preclose$MH,"vips_object_preclose");
    }
    public static void vips_object_preclose ( Addressable object) {
        var mh$ = vips_object_preclose$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_build$MH() {
        return RuntimeHelper.requireNonNull(constants$62.vips_object_build$MH,"vips_object_build");
    }
    public static int vips_object_build ( Addressable object) {
        var mh$ = vips_object_build$MH();
        try {
            return (int)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_summary_class$MH() {
        return RuntimeHelper.requireNonNull(constants$62.vips_object_summary_class$MH,"vips_object_summary_class");
    }
    public static void vips_object_summary_class ( Addressable klass,  Addressable buf) {
        var mh$ = vips_object_summary_class$MH();
        try {
            mh$.invokeExact(klass, buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$62.vips_object_summary$MH,"vips_object_summary");
    }
    public static void vips_object_summary ( Addressable object,  Addressable buf) {
        var mh$ = vips_object_summary$MH();
        try {
            mh$.invokeExact(object, buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_dump$MH() {
        return RuntimeHelper.requireNonNull(constants$62.vips_object_dump$MH,"vips_object_dump");
    }
    public static void vips_object_dump ( Addressable object,  Addressable buf) {
        var mh$ = vips_object_dump$MH();
        try {
            mh$.invokeExact(object, buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_print_summary_class$MH() {
        return RuntimeHelper.requireNonNull(constants$62.vips_object_print_summary_class$MH,"vips_object_print_summary_class");
    }
    public static void vips_object_print_summary_class ( Addressable klass) {
        var mh$ = vips_object_print_summary_class$MH();
        try {
            mh$.invokeExact(klass);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_print_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$63.vips_object_print_summary$MH,"vips_object_print_summary");
    }
    public static void vips_object_print_summary ( Addressable object) {
        var mh$ = vips_object_print_summary$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_print_dump$MH() {
        return RuntimeHelper.requireNonNull(constants$63.vips_object_print_dump$MH,"vips_object_print_dump");
    }
    public static void vips_object_print_dump ( Addressable object) {
        var mh$ = vips_object_print_dump$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_print_name$MH() {
        return RuntimeHelper.requireNonNull(constants$63.vips_object_print_name$MH,"vips_object_print_name");
    }
    public static void vips_object_print_name ( Addressable object) {
        var mh$ = vips_object_print_name$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_sanity$MH() {
        return RuntimeHelper.requireNonNull(constants$63.vips_object_sanity$MH,"vips_object_sanity");
    }
    public static int vips_object_sanity ( Addressable object) {
        var mh$ = vips_object_sanity$MH();
        try {
            return (int)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$63.vips_object_get_type$MH,"vips_object_get_type");
    }
    public static long vips_object_get_type () {
        var mh$ = vips_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_class_install_argument$MH() {
        return RuntimeHelper.requireNonNull(constants$63.vips_object_class_install_argument$MH,"vips_object_class_install_argument");
    }
    public static void vips_object_class_install_argument ( Addressable cls,  Addressable pspec,  int flags,  int priority,  int offset) {
        var mh$ = vips_object_class_install_argument$MH();
        try {
            mh$.invokeExact(cls, pspec, flags, priority, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_set_argument_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$64.vips_object_set_argument_from_string$MH,"vips_object_set_argument_from_string");
    }
    public static int vips_object_set_argument_from_string ( Addressable object,  Addressable name,  Addressable value) {
        var mh$ = vips_object_set_argument_from_string$MH();
        try {
            return (int)mh$.invokeExact(object, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_argument_needsstring$MH() {
        return RuntimeHelper.requireNonNull(constants$64.vips_object_argument_needsstring$MH,"vips_object_argument_needsstring");
    }
    public static int vips_object_argument_needsstring ( Addressable object,  Addressable name) {
        var mh$ = vips_object_argument_needsstring$MH();
        try {
            return (int)mh$.invokeExact(object, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_get_argument_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$64.vips_object_get_argument_to_string$MH,"vips_object_get_argument_to_string");
    }
    public static int vips_object_get_argument_to_string ( Addressable object,  Addressable name,  Addressable arg) {
        var mh$ = vips_object_get_argument_to_string$MH();
        try {
            return (int)mh$.invokeExact(object, name, arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_set_required$MH() {
        return RuntimeHelper.requireNonNull(constants$64.vips_object_set_required$MH,"vips_object_set_required");
    }
    public static int vips_object_set_required ( Addressable object,  Addressable value) {
        var mh$ = vips_object_set_required$MH();
        try {
            return (int)mh$.invokeExact(object, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$65.vips_object_new$MH,"vips_object_new");
    }
    public static MemoryAddress vips_object_new ( long type,  Addressable set,  Addressable a,  Addressable b) {
        var mh$ = vips_object_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, set, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$65.vips_object_set_valist$MH,"vips_object_set_valist");
    }
    public static int vips_object_set_valist ( Addressable object,  Addressable ap) {
        var mh$ = vips_object_set_valist$MH();
        try {
            return (int)mh$.invokeExact(object, ap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_set$MH() {
        return RuntimeHelper.requireNonNull(constants$65.vips_object_set$MH,"vips_object_set");
    }
    public static int vips_object_set ( Addressable object, Object... x1) {
        var mh$ = vips_object_set$MH();
        try {
            return (int)mh$.invokeExact(object, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_set_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$65.vips_object_set_from_string$MH,"vips_object_set_from_string");
    }
    public static int vips_object_set_from_string ( Addressable object,  Addressable string) {
        var mh$ = vips_object_set_from_string$MH();
        try {
            return (int)mh$.invokeExact(object, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_new_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$65.vips_object_new_from_string$MH,"vips_object_new_from_string");
    }
    public static MemoryAddress vips_object_new_from_string ( Addressable object_class,  Addressable p) {
        var mh$ = vips_object_new_from_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_class, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$65.vips_object_to_string$MH,"vips_object_to_string");
    }
    public static void vips_object_to_string ( Addressable object,  Addressable buf) {
        var mh$ = vips_object_to_string$MH();
        try {
            mh$.invokeExact(object, buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_map$MH() {
        return RuntimeHelper.requireNonNull(constants$66.vips_object_map$MH,"vips_object_map");
    }
    public static MemoryAddress vips_object_map ( Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_object_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_type_map$MH() {
        return RuntimeHelper.requireNonNull(constants$67.vips_type_map$MH,"vips_type_map");
    }
    public static MemoryAddress vips_type_map ( long base,  Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_type_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(base, fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_type_map_all$MH() {
        return RuntimeHelper.requireNonNull(constants$67.vips_type_map_all$MH,"vips_type_map_all");
    }
    public static MemoryAddress vips_type_map_all ( long base,  Addressable fn,  Addressable a) {
        var mh$ = vips_type_map_all$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(base, fn, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_type_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$67.vips_type_depth$MH,"vips_type_depth");
    }
    public static int vips_type_depth ( long type) {
        var mh$ = vips_type_depth$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_type_find$MH() {
        return RuntimeHelper.requireNonNull(constants$67.vips_type_find$MH,"vips_type_find");
    }
    public static long vips_type_find ( Addressable basename,  Addressable nickname) {
        var mh$ = vips_type_find$MH();
        try {
            return (long)mh$.invokeExact(basename, nickname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_nickname_find$MH() {
        return RuntimeHelper.requireNonNull(constants$67.vips_nickname_find$MH,"vips_nickname_find");
    }
    public static MemoryAddress vips_nickname_find ( long type) {
        var mh$ = vips_nickname_find$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_class_map_all$MH() {
        return RuntimeHelper.requireNonNull(constants$68.vips_class_map_all$MH,"vips_class_map_all");
    }
    public static MemoryAddress vips_class_map_all ( long type,  Addressable fn,  Addressable a) {
        var mh$ = vips_class_map_all$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, fn, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_class_find$MH() {
        return RuntimeHelper.requireNonNull(constants$68.vips_class_find$MH,"vips_class_find");
    }
    public static MemoryAddress vips_class_find ( Addressable basename,  Addressable nickname) {
        var mh$ = vips_class_find$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(basename, nickname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_local_array$MH() {
        return RuntimeHelper.requireNonNull(constants$68.vips_object_local_array$MH,"vips_object_local_array");
    }
    public static MemoryAddress vips_object_local_array ( Addressable parent,  int n) {
        var mh$ = vips_object_local_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(parent, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_local_cb$MH() {
        return RuntimeHelper.requireNonNull(constants$68.vips_object_local_cb$MH,"vips_object_local_cb");
    }
    public static void vips_object_local_cb ( Addressable vobject,  Addressable gobject) {
        var mh$ = vips_object_local_cb$MH();
        try {
            mh$.invokeExact(vobject, gobject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_set_static$MH() {
        return RuntimeHelper.requireNonNull(constants$68.vips_object_set_static$MH,"vips_object_set_static");
    }
    public static void vips_object_set_static ( Addressable object,  int static_object) {
        var mh$ = vips_object_set_static$MH();
        try {
            mh$.invokeExact(object, static_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_print_all$MH() {
        return RuntimeHelper.requireNonNull(constants$68.vips_object_print_all$MH,"vips_object_print_all");
    }
    public static void vips_object_print_all () {
        var mh$ = vips_object_print_all$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_sanity_all$MH() {
        return RuntimeHelper.requireNonNull(constants$69.vips_object_sanity_all$MH,"vips_object_sanity_all");
    }
    public static void vips_object_sanity_all () {
        var mh$ = vips_object_sanity_all$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_rewind$MH() {
        return RuntimeHelper.requireNonNull(constants$69.vips_object_rewind$MH,"vips_object_rewind");
    }
    public static void vips_object_rewind ( Addressable object) {
        var mh$ = vips_object_rewind$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_unref_outputs$MH() {
        return RuntimeHelper.requireNonNull(constants$69.vips_object_unref_outputs$MH,"vips_object_unref_outputs");
    }
    public static void vips_object_unref_outputs ( Addressable object) {
        var mh$ = vips_object_unref_outputs$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_object_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$69.vips_object_get_description$MH,"vips_object_get_description");
    }
    public static MemoryAddress vips_object_get_description ( Addressable object) {
        var mh$ = vips_object_get_description$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thing_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$69.vips_thing_get_type$MH,"vips_thing_get_type");
    }
    public static long vips_thing_get_type () {
        var mh$ = vips_thing_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thing_new$MH() {
        return RuntimeHelper.requireNonNull(constants$69.vips_thing_new$MH,"vips_thing_new");
    }
    public static MemoryAddress vips_thing_new ( int i) {
        var mh$ = vips_thing_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_area_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$70.vips_area_copy$MH,"vips_area_copy");
    }
    public static MemoryAddress vips_area_copy ( Addressable area) {
        var mh$ = vips_area_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_area_free_cb$MH() {
        return RuntimeHelper.requireNonNull(constants$70.vips_area_free_cb$MH,"vips_area_free_cb");
    }
    public static int vips_area_free_cb ( Addressable mem,  Addressable area) {
        var mh$ = vips_area_free_cb$MH();
        try {
            return (int)mh$.invokeExact(mem, area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_area_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$70.vips_area_unref$MH,"vips_area_unref");
    }
    public static void vips_area_unref ( Addressable area) {
        var mh$ = vips_area_unref$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$70.vips_area_new$MH,"vips_area_new");
    }
    public static MemoryAddress vips_area_new ( Addressable free_fn,  Addressable data) {
        var mh$ = vips_area_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(free_fn, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_area_new_array$MH() {
        return RuntimeHelper.requireNonNull(constants$70.vips_area_new_array$MH,"vips_area_new_array");
    }
    public static MemoryAddress vips_area_new_array ( long type,  long sizeof_type,  int n) {
        var mh$ = vips_area_new_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, sizeof_type, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_area_new_array_object$MH() {
        return RuntimeHelper.requireNonNull(constants$70.vips_area_new_array_object$MH,"vips_area_new_array_object");
    }
    public static MemoryAddress vips_area_new_array_object ( int n) {
        var mh$ = vips_area_new_array_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_area_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$71.vips_area_get_data$MH,"vips_area_get_data");
    }
    public static MemoryAddress vips_area_get_data ( Addressable area,  Addressable length,  Addressable n,  Addressable type,  Addressable sizeof_type) {
        var mh$ = vips_area_get_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(area, length, n, type, sizeof_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$71.vips_area_get_type$MH,"vips_area_get_type");
    }
    public static long vips_area_get_type () {
        var mh$ = vips_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_save_string_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$71.vips_save_string_get_type$MH,"vips_save_string_get_type");
    }
    public static long vips_save_string_get_type () {
        var mh$ = vips_save_string_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ref_string_new$MH() {
        return RuntimeHelper.requireNonNull(constants$71.vips_ref_string_new$MH,"vips_ref_string_new");
    }
    public static MemoryAddress vips_ref_string_new ( Addressable str) {
        var mh$ = vips_ref_string_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ref_string_get$MH() {
        return RuntimeHelper.requireNonNull(constants$71.vips_ref_string_get$MH,"vips_ref_string_get");
    }
    public static MemoryAddress vips_ref_string_get ( Addressable refstr,  Addressable length) {
        var mh$ = vips_ref_string_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(refstr, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_ref_string_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$71.vips_ref_string_get_type$MH,"vips_ref_string_get_type");
    }
    public static long vips_ref_string_get_type () {
        var mh$ = vips_ref_string_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_blob_new$MH() {
        return RuntimeHelper.requireNonNull(constants$72.vips_blob_new$MH,"vips_blob_new");
    }
    public static MemoryAddress vips_blob_new ( Addressable free_fn,  Addressable data,  long length) {
        var mh$ = vips_blob_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(free_fn, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_blob_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$72.vips_blob_copy$MH,"vips_blob_copy");
    }
    public static MemoryAddress vips_blob_copy ( Addressable data,  long length) {
        var mh$ = vips_blob_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_blob_get$MH() {
        return RuntimeHelper.requireNonNull(constants$72.vips_blob_get$MH,"vips_blob_get");
    }
    public static MemoryAddress vips_blob_get ( Addressable blob,  Addressable length) {
        var mh$ = vips_blob_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(blob, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_blob_set$MH() {
        return RuntimeHelper.requireNonNull(constants$72.vips_blob_set$MH,"vips_blob_set");
    }
    public static void vips_blob_set ( Addressable blob,  Addressable free_fn,  Addressable data,  long length) {
        var mh$ = vips_blob_set$MH();
        try {
            mh$.invokeExact(blob, free_fn, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_blob_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$72.vips_blob_get_type$MH,"vips_blob_get_type");
    }
    public static long vips_blob_get_type () {
        var mh$ = vips_blob_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_double_new$MH() {
        return RuntimeHelper.requireNonNull(constants$72.vips_array_double_new$MH,"vips_array_double_new");
    }
    public static MemoryAddress vips_array_double_new ( Addressable array,  int n) {
        var mh$ = vips_array_double_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_double_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$73.vips_array_double_newv$MH,"vips_array_double_newv");
    }
    public static MemoryAddress vips_array_double_newv ( int n, Object... x1) {
        var mh$ = vips_array_double_newv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_double_get$MH() {
        return RuntimeHelper.requireNonNull(constants$73.vips_array_double_get$MH,"vips_array_double_get");
    }
    public static MemoryAddress vips_array_double_get ( Addressable array,  Addressable n) {
        var mh$ = vips_array_double_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_double_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$73.vips_array_double_get_type$MH,"vips_array_double_get_type");
    }
    public static long vips_array_double_get_type () {
        var mh$ = vips_array_double_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_int_new$MH() {
        return RuntimeHelper.requireNonNull(constants$73.vips_array_int_new$MH,"vips_array_int_new");
    }
    public static MemoryAddress vips_array_int_new ( Addressable array,  int n) {
        var mh$ = vips_array_int_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_int_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$73.vips_array_int_newv$MH,"vips_array_int_newv");
    }
    public static MemoryAddress vips_array_int_newv ( int n, Object... x1) {
        var mh$ = vips_array_int_newv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_int_get$MH() {
        return RuntimeHelper.requireNonNull(constants$73.vips_array_int_get$MH,"vips_array_int_get");
    }
    public static MemoryAddress vips_array_int_get ( Addressable array,  Addressable n) {
        var mh$ = vips_array_int_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_int_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$74.vips_array_int_get_type$MH,"vips_array_int_get_type");
    }
    public static long vips_array_int_get_type () {
        var mh$ = vips_array_int_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_image_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$74.vips_array_image_get_type$MH,"vips_array_image_get_type");
    }
    public static long vips_array_image_get_type () {
        var mh$ = vips_array_image_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_area$MH() {
        return RuntimeHelper.requireNonNull(constants$74.vips_value_set_area$MH,"vips_value_set_area");
    }
    public static void vips_value_set_area ( Addressable value,  Addressable free_fn,  Addressable data) {
        var mh$ = vips_value_set_area$MH();
        try {
            mh$.invokeExact(value, free_fn, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$74.vips_value_get_area$MH,"vips_value_get_area");
    }
    public static MemoryAddress vips_value_get_area ( Addressable value,  Addressable length) {
        var mh$ = vips_value_get_area$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_get_save_string$MH() {
        return RuntimeHelper.requireNonNull(constants$74.vips_value_get_save_string$MH,"vips_value_get_save_string");
    }
    public static MemoryAddress vips_value_get_save_string ( Addressable value) {
        var mh$ = vips_value_get_save_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_save_string$MH() {
        return RuntimeHelper.requireNonNull(constants$74.vips_value_set_save_string$MH,"vips_value_set_save_string");
    }
    public static void vips_value_set_save_string ( Addressable value,  Addressable str) {
        var mh$ = vips_value_set_save_string$MH();
        try {
            mh$.invokeExact(value, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_save_stringf$MH() {
        return RuntimeHelper.requireNonNull(constants$75.vips_value_set_save_stringf$MH,"vips_value_set_save_stringf");
    }
    public static void vips_value_set_save_stringf ( Addressable value,  Addressable fmt, Object... x2) {
        var mh$ = vips_value_set_save_stringf$MH();
        try {
            mh$.invokeExact(value, fmt, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_get_ref_string$MH() {
        return RuntimeHelper.requireNonNull(constants$75.vips_value_get_ref_string$MH,"vips_value_get_ref_string");
    }
    public static MemoryAddress vips_value_get_ref_string ( Addressable value,  Addressable length) {
        var mh$ = vips_value_get_ref_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_ref_string$MH() {
        return RuntimeHelper.requireNonNull(constants$75.vips_value_set_ref_string$MH,"vips_value_set_ref_string");
    }
    public static void vips_value_set_ref_string ( Addressable value,  Addressable str) {
        var mh$ = vips_value_set_ref_string$MH();
        try {
            mh$.invokeExact(value, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_get_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$75.vips_value_get_blob$MH,"vips_value_get_blob");
    }
    public static MemoryAddress vips_value_get_blob ( Addressable value,  Addressable length) {
        var mh$ = vips_value_get_blob$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$75.vips_value_set_blob$MH,"vips_value_set_blob");
    }
    public static void vips_value_set_blob ( Addressable value,  Addressable free_fn,  Addressable data,  long length) {
        var mh$ = vips_value_set_blob$MH();
        try {
            mh$.invokeExact(value, free_fn, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_blob_free$MH() {
        return RuntimeHelper.requireNonNull(constants$75.vips_value_set_blob_free$MH,"vips_value_set_blob_free");
    }
    public static void vips_value_set_blob_free ( Addressable value,  Addressable data,  long length) {
        var mh$ = vips_value_set_blob_free$MH();
        try {
            mh$.invokeExact(value, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_array$MH() {
        return RuntimeHelper.requireNonNull(constants$76.vips_value_set_array$MH,"vips_value_set_array");
    }
    public static void vips_value_set_array ( Addressable value,  int n,  long type,  long sizeof_type) {
        var mh$ = vips_value_set_array$MH();
        try {
            mh$.invokeExact(value, n, type, sizeof_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_get_array$MH() {
        return RuntimeHelper.requireNonNull(constants$76.vips_value_get_array$MH,"vips_value_get_array");
    }
    public static MemoryAddress vips_value_get_array ( Addressable value,  Addressable n,  Addressable type,  Addressable sizeof_type) {
        var mh$ = vips_value_get_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, n, type, sizeof_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_get_array_double$MH() {
        return RuntimeHelper.requireNonNull(constants$76.vips_value_get_array_double$MH,"vips_value_get_array_double");
    }
    public static MemoryAddress vips_value_get_array_double ( Addressable value,  Addressable n) {
        var mh$ = vips_value_get_array_double$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_array_double$MH() {
        return RuntimeHelper.requireNonNull(constants$76.vips_value_set_array_double$MH,"vips_value_set_array_double");
    }
    public static void vips_value_set_array_double ( Addressable value,  Addressable array,  int n) {
        var mh$ = vips_value_set_array_double$MH();
        try {
            mh$.invokeExact(value, array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_get_array_int$MH() {
        return RuntimeHelper.requireNonNull(constants$76.vips_value_get_array_int$MH,"vips_value_get_array_int");
    }
    public static MemoryAddress vips_value_get_array_int ( Addressable value,  Addressable n) {
        var mh$ = vips_value_get_array_int$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_array_int$MH() {
        return RuntimeHelper.requireNonNull(constants$76.vips_value_set_array_int$MH,"vips_value_set_array_int");
    }
    public static void vips_value_set_array_int ( Addressable value,  Addressable array,  int n) {
        var mh$ = vips_value_set_array_int$MH();
        try {
            mh$.invokeExact(value, array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_get_array_object$MH() {
        return RuntimeHelper.requireNonNull(constants$77.vips_value_get_array_object$MH,"vips_value_get_array_object");
    }
    public static MemoryAddress vips_value_get_array_object ( Addressable value,  Addressable n) {
        var mh$ = vips_value_get_array_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_array_object$MH() {
        return RuntimeHelper.requireNonNull(constants$77.vips_value_set_array_object$MH,"vips_value_set_array_object");
    }
    public static void vips_value_set_array_object ( Addressable value,  int n) {
        var mh$ = vips_value_set_array_object$MH();
        try {
            mh$.invokeExact(value, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout vips__thread_profile$LAYOUT() {
        return constants$77.vips__thread_profile$LAYOUT;
    }
    public static VarHandle vips__thread_profile$VH() {
        return constants$77.vips__thread_profile$VH;
    }
    public static MemorySegment vips__thread_profile$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$77.vips__thread_profile$SEGMENT,"vips__thread_profile");
    }
    public static int vips__thread_profile$get() {
        return (int) constants$77.vips__thread_profile$VH.get(RuntimeHelper.requireNonNull(constants$77.vips__thread_profile$SEGMENT, "vips__thread_profile"));
    }
    public static void vips__thread_profile$set( int x) {
        constants$77.vips__thread_profile$VH.set(RuntimeHelper.requireNonNull(constants$77.vips__thread_profile$SEGMENT, "vips__thread_profile"), x);
    }
    public static MethodHandle vips_profile_set$MH() {
        return RuntimeHelper.requireNonNull(constants$77.vips_profile_set$MH,"vips_profile_set");
    }
    public static void vips_profile_set ( int profile) {
        var mh$ = vips_profile_set$MH();
        try {
            mh$.invokeExact(profile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__thread_profile_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$77.vips__thread_profile_attach$MH,"vips__thread_profile_attach");
    }
    public static void vips__thread_profile_attach ( Addressable thread_name) {
        var mh$ = vips__thread_profile_attach$MH();
        try {
            mh$.invokeExact(thread_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__thread_profile_detach$MH() {
        return RuntimeHelper.requireNonNull(constants$77.vips__thread_profile_detach$MH,"vips__thread_profile_detach");
    }
    public static void vips__thread_profile_detach () {
        var mh$ = vips__thread_profile_detach$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__thread_profile_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$78.vips__thread_profile_stop$MH,"vips__thread_profile_stop");
    }
    public static void vips__thread_profile_stop () {
        var mh$ = vips__thread_profile_stop$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__thread_gate_start$MH() {
        return RuntimeHelper.requireNonNull(constants$78.vips__thread_gate_start$MH,"vips__thread_gate_start");
    }
    public static void vips__thread_gate_start ( Addressable gate_name) {
        var mh$ = vips__thread_gate_start$MH();
        try {
            mh$.invokeExact(gate_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__thread_gate_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$78.vips__thread_gate_stop$MH,"vips__thread_gate_stop");
    }
    public static void vips__thread_gate_stop ( Addressable gate_name) {
        var mh$ = vips__thread_gate_stop$MH();
        try {
            mh$.invokeExact(gate_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__thread_malloc_free$MH() {
        return RuntimeHelper.requireNonNull(constants$78.vips__thread_malloc_free$MH,"vips__thread_malloc_free");
    }
    public static void vips__thread_malloc_free ( long size) {
        var mh$ = vips__thread_malloc_free$MH();
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$78.vips_connection_get_type$MH,"vips_connection_get_type");
    }
    public static long vips_connection_get_type () {
        var mh$ = vips_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_connection_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$78.vips_connection_filename$MH,"vips_connection_filename");
    }
    public static MemoryAddress vips_connection_filename ( Addressable connection) {
        var mh$ = vips_connection_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_connection_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$79.vips_connection_nick$MH,"vips_connection_nick");
    }
    public static MemoryAddress vips_connection_nick ( Addressable connection) {
        var mh$ = vips_connection_nick$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_pipe_read_limit_set$MH() {
        return RuntimeHelper.requireNonNull(constants$79.vips_pipe_read_limit_set$MH,"vips_pipe_read_limit_set");
    }
    public static void vips_pipe_read_limit_set ( long limit) {
        var mh$ = vips_pipe_read_limit_set$MH();
        try {
            mh$.invokeExact(limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$79.vips_source_get_type$MH,"vips_source_get_type");
    }
    public static long vips_source_get_type () {
        var mh$ = vips_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_new_from_descriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$79.vips_source_new_from_descriptor$MH,"vips_source_new_from_descriptor");
    }
    public static MemoryAddress vips_source_new_from_descriptor ( int descriptor) {
        var mh$ = vips_source_new_from_descriptor$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(descriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$79.vips_source_new_from_file$MH,"vips_source_new_from_file");
    }
    public static MemoryAddress vips_source_new_from_file ( Addressable filename) {
        var mh$ = vips_source_new_from_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_new_from_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$79.vips_source_new_from_blob$MH,"vips_source_new_from_blob");
    }
    public static MemoryAddress vips_source_new_from_blob ( Addressable blob) {
        var mh$ = vips_source_new_from_blob$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(blob);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_new_from_target$MH() {
        return RuntimeHelper.requireNonNull(constants$80.vips_source_new_from_target$MH,"vips_source_new_from_target");
    }
    public static MemoryAddress vips_source_new_from_target ( Addressable target) {
        var mh$ = vips_source_new_from_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_new_from_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$80.vips_source_new_from_memory$MH,"vips_source_new_from_memory");
    }
    public static MemoryAddress vips_source_new_from_memory ( Addressable data,  long size) {
        var mh$ = vips_source_new_from_memory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_new_from_options$MH() {
        return RuntimeHelper.requireNonNull(constants$80.vips_source_new_from_options$MH,"vips_source_new_from_options");
    }
    public static MemoryAddress vips_source_new_from_options ( Addressable options) {
        var mh$ = vips_source_new_from_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_minimise$MH() {
        return RuntimeHelper.requireNonNull(constants$80.vips_source_minimise$MH,"vips_source_minimise");
    }
    public static void vips_source_minimise ( Addressable source) {
        var mh$ = vips_source_minimise$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_unminimise$MH() {
        return RuntimeHelper.requireNonNull(constants$80.vips_source_unminimise$MH,"vips_source_unminimise");
    }
    public static int vips_source_unminimise ( Addressable source) {
        var mh$ = vips_source_unminimise$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_decode$MH() {
        return RuntimeHelper.requireNonNull(constants$80.vips_source_decode$MH,"vips_source_decode");
    }
    public static int vips_source_decode ( Addressable source) {
        var mh$ = vips_source_decode$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_read$MH() {
        return RuntimeHelper.requireNonNull(constants$81.vips_source_read$MH,"vips_source_read");
    }
    public static long vips_source_read ( Addressable source,  Addressable data,  long length) {
        var mh$ = vips_source_read$MH();
        try {
            return (long)mh$.invokeExact(source, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_is_mappable$MH() {
        return RuntimeHelper.requireNonNull(constants$81.vips_source_is_mappable$MH,"vips_source_is_mappable");
    }
    public static int vips_source_is_mappable ( Addressable source) {
        var mh$ = vips_source_is_mappable$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_is_file$MH() {
        return RuntimeHelper.requireNonNull(constants$81.vips_source_is_file$MH,"vips_source_is_file");
    }
    public static int vips_source_is_file ( Addressable source) {
        var mh$ = vips_source_is_file$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_map$MH() {
        return RuntimeHelper.requireNonNull(constants$81.vips_source_map$MH,"vips_source_map");
    }
    public static MemoryAddress vips_source_map ( Addressable source,  Addressable length) {
        var mh$ = vips_source_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_map_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$81.vips_source_map_blob$MH,"vips_source_map_blob");
    }
    public static MemoryAddress vips_source_map_blob ( Addressable source) {
        var mh$ = vips_source_map_blob$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$81.vips_source_seek$MH,"vips_source_seek");
    }
    public static long vips_source_seek ( Addressable source,  long offset,  int whence) {
        var mh$ = vips_source_seek$MH();
        try {
            return (long)mh$.invokeExact(source, offset, whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_rewind$MH() {
        return RuntimeHelper.requireNonNull(constants$82.vips_source_rewind$MH,"vips_source_rewind");
    }
    public static int vips_source_rewind ( Addressable source) {
        var mh$ = vips_source_rewind$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_sniff_at_most$MH() {
        return RuntimeHelper.requireNonNull(constants$82.vips_source_sniff_at_most$MH,"vips_source_sniff_at_most");
    }
    public static long vips_source_sniff_at_most ( Addressable source,  Addressable data,  long length) {
        var mh$ = vips_source_sniff_at_most$MH();
        try {
            return (long)mh$.invokeExact(source, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_sniff$MH() {
        return RuntimeHelper.requireNonNull(constants$82.vips_source_sniff$MH,"vips_source_sniff");
    }
    public static MemoryAddress vips_source_sniff ( Addressable source,  long length) {
        var mh$ = vips_source_sniff$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_length$MH() {
        return RuntimeHelper.requireNonNull(constants$82.vips_source_length$MH,"vips_source_length");
    }
    public static long vips_source_length ( Addressable source) {
        var mh$ = vips_source_length$MH();
        try {
            return (long)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_custom_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$82.vips_source_custom_get_type$MH,"vips_source_custom_get_type");
    }
    public static long vips_source_custom_get_type () {
        var mh$ = vips_source_custom_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_custom_new$MH() {
        return RuntimeHelper.requireNonNull(constants$82.vips_source_custom_new$MH,"vips_source_custom_new");
    }
    public static MemoryAddress vips_source_custom_new () {
        var mh$ = vips_source_custom_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_g_input_stream_new_from_source$MH() {
        return RuntimeHelper.requireNonNull(constants$83.vips_g_input_stream_new_from_source$MH,"vips_g_input_stream_new_from_source");
    }
    public static MemoryAddress vips_g_input_stream_new_from_source ( Addressable source) {
        var mh$ = vips_g_input_stream_new_from_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_source_g_input_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$83.vips_source_g_input_stream_new$MH,"vips_source_g_input_stream_new");
    }
    public static MemoryAddress vips_source_g_input_stream_new ( Addressable stream) {
        var mh$ = vips_source_g_input_stream_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$83.vips_target_get_type$MH,"vips_target_get_type");
    }
    public static long vips_target_get_type () {
        var mh$ = vips_target_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_new_to_descriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$83.vips_target_new_to_descriptor$MH,"vips_target_new_to_descriptor");
    }
    public static MemoryAddress vips_target_new_to_descriptor ( int descriptor) {
        var mh$ = vips_target_new_to_descriptor$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(descriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_new_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$83.vips_target_new_to_file$MH,"vips_target_new_to_file");
    }
    public static MemoryAddress vips_target_new_to_file ( Addressable filename) {
        var mh$ = vips_target_new_to_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_new_to_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$83.vips_target_new_to_memory$MH,"vips_target_new_to_memory");
    }
    public static MemoryAddress vips_target_new_to_memory () {
        var mh$ = vips_target_new_to_memory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_new_temp$MH() {
        return RuntimeHelper.requireNonNull(constants$84.vips_target_new_temp$MH,"vips_target_new_temp");
    }
    public static MemoryAddress vips_target_new_temp ( Addressable target) {
        var mh$ = vips_target_new_temp$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_write$MH() {
        return RuntimeHelper.requireNonNull(constants$84.vips_target_write$MH,"vips_target_write");
    }
    public static int vips_target_write ( Addressable target,  Addressable data,  long length) {
        var mh$ = vips_target_write$MH();
        try {
            return (int)mh$.invokeExact(target, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_read$MH() {
        return RuntimeHelper.requireNonNull(constants$84.vips_target_read$MH,"vips_target_read");
    }
    public static long vips_target_read ( Addressable target,  Addressable buffer,  long length) {
        var mh$ = vips_target_read$MH();
        try {
            return (long)mh$.invokeExact(target, buffer, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$84.vips_target_seek$MH,"vips_target_seek");
    }
    public static long vips_target_seek ( Addressable target,  long offset,  int whence) {
        var mh$ = vips_target_seek$MH();
        try {
            return (long)mh$.invokeExact(target, offset, whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_end$MH() {
        return RuntimeHelper.requireNonNull(constants$84.vips_target_end$MH,"vips_target_end");
    }
    public static int vips_target_end ( Addressable target) {
        var mh$ = vips_target_end$MH();
        try {
            return (int)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$84.vips_target_finish$MH,"vips_target_finish");
    }
    public static void vips_target_finish ( Addressable target) {
        var mh$ = vips_target_finish$MH();
        try {
            mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$85.vips_target_steal$MH,"vips_target_steal");
    }
    public static MemoryAddress vips_target_steal ( Addressable target,  Addressable length) {
        var mh$ = vips_target_steal$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(target, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_steal_text$MH() {
        return RuntimeHelper.requireNonNull(constants$85.vips_target_steal_text$MH,"vips_target_steal_text");
    }
    public static MemoryAddress vips_target_steal_text ( Addressable target) {
        var mh$ = vips_target_steal_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_putc$MH() {
        return RuntimeHelper.requireNonNull(constants$85.vips_target_putc$MH,"vips_target_putc");
    }
    public static int vips_target_putc ( Addressable target,  int ch) {
        var mh$ = vips_target_putc$MH();
        try {
            return (int)mh$.invokeExact(target, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_writes$MH() {
        return RuntimeHelper.requireNonNull(constants$85.vips_target_writes$MH,"vips_target_writes");
    }
    public static int vips_target_writes ( Addressable target,  Addressable str) {
        var mh$ = vips_target_writes$MH();
        try {
            return (int)mh$.invokeExact(target, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_writef$MH() {
        return RuntimeHelper.requireNonNull(constants$85.vips_target_writef$MH,"vips_target_writef");
    }
    public static int vips_target_writef ( Addressable target,  Addressable fmt, Object... x2) {
        var mh$ = vips_target_writef$MH();
        try {
            return (int)mh$.invokeExact(target, fmt, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_write_amp$MH() {
        return RuntimeHelper.requireNonNull(constants$85.vips_target_write_amp$MH,"vips_target_write_amp");
    }
    public static int vips_target_write_amp ( Addressable target,  Addressable str) {
        var mh$ = vips_target_write_amp$MH();
        try {
            return (int)mh$.invokeExact(target, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_custom_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$86.vips_target_custom_get_type$MH,"vips_target_custom_get_type");
    }
    public static long vips_target_custom_get_type () {
        var mh$ = vips_target_custom_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_target_custom_new$MH() {
        return RuntimeHelper.requireNonNull(constants$86.vips_target_custom_new$MH,"vips_target_custom_new");
    }
    public static MemoryAddress vips_target_custom_new () {
        var mh$ = vips_target_custom_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$86.vips_sbuf_get_type$MH,"vips_sbuf_get_type");
    }
    public static long vips_sbuf_get_type () {
        var mh$ = vips_sbuf_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_new_from_source$MH() {
        return RuntimeHelper.requireNonNull(constants$86.vips_sbuf_new_from_source$MH,"vips_sbuf_new_from_source");
    }
    public static MemoryAddress vips_sbuf_new_from_source ( Addressable source) {
        var mh$ = vips_sbuf_new_from_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_unbuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$86.vips_sbuf_unbuffer$MH,"vips_sbuf_unbuffer");
    }
    public static void vips_sbuf_unbuffer ( Addressable sbuf) {
        var mh$ = vips_sbuf_unbuffer$MH();
        try {
            mh$.invokeExact(sbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_getc$MH() {
        return RuntimeHelper.requireNonNull(constants$86.vips_sbuf_getc$MH,"vips_sbuf_getc");
    }
    public static int vips_sbuf_getc ( Addressable sbuf) {
        var mh$ = vips_sbuf_getc$MH();
        try {
            return (int)mh$.invokeExact(sbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_ungetc$MH() {
        return RuntimeHelper.requireNonNull(constants$87.vips_sbuf_ungetc$MH,"vips_sbuf_ungetc");
    }
    public static void vips_sbuf_ungetc ( Addressable sbuf) {
        var mh$ = vips_sbuf_ungetc$MH();
        try {
            mh$.invokeExact(sbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_require$MH() {
        return RuntimeHelper.requireNonNull(constants$87.vips_sbuf_require$MH,"vips_sbuf_require");
    }
    public static int vips_sbuf_require ( Addressable sbuf,  int require) {
        var mh$ = vips_sbuf_require$MH();
        try {
            return (int)mh$.invokeExact(sbuf, require);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_get_line$MH() {
        return RuntimeHelper.requireNonNull(constants$87.vips_sbuf_get_line$MH,"vips_sbuf_get_line");
    }
    public static MemoryAddress vips_sbuf_get_line ( Addressable sbuf) {
        var mh$ = vips_sbuf_get_line$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(sbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_get_line_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$87.vips_sbuf_get_line_copy$MH,"vips_sbuf_get_line_copy");
    }
    public static MemoryAddress vips_sbuf_get_line_copy ( Addressable sbuf) {
        var mh$ = vips_sbuf_get_line_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(sbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_get_non_whitespace$MH() {
        return RuntimeHelper.requireNonNull(constants$87.vips_sbuf_get_non_whitespace$MH,"vips_sbuf_get_non_whitespace");
    }
    public static MemoryAddress vips_sbuf_get_non_whitespace ( Addressable sbuf) {
        var mh$ = vips_sbuf_get_non_whitespace$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(sbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sbuf_skip_whitespace$MH() {
        return RuntimeHelper.requireNonNull(constants$87.vips_sbuf_skip_whitespace$MH,"vips_sbuf_skip_whitespace");
    }
    public static int vips_sbuf_skip_whitespace ( Addressable sbuf) {
        var mh$ = vips_sbuf_skip_whitespace$MH();
        try {
            return (int)mh$.invokeExact(sbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_isempty$MH() {
        return RuntimeHelper.requireNonNull(constants$88.vips_rect_isempty$MH,"vips_rect_isempty");
    }
    public static int vips_rect_isempty ( Addressable r) {
        var mh$ = vips_rect_isempty$MH();
        try {
            return (int)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_includespoint$MH() {
        return RuntimeHelper.requireNonNull(constants$88.vips_rect_includespoint$MH,"vips_rect_includespoint");
    }
    public static int vips_rect_includespoint ( Addressable r,  int x,  int y) {
        var mh$ = vips_rect_includespoint$MH();
        try {
            return (int)mh$.invokeExact(r, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_includesrect$MH() {
        return RuntimeHelper.requireNonNull(constants$88.vips_rect_includesrect$MH,"vips_rect_includesrect");
    }
    public static int vips_rect_includesrect ( Addressable r1,  Addressable r2) {
        var mh$ = vips_rect_includesrect$MH();
        try {
            return (int)mh$.invokeExact(r1, r2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_equalsrect$MH() {
        return RuntimeHelper.requireNonNull(constants$88.vips_rect_equalsrect$MH,"vips_rect_equalsrect");
    }
    public static int vips_rect_equalsrect ( Addressable r1,  Addressable r2) {
        var mh$ = vips_rect_equalsrect$MH();
        try {
            return (int)mh$.invokeExact(r1, r2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_overlapsrect$MH() {
        return RuntimeHelper.requireNonNull(constants$88.vips_rect_overlapsrect$MH,"vips_rect_overlapsrect");
    }
    public static int vips_rect_overlapsrect ( Addressable r1,  Addressable r2) {
        var mh$ = vips_rect_overlapsrect$MH();
        try {
            return (int)mh$.invokeExact(r1, r2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_marginadjust$MH() {
        return RuntimeHelper.requireNonNull(constants$88.vips_rect_marginadjust$MH,"vips_rect_marginadjust");
    }
    public static void vips_rect_marginadjust ( Addressable r,  int n) {
        var mh$ = vips_rect_marginadjust$MH();
        try {
            mh$.invokeExact(r, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_intersectrect$MH() {
        return RuntimeHelper.requireNonNull(constants$89.vips_rect_intersectrect$MH,"vips_rect_intersectrect");
    }
    public static void vips_rect_intersectrect ( Addressable r1,  Addressable r2,  Addressable out) {
        var mh$ = vips_rect_intersectrect$MH();
        try {
            mh$.invokeExact(r1, r2, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_unionrect$MH() {
        return RuntimeHelper.requireNonNull(constants$89.vips_rect_unionrect$MH,"vips_rect_unionrect");
    }
    public static void vips_rect_unionrect ( Addressable r1,  Addressable r2,  Addressable out) {
        var mh$ = vips_rect_unionrect$MH();
        try {
            mh$.invokeExact(r1, r2, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$89.vips_rect_dup$MH,"vips_rect_dup");
    }
    public static MemoryAddress vips_rect_dup ( Addressable r) {
        var mh$ = vips_rect_dup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_rect_normalise$MH() {
        return RuntimeHelper.requireNonNull(constants$89.vips_rect_normalise$MH,"vips_rect_normalise");
    }
    public static void vips_rect_normalise ( Addressable r) {
        var mh$ = vips_rect_normalise$MH();
        try {
            mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_window_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$89.vips_window_unref$MH,"vips_window_unref");
    }
    public static int vips_window_unref ( Addressable window) {
        var mh$ = vips_window_unref$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_window_print$MH() {
        return RuntimeHelper.requireNonNull(constants$89.vips_window_print$MH,"vips_window_print");
    }
    public static void vips_window_print ( Addressable window) {
        var mh$ = vips_window_print$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buffer_dump_all$MH() {
        return RuntimeHelper.requireNonNull(constants$90.vips_buffer_dump_all$MH,"vips_buffer_dump_all");
    }
    public static void vips_buffer_dump_all () {
        var mh$ = vips_buffer_dump_all$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buffer_done$MH() {
        return RuntimeHelper.requireNonNull(constants$90.vips_buffer_done$MH,"vips_buffer_done");
    }
    public static void vips_buffer_done ( Addressable buffer) {
        var mh$ = vips_buffer_done$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buffer_undone$MH() {
        return RuntimeHelper.requireNonNull(constants$90.vips_buffer_undone$MH,"vips_buffer_undone");
    }
    public static void vips_buffer_undone ( Addressable buffer) {
        var mh$ = vips_buffer_undone$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buffer_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$90.vips_buffer_unref$MH,"vips_buffer_unref");
    }
    public static void vips_buffer_unref ( Addressable buffer) {
        var mh$ = vips_buffer_unref$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buffer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$90.vips_buffer_new$MH,"vips_buffer_new");
    }
    public static MemoryAddress vips_buffer_new ( Addressable im,  Addressable area) {
        var mh$ = vips_buffer_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(im, area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buffer_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$90.vips_buffer_ref$MH,"vips_buffer_ref");
    }
    public static MemoryAddress vips_buffer_ref ( Addressable im,  Addressable area) {
        var mh$ = vips_buffer_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(im, area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buffer_unref_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$91.vips_buffer_unref_ref$MH,"vips_buffer_unref_ref");
    }
    public static MemoryAddress vips_buffer_unref_ref ( Addressable buffer,  Addressable im,  Addressable area) {
        var mh$ = vips_buffer_unref_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, im, area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_buffer_print$MH() {
        return RuntimeHelper.requireNonNull(constants$91.vips_buffer_print$MH,"vips_buffer_print");
    }
    public static void vips_buffer_print ( Addressable buffer) {
        var mh$ = vips_buffer_print$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__render_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$91.vips__render_shutdown$MH,"vips__render_shutdown");
    }
    public static void vips__render_shutdown () {
        var mh$ = vips__render_shutdown$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_REGION_NONE() {
        return (int)0L;
    }
    public static int VIPS_REGION_BUFFER() {
        return (int)1L;
    }
    public static int VIPS_REGION_OTHER_REGION() {
        return (int)2L;
    }
    public static int VIPS_REGION_OTHER_IMAGE() {
        return (int)3L;
    }
    public static int VIPS_REGION_WINDOW() {
        return (int)4L;
    }
    public static MethodHandle vips__region_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$91.vips__region_take_ownership$MH,"vips__region_take_ownership");
    }
    public static void vips__region_take_ownership ( Addressable reg) {
        var mh$ = vips__region_take_ownership$MH();
        try {
            mh$.invokeExact(reg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__region_check_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$91.vips__region_check_ownership$MH,"vips__region_check_ownership");
    }
    public static void vips__region_check_ownership ( Addressable reg) {
        var mh$ = vips__region_check_ownership$MH();
        try {
            mh$.invokeExact(reg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__region_no_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$91.vips__region_no_ownership$MH,"vips__region_no_ownership");
    }
    public static void vips__region_no_ownership ( Addressable reg) {
        var mh$ = vips__region_no_ownership$MH();
        try {
            mh$.invokeExact(reg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$92.vips_region_fill$MH,"vips_region_fill");
    }
    public static int vips_region_fill ( Addressable reg,  Addressable r,  Addressable fn,  Addressable a) {
        var mh$ = vips_region_fill$MH();
        try {
            return (int)mh$.invokeExact(reg, r, fn, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__image_wio_output$MH() {
        return RuntimeHelper.requireNonNull(constants$92.vips__image_wio_output$MH,"vips__image_wio_output");
    }
    public static int vips__image_wio_output ( Addressable image) {
        var mh$ = vips__image_wio_output$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__image_pio_output$MH() {
        return RuntimeHelper.requireNonNull(constants$92.vips__image_pio_output$MH,"vips__image_pio_output");
    }
    public static int vips__image_pio_output ( Addressable image) {
        var mh$ = vips__image_pio_output$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__argument_get_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$92.vips__argument_get_instance$MH,"vips__argument_get_instance");
    }
    public static MemoryAddress vips__argument_get_instance ( Addressable argument_class,  Addressable object) {
        var mh$ = vips__argument_get_instance$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(argument_class, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__argument_table_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$93.vips__argument_table_lookup$MH,"vips__argument_table_lookup");
    }
    public static MemoryAddress vips__argument_table_lookup ( Addressable table,  Addressable pspec) {
        var mh$ = vips__argument_table_lookup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(table, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__demand_hint_array$MH() {
        return RuntimeHelper.requireNonNull(constants$93.vips__demand_hint_array$MH,"vips__demand_hint_array");
    }
    public static void vips__demand_hint_array ( Addressable image,  int hint,  Addressable in) {
        var mh$ = vips__demand_hint_array$MH();
        try {
            mh$.invokeExact(image, hint, in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__image_copy_fields_array$MH() {
        return RuntimeHelper.requireNonNull(constants$93.vips__image_copy_fields_array$MH,"vips__image_copy_fields_array");
    }
    public static int vips__image_copy_fields_array ( Addressable out,  Addressable in) {
        var mh$ = vips__image_copy_fields_array$MH();
        try {
            return (int)mh$.invokeExact(out, in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__region_count_pixels$MH() {
        return RuntimeHelper.requireNonNull(constants$93.vips__region_count_pixels$MH,"vips__region_count_pixels");
    }
    public static void vips__region_count_pixels ( Addressable region,  Addressable nickname) {
        var mh$ = vips__region_count_pixels$MH();
        try {
            mh$.invokeExact(region, nickname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_dump_all$MH() {
        return RuntimeHelper.requireNonNull(constants$93.vips_region_dump_all$MH,"vips_region_dump_all");
    }
    public static void vips_region_dump_all () {
        var mh$ = vips_region_dump_all$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_prepare_many$MH() {
        return RuntimeHelper.requireNonNull(constants$93.vips_region_prepare_many$MH,"vips_region_prepare_many");
    }
    public static int vips_region_prepare_many ( Addressable reg,  Addressable r) {
        var mh$ = vips_region_prepare_many$MH();
        try {
            return (int)mh$.invokeExact(reg, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips__view_image$MH() {
        return RuntimeHelper.requireNonNull(constants$94.vips__view_image$MH,"vips__view_image");
    }
    public static int vips__view_image ( Addressable image) {
        var mh$ = vips__view_image$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout _vips__argument_id$LAYOUT() {
        return constants$94._vips__argument_id$LAYOUT;
    }
    public static VarHandle _vips__argument_id$VH() {
        return constants$94._vips__argument_id$VH;
    }
    public static MemorySegment _vips__argument_id$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$94._vips__argument_id$SEGMENT,"_vips__argument_id");
    }
    public static int _vips__argument_id$get() {
        return (int) constants$94._vips__argument_id$VH.get(RuntimeHelper.requireNonNull(constants$94._vips__argument_id$SEGMENT, "_vips__argument_id"));
    }
    public static void _vips__argument_id$set( int x) {
        constants$94._vips__argument_id$VH.set(RuntimeHelper.requireNonNull(constants$94._vips__argument_id$SEGMENT, "_vips__argument_id"), x);
    }
    public static MethodHandle vips__meta_init$MH() {
        return RuntimeHelper.requireNonNull(constants$94.vips__meta_init$MH,"vips__meta_init");
    }
    public static void vips__meta_init () {
        var mh$ = vips__meta_init$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_create_imask$MH() {
        return RuntimeHelper.requireNonNull(constants$94.im_create_imask$MH,"im_create_imask");
    }
    public static MemoryAddress im_create_imask ( Addressable filename,  int xsize,  int ysize) {
        var mh$ = im_create_imask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, xsize, ysize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_create_imaskv$MH() {
        return RuntimeHelper.requireNonNull(constants$94.im_create_imaskv$MH,"im_create_imaskv");
    }
    public static MemoryAddress im_create_imaskv ( Addressable filename,  int xsize,  int ysize, Object... x3) {
        var mh$ = im_create_imaskv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, xsize, ysize, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_create_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$94.im_create_dmask$MH,"im_create_dmask");
    }
    public static MemoryAddress im_create_dmask ( Addressable filename,  int xsize,  int ysize) {
        var mh$ = im_create_dmask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, xsize, ysize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_create_dmaskv$MH() {
        return RuntimeHelper.requireNonNull(constants$95.im_create_dmaskv$MH,"im_create_dmaskv");
    }
    public static MemoryAddress im_create_dmaskv ( Addressable filename,  int xsize,  int ysize, Object... x3) {
        var mh$ = im_create_dmaskv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, xsize, ysize, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_read_imask$MH() {
        return RuntimeHelper.requireNonNull(constants$95.im_read_imask$MH,"im_read_imask");
    }
    public static MemoryAddress im_read_imask ( Addressable filename) {
        var mh$ = im_read_imask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_read_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$95.im_read_dmask$MH,"im_read_dmask");
    }
    public static MemoryAddress im_read_dmask ( Addressable filename) {
        var mh$ = im_read_dmask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_print_imask$MH() {
        return RuntimeHelper.requireNonNull(constants$95.im_print_imask$MH,"im_print_imask");
    }
    public static void im_print_imask ( Addressable in) {
        var mh$ = im_print_imask$MH();
        try {
            mh$.invokeExact(in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_print_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$95.im_print_dmask$MH,"im_print_dmask");
    }
    public static void im_print_dmask ( Addressable in) {
        var mh$ = im_print_dmask$MH();
        try {
            mh$.invokeExact(in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_write_imask$MH() {
        return RuntimeHelper.requireNonNull(constants$95.im_write_imask$MH,"im_write_imask");
    }
    public static int im_write_imask ( Addressable in) {
        var mh$ = im_write_imask$MH();
        try {
            return (int)mh$.invokeExact(in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_write_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$96.im_write_dmask$MH,"im_write_dmask");
    }
    public static int im_write_dmask ( Addressable in) {
        var mh$ = im_write_dmask$MH();
        try {
            return (int)mh$.invokeExact(in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_write_imask_name$MH() {
        return RuntimeHelper.requireNonNull(constants$96.im_write_imask_name$MH,"im_write_imask_name");
    }
    public static int im_write_imask_name ( Addressable in,  Addressable filename) {
        var mh$ = im_write_imask_name$MH();
        try {
            return (int)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_write_dmask_name$MH() {
        return RuntimeHelper.requireNonNull(constants$96.im_write_dmask_name$MH,"im_write_dmask_name");
    }
    public static int im_write_dmask_name ( Addressable in,  Addressable filename) {
        var mh$ = im_write_dmask_name$MH();
        try {
            return (int)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_free_imask$MH() {
        return RuntimeHelper.requireNonNull(constants$96.im_free_imask$MH,"im_free_imask");
    }
    public static int im_free_imask ( Addressable in) {
        var mh$ = im_free_imask$MH();
        try {
            return (int)mh$.invokeExact(in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_free_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$96.im_free_dmask$MH,"im_free_dmask");
    }
    public static int im_free_dmask ( Addressable in) {
        var mh$ = im_free_dmask$MH();
        try {
            return (int)mh$.invokeExact(in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_log_imask$MH() {
        return RuntimeHelper.requireNonNull(constants$96.im_log_imask$MH,"im_log_imask");
    }
    public static MemoryAddress im_log_imask ( Addressable filename,  double sigma,  double min_ampl) {
        var mh$ = im_log_imask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, sigma, min_ampl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_log_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$97.im_log_dmask$MH,"im_log_dmask");
    }
    public static MemoryAddress im_log_dmask ( Addressable filename,  double sigma,  double min_ampl) {
        var mh$ = im_log_dmask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, sigma, min_ampl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_gauss_imask$MH() {
        return RuntimeHelper.requireNonNull(constants$97.im_gauss_imask$MH,"im_gauss_imask");
    }
    public static MemoryAddress im_gauss_imask ( Addressable filename,  double sigma,  double min_ampl) {
        var mh$ = im_gauss_imask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, sigma, min_ampl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_gauss_imask_sep$MH() {
        return RuntimeHelper.requireNonNull(constants$97.im_gauss_imask_sep$MH,"im_gauss_imask_sep");
    }
    public static MemoryAddress im_gauss_imask_sep ( Addressable filename,  double sigma,  double min_ampl) {
        var mh$ = im_gauss_imask_sep$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, sigma, min_ampl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_gauss_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$97.im_gauss_dmask$MH,"im_gauss_dmask");
    }
    public static MemoryAddress im_gauss_dmask ( Addressable filename,  double sigma,  double min_ampl) {
        var mh$ = im_gauss_dmask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, sigma, min_ampl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_gauss_dmask_sep$MH() {
        return RuntimeHelper.requireNonNull(constants$97.im_gauss_dmask_sep$MH,"im_gauss_dmask_sep");
    }
    public static MemoryAddress im_gauss_dmask_sep ( Addressable filename,  double sigma,  double min_ampl) {
        var mh$ = im_gauss_dmask_sep$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, sigma, min_ampl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_dup_imask$MH() {
        return RuntimeHelper.requireNonNull(constants$97.im_dup_imask$MH,"im_dup_imask");
    }
    public static MemoryAddress im_dup_imask ( Addressable in,  Addressable filename) {
        var mh$ = im_dup_imask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_dup_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$98.im_dup_dmask$MH,"im_dup_dmask");
    }
    public static MemoryAddress im_dup_dmask ( Addressable in,  Addressable filename) {
        var mh$ = im_dup_dmask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_scale_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$98.im_scale_dmask$MH,"im_scale_dmask");
    }
    public static MemoryAddress im_scale_dmask ( Addressable in,  Addressable filename) {
        var mh$ = im_scale_dmask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_norm_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$98.im_norm_dmask$MH,"im_norm_dmask");
    }
    public static void im_norm_dmask ( Addressable mask) {
        var mh$ = im_norm_dmask$MH();
        try {
            mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_imask2dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$98.im_imask2dmask$MH,"im_imask2dmask");
    }
    public static MemoryAddress im_imask2dmask ( Addressable in,  Addressable filename) {
        var mh$ = im_imask2dmask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_dmask2imask$MH() {
        return RuntimeHelper.requireNonNull(constants$98.im_dmask2imask$MH,"im_dmask2imask");
    }
    public static MemoryAddress im_dmask2imask ( Addressable in,  Addressable filename) {
        var mh$ = im_dmask2imask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_rotate_imask90$MH() {
        return RuntimeHelper.requireNonNull(constants$98.im_rotate_imask90$MH,"im_rotate_imask90");
    }
    public static MemoryAddress im_rotate_imask90 ( Addressable in,  Addressable filename) {
        var mh$ = im_rotate_imask90$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_rotate_imask45$MH() {
        return RuntimeHelper.requireNonNull(constants$99.im_rotate_imask45$MH,"im_rotate_imask45");
    }
    public static MemoryAddress im_rotate_imask45 ( Addressable in,  Addressable filename) {
        var mh$ = im_rotate_imask45$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_rotate_dmask90$MH() {
        return RuntimeHelper.requireNonNull(constants$99.im_rotate_dmask90$MH,"im_rotate_dmask90");
    }
    public static MemoryAddress im_rotate_dmask90 ( Addressable in,  Addressable filename) {
        var mh$ = im_rotate_dmask90$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_rotate_dmask45$MH() {
        return RuntimeHelper.requireNonNull(constants$99.im_rotate_dmask45$MH,"im_rotate_dmask45");
    }
    public static MemoryAddress im_rotate_dmask45 ( Addressable in,  Addressable filename) {
        var mh$ = im_rotate_dmask45$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_mattrn$MH() {
        return RuntimeHelper.requireNonNull(constants$99.im_mattrn$MH,"im_mattrn");
    }
    public static MemoryAddress im_mattrn ( Addressable in,  Addressable filename) {
        var mh$ = im_mattrn$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_matcat$MH() {
        return RuntimeHelper.requireNonNull(constants$99.im_matcat$MH,"im_matcat");
    }
    public static MemoryAddress im_matcat ( Addressable top,  Addressable bottom,  Addressable filename) {
        var mh$ = im_matcat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(top, bottom, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_matmul$MH() {
        return RuntimeHelper.requireNonNull(constants$99.im_matmul$MH,"im_matmul");
    }
    public static MemoryAddress im_matmul ( Addressable in1,  Addressable in2,  Addressable filename) {
        var mh$ = im_matmul$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in1, in2, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_lu_decomp$MH() {
        return RuntimeHelper.requireNonNull(constants$100.im_lu_decomp$MH,"im_lu_decomp");
    }
    public static MemoryAddress im_lu_decomp ( Addressable mat,  Addressable filename) {
        var mh$ = im_lu_decomp$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mat, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_lu_solve$MH() {
        return RuntimeHelper.requireNonNull(constants$100.im_lu_solve$MH,"im_lu_solve");
    }
    public static int im_lu_solve ( Addressable lu,  Addressable vec) {
        var mh$ = im_lu_solve$MH();
        try {
            return (int)mh$.invokeExact(lu, vec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_matinv$MH() {
        return RuntimeHelper.requireNonNull(constants$100.im_matinv$MH,"im_matinv");
    }
    public static MemoryAddress im_matinv ( Addressable mat,  Addressable filename) {
        var mh$ = im_matinv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mat, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_matinv_inplace$MH() {
        return RuntimeHelper.requireNonNull(constants$100.im_matinv_inplace$MH,"im_matinv_inplace");
    }
    public static int im_matinv_inplace ( Addressable mat) {
        var mh$ = im_matinv_inplace$MH();
        try {
            return (int)mh$.invokeExact(mat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_local_dmask$MH() {
        return RuntimeHelper.requireNonNull(constants$100.im_local_dmask$MH,"im_local_dmask");
    }
    public static MemoryAddress im_local_dmask ( Addressable out,  Addressable mask) {
        var mh$ = im_local_dmask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(out, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle im_local_imask$MH() {
        return RuntimeHelper.requireNonNull(constants$100.im_local_imask$MH,"im_local_imask");
    }
    public static MemoryAddress im_local_imask ( Addressable out,  Addressable mask) {
        var mh$ = im_local_imask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(out, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_REGION_SHRINK_MEAN() {
        return (int)0L;
    }
    public static int VIPS_REGION_SHRINK_MEDIAN() {
        return (int)1L;
    }
    public static int VIPS_REGION_SHRINK_MODE() {
        return (int)2L;
    }
    public static int VIPS_REGION_SHRINK_MAX() {
        return (int)3L;
    }
    public static int VIPS_REGION_SHRINK_MIN() {
        return (int)4L;
    }
    public static int VIPS_REGION_SHRINK_NEAREST() {
        return (int)5L;
    }
    public static int VIPS_REGION_SHRINK_LAST() {
        return (int)6L;
    }
    public static MethodHandle vips_region_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$101.vips_region_get_type$MH,"vips_region_get_type");
    }
    public static long vips_region_get_type () {
        var mh$ = vips_region_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_new$MH() {
        return RuntimeHelper.requireNonNull(constants$101.vips_region_new$MH,"vips_region_new");
    }
    public static MemoryAddress vips_region_new ( Addressable image) {
        var mh$ = vips_region_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$101.vips_region_buffer$MH,"vips_region_buffer");
    }
    public static int vips_region_buffer ( Addressable reg,  Addressable r) {
        var mh$ = vips_region_buffer$MH();
        try {
            return (int)mh$.invokeExact(reg, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_image$MH() {
        return RuntimeHelper.requireNonNull(constants$101.vips_region_image$MH,"vips_region_image");
    }
    public static int vips_region_image ( Addressable reg,  Addressable r) {
        var mh$ = vips_region_image$MH();
        try {
            return (int)mh$.invokeExact(reg, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_region$MH() {
        return RuntimeHelper.requireNonNull(constants$101.vips_region_region$MH,"vips_region_region");
    }
    public static int vips_region_region ( Addressable reg,  Addressable dest,  Addressable r,  int x,  int y) {
        var mh$ = vips_region_region$MH();
        try {
            return (int)mh$.invokeExact(reg, dest, r, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_equalsregion$MH() {
        return RuntimeHelper.requireNonNull(constants$101.vips_region_equalsregion$MH,"vips_region_equalsregion");
    }
    public static int vips_region_equalsregion ( Addressable reg1,  Addressable reg2) {
        var mh$ = vips_region_equalsregion$MH();
        try {
            return (int)mh$.invokeExact(reg1, reg2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_position$MH() {
        return RuntimeHelper.requireNonNull(constants$102.vips_region_position$MH,"vips_region_position");
    }
    public static int vips_region_position ( Addressable reg,  int x,  int y) {
        var mh$ = vips_region_position$MH();
        try {
            return (int)mh$.invokeExact(reg, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_paint$MH() {
        return RuntimeHelper.requireNonNull(constants$102.vips_region_paint$MH,"vips_region_paint");
    }
    public static void vips_region_paint ( Addressable reg,  Addressable r,  int value) {
        var mh$ = vips_region_paint$MH();
        try {
            mh$.invokeExact(reg, r, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_paint_pel$MH() {
        return RuntimeHelper.requireNonNull(constants$102.vips_region_paint_pel$MH,"vips_region_paint_pel");
    }
    public static void vips_region_paint_pel ( Addressable reg,  Addressable r,  Addressable ink) {
        var mh$ = vips_region_paint_pel$MH();
        try {
            mh$.invokeExact(reg, r, ink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_black$MH() {
        return RuntimeHelper.requireNonNull(constants$102.vips_region_black$MH,"vips_region_black");
    }
    public static void vips_region_black ( Addressable reg) {
        var mh$ = vips_region_black$MH();
        try {
            mh$.invokeExact(reg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$102.vips_region_copy$MH,"vips_region_copy");
    }
    public static void vips_region_copy ( Addressable reg,  Addressable dest,  Addressable r,  int x,  int y) {
        var mh$ = vips_region_copy$MH();
        try {
            mh$.invokeExact(reg, dest, r, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_shrink_method$MH() {
        return RuntimeHelper.requireNonNull(constants$102.vips_region_shrink_method$MH,"vips_region_shrink_method");
    }
    public static int vips_region_shrink_method ( Addressable from,  Addressable to,  Addressable target,  int method) {
        var mh$ = vips_region_shrink_method$MH();
        try {
            return (int)mh$.invokeExact(from, to, target, method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_shrink$MH() {
        return RuntimeHelper.requireNonNull(constants$103.vips_region_shrink$MH,"vips_region_shrink");
    }
    public static int vips_region_shrink ( Addressable from,  Addressable to,  Addressable target) {
        var mh$ = vips_region_shrink$MH();
        try {
            return (int)mh$.invokeExact(from, to, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_prepare$MH() {
        return RuntimeHelper.requireNonNull(constants$103.vips_region_prepare$MH,"vips_region_prepare");
    }
    public static int vips_region_prepare ( Addressable reg,  Addressable r) {
        var mh$ = vips_region_prepare$MH();
        try {
            return (int)mh$.invokeExact(reg, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_prepare_to$MH() {
        return RuntimeHelper.requireNonNull(constants$103.vips_region_prepare_to$MH,"vips_region_prepare_to");
    }
    public static int vips_region_prepare_to ( Addressable reg,  Addressable dest,  Addressable r,  int x,  int y) {
        var mh$ = vips_region_prepare_to$MH();
        try {
            return (int)mh$.invokeExact(reg, dest, r, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_fetch$MH() {
        return RuntimeHelper.requireNonNull(constants$103.vips_region_fetch$MH,"vips_region_fetch");
    }
    public static MemoryAddress vips_region_fetch ( Addressable region,  int left,  int top,  int width,  int height,  Addressable len) {
        var mh$ = vips_region_fetch$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(region, left, top, width, height, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_width$MH() {
        return RuntimeHelper.requireNonNull(constants$103.vips_region_width$MH,"vips_region_width");
    }
    public static int vips_region_width ( Addressable region) {
        var mh$ = vips_region_width$MH();
        try {
            return (int)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_height$MH() {
        return RuntimeHelper.requireNonNull(constants$103.vips_region_height$MH,"vips_region_height");
    }
    public static int vips_region_height ( Addressable region) {
        var mh$ = vips_region_height$MH();
        try {
            return (int)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_region_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$104.vips_region_invalidate$MH,"vips_region_invalidate");
    }
    public static void vips_region_invalidate ( Addressable reg) {
        var mh$ = vips_region_invalidate$MH();
        try {
            mh$.invokeExact(reg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_DEMAND_STYLE_ERROR() {
        return (int)-1L;
    }
    public static int VIPS_DEMAND_STYLE_SMALLTILE() {
        return (int)0L;
    }
    public static int VIPS_DEMAND_STYLE_FATSTRIP() {
        return (int)1L;
    }
    public static int VIPS_DEMAND_STYLE_THINSTRIP() {
        return (int)2L;
    }
    public static int VIPS_DEMAND_STYLE_ANY() {
        return (int)3L;
    }
    public static int VIPS_IMAGE_ERROR() {
        return (int)-1L;
    }
    public static int VIPS_IMAGE_NONE() {
        return (int)0L;
    }
    public static int VIPS_IMAGE_SETBUF() {
        return (int)1L;
    }
    public static int VIPS_IMAGE_SETBUF_FOREIGN() {
        return (int)2L;
    }
    public static int VIPS_IMAGE_OPENIN() {
        return (int)3L;
    }
    public static int VIPS_IMAGE_MMAPIN() {
        return (int)4L;
    }
    public static int VIPS_IMAGE_MMAPINRW() {
        return (int)5L;
    }
    public static int VIPS_IMAGE_OPENOUT() {
        return (int)6L;
    }
    public static int VIPS_IMAGE_PARTIAL() {
        return (int)7L;
    }
    public static int VIPS_INTERPRETATION_ERROR() {
        return (int)-1L;
    }
    public static int VIPS_INTERPRETATION_MULTIBAND() {
        return (int)0L;
    }
    public static int VIPS_INTERPRETATION_B_W() {
        return (int)1L;
    }
    public static int VIPS_INTERPRETATION_HISTOGRAM() {
        return (int)10L;
    }
    public static int VIPS_INTERPRETATION_XYZ() {
        return (int)12L;
    }
    public static int VIPS_INTERPRETATION_LAB() {
        return (int)13L;
    }
    public static int VIPS_INTERPRETATION_CMYK() {
        return (int)15L;
    }
    public static int VIPS_INTERPRETATION_LABQ() {
        return (int)16L;
    }
    public static int VIPS_INTERPRETATION_RGB() {
        return (int)17L;
    }
    public static int VIPS_INTERPRETATION_CMC() {
        return (int)18L;
    }
    public static int VIPS_INTERPRETATION_LCH() {
        return (int)19L;
    }
    public static int VIPS_INTERPRETATION_LABS() {
        return (int)21L;
    }
    public static int VIPS_INTERPRETATION_sRGB() {
        return (int)22L;
    }
    public static int VIPS_INTERPRETATION_YXY() {
        return (int)23L;
    }
    public static int VIPS_INTERPRETATION_FOURIER() {
        return (int)24L;
    }
    public static int VIPS_INTERPRETATION_RGB16() {
        return (int)25L;
    }
    public static int VIPS_INTERPRETATION_GREY16() {
        return (int)26L;
    }
    public static int VIPS_INTERPRETATION_MATRIX() {
        return (int)27L;
    }
    public static int VIPS_INTERPRETATION_scRGB() {
        return (int)28L;
    }
    public static int VIPS_INTERPRETATION_HSV() {
        return (int)29L;
    }
    public static int VIPS_INTERPRETATION_LAST() {
        return (int)30L;
    }
    public static int VIPS_FORMAT_NOTSET() {
        return (int)-1L;
    }
    public static int VIPS_FORMAT_UCHAR() {
        return (int)0L;
    }
    public static int VIPS_FORMAT_CHAR() {
        return (int)1L;
    }
    public static int VIPS_FORMAT_USHORT() {
        return (int)2L;
    }
    public static int VIPS_FORMAT_SHORT() {
        return (int)3L;
    }
    public static int VIPS_FORMAT_UINT() {
        return (int)4L;
    }
    public static int VIPS_FORMAT_INT() {
        return (int)5L;
    }
    public static int VIPS_FORMAT_FLOAT() {
        return (int)6L;
    }
    public static int VIPS_FORMAT_COMPLEX() {
        return (int)7L;
    }
    public static int VIPS_FORMAT_DOUBLE() {
        return (int)8L;
    }
    public static int VIPS_FORMAT_DPCOMPLEX() {
        return (int)9L;
    }
    public static int VIPS_FORMAT_LAST() {
        return (int)10L;
    }
    public static int VIPS_CODING_ERROR() {
        return (int)-1L;
    }
    public static int VIPS_CODING_NONE() {
        return (int)0L;
    }
    public static int VIPS_CODING_LABQ() {
        return (int)2L;
    }
    public static int VIPS_CODING_RAD() {
        return (int)6L;
    }
    public static int VIPS_CODING_LAST() {
        return (int)7L;
    }
    public static int VIPS_ACCESS_RANDOM() {
        return (int)0L;
    }
    public static int VIPS_ACCESS_SEQUENTIAL() {
        return (int)1L;
    }
    public static int VIPS_ACCESS_SEQUENTIAL_UNBUFFERED() {
        return (int)2L;
    }
    public static int VIPS_ACCESS_LAST() {
        return (int)3L;
    }
    public static MethodHandle vips_image_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$105.vips_image_get_type$MH,"vips_image_get_type");
    }
    public static long vips_image_get_type () {
        var mh$ = vips_image_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_progress_set$MH() {
        return RuntimeHelper.requireNonNull(constants$105.vips_progress_set$MH,"vips_progress_set");
    }
    public static void vips_progress_set ( int progress) {
        var mh$ = vips_progress_set$MH();
        try {
            mh$.invokeExact(progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_invalidate_all$MH() {
        return RuntimeHelper.requireNonNull(constants$105.vips_image_invalidate_all$MH,"vips_image_invalidate_all");
    }
    public static void vips_image_invalidate_all ( Addressable image) {
        var mh$ = vips_image_invalidate_all$MH();
        try {
            mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_minimise_all$MH() {
        return RuntimeHelper.requireNonNull(constants$105.vips_image_minimise_all$MH,"vips_image_minimise_all");
    }
    public static void vips_image_minimise_all ( Addressable image) {
        var mh$ = vips_image_minimise_all$MH();
        try {
            mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_is_sequential$MH() {
        return RuntimeHelper.requireNonNull(constants$105.vips_image_is_sequential$MH,"vips_image_is_sequential");
    }
    public static int vips_image_is_sequential ( Addressable image) {
        var mh$ = vips_image_is_sequential$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_progress$MH() {
        return RuntimeHelper.requireNonNull(constants$106.vips_image_set_progress$MH,"vips_image_set_progress");
    }
    public static void vips_image_set_progress ( Addressable image,  int progress) {
        var mh$ = vips_image_set_progress$MH();
        try {
            mh$.invokeExact(image, progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_iskilled$MH() {
        return RuntimeHelper.requireNonNull(constants$106.vips_image_iskilled$MH,"vips_image_iskilled");
    }
    public static int vips_image_iskilled ( Addressable image) {
        var mh$ = vips_image_iskilled$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_kill$MH() {
        return RuntimeHelper.requireNonNull(constants$106.vips_image_set_kill$MH,"vips_image_set_kill");
    }
    public static void vips_image_set_kill ( Addressable image,  int kill) {
        var mh$ = vips_image_set_kill$MH();
        try {
            mh$.invokeExact(image, kill);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_filename_get_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$106.vips_filename_get_filename$MH,"vips_filename_get_filename");
    }
    public static MemoryAddress vips_filename_get_filename ( Addressable vips_filename) {
        var mh$ = vips_filename_get_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(vips_filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_filename_get_options$MH() {
        return RuntimeHelper.requireNonNull(constants$106.vips_filename_get_options$MH,"vips_filename_get_options");
    }
    public static MemoryAddress vips_filename_get_options ( Addressable vips_filename) {
        var mh$ = vips_filename_get_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(vips_filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new$MH() {
        return RuntimeHelper.requireNonNull(constants$106.vips_image_new$MH,"vips_image_new");
    }
    public static MemoryAddress vips_image_new () {
        var mh$ = vips_image_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$107.vips_image_new_memory$MH,"vips_image_new_memory");
    }
    public static MemoryAddress vips_image_new_memory () {
        var mh$ = vips_image_new_memory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$107.vips_image_memory$MH,"vips_image_memory");
    }
    public static MemoryAddress vips_image_memory () {
        var mh$ = vips_image_memory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$107.vips_image_new_from_file$MH,"vips_image_new_from_file");
    }
    public static MemoryAddress vips_image_new_from_file ( Addressable name, Object... x1) {
        var mh$ = vips_image_new_from_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_from_file_RW$MH() {
        return RuntimeHelper.requireNonNull(constants$107.vips_image_new_from_file_RW$MH,"vips_image_new_from_file_RW");
    }
    public static MemoryAddress vips_image_new_from_file_RW ( Addressable filename) {
        var mh$ = vips_image_new_from_file_RW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_from_file_raw$MH() {
        return RuntimeHelper.requireNonNull(constants$107.vips_image_new_from_file_raw$MH,"vips_image_new_from_file_raw");
    }
    public static MemoryAddress vips_image_new_from_file_raw ( Addressable filename,  int xsize,  int ysize,  int bands,  long offset) {
        var mh$ = vips_image_new_from_file_raw$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, xsize, ysize, bands, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_from_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$107.vips_image_new_from_memory$MH,"vips_image_new_from_memory");
    }
    public static MemoryAddress vips_image_new_from_memory ( Addressable data,  long size,  int width,  int height,  int bands,  int format) {
        var mh$ = vips_image_new_from_memory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data, size, width, height, bands, format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_from_memory_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$108.vips_image_new_from_memory_copy$MH,"vips_image_new_from_memory_copy");
    }
    public static MemoryAddress vips_image_new_from_memory_copy ( Addressable data,  long size,  int width,  int height,  int bands,  int format) {
        var mh$ = vips_image_new_from_memory_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data, size, width, height, bands, format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_from_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$108.vips_image_new_from_buffer$MH,"vips_image_new_from_buffer");
    }
    public static MemoryAddress vips_image_new_from_buffer ( Addressable buf,  long len,  Addressable option_string, Object... x3) {
        var mh$ = vips_image_new_from_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buf, len, option_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_from_source$MH() {
        return RuntimeHelper.requireNonNull(constants$108.vips_image_new_from_source$MH,"vips_image_new_from_source");
    }
    public static MemoryAddress vips_image_new_from_source ( Addressable source,  Addressable option_string, Object... x2) {
        var mh$ = vips_image_new_from_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source, option_string, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$108.vips_image_new_matrix$MH,"vips_image_new_matrix");
    }
    public static MemoryAddress vips_image_new_matrix ( int width,  int height) {
        var mh$ = vips_image_new_matrix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_matrixv$MH() {
        return RuntimeHelper.requireNonNull(constants$108.vips_image_new_matrixv$MH,"vips_image_new_matrixv");
    }
    public static MemoryAddress vips_image_new_matrixv ( int width,  int height, Object... x2) {
        var mh$ = vips_image_new_matrixv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(width, height, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_matrix_from_array$MH() {
        return RuntimeHelper.requireNonNull(constants$108.vips_image_new_matrix_from_array$MH,"vips_image_new_matrix_from_array");
    }
    public static MemoryAddress vips_image_new_matrix_from_array ( int width,  int height,  Addressable array,  int size) {
        var mh$ = vips_image_new_matrix_from_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(width, height, array, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_matrix_from_array$MH() {
        return RuntimeHelper.requireNonNull(constants$109.vips_image_matrix_from_array$MH,"vips_image_matrix_from_array");
    }
    public static MemoryAddress vips_image_matrix_from_array ( int width,  int height,  Addressable array,  int size) {
        var mh$ = vips_image_matrix_from_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(width, height, array, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_from_image$MH() {
        return RuntimeHelper.requireNonNull(constants$109.vips_image_new_from_image$MH,"vips_image_new_from_image");
    }
    public static MemoryAddress vips_image_new_from_image ( Addressable image,  Addressable c,  int n) {
        var mh$ = vips_image_new_from_image$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image, c, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_from_image1$MH() {
        return RuntimeHelper.requireNonNull(constants$109.vips_image_new_from_image1$MH,"vips_image_new_from_image1");
    }
    public static MemoryAddress vips_image_new_from_image1 ( Addressable image,  double c) {
        var mh$ = vips_image_new_from_image1$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_delete_on_close$MH() {
        return RuntimeHelper.requireNonNull(constants$109.vips_image_set_delete_on_close$MH,"vips_image_set_delete_on_close");
    }
    public static void vips_image_set_delete_on_close ( Addressable image,  int delete_on_close) {
        var mh$ = vips_image_set_delete_on_close$MH();
        try {
            mh$.invokeExact(image, delete_on_close);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_get_disc_threshold$MH() {
        return RuntimeHelper.requireNonNull(constants$109.vips_get_disc_threshold$MH,"vips_get_disc_threshold");
    }
    public static long vips_get_disc_threshold () {
        var mh$ = vips_get_disc_threshold$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_new_temp_file$MH() {
        return RuntimeHelper.requireNonNull(constants$109.vips_image_new_temp_file$MH,"vips_image_new_temp_file");
    }
    public static MemoryAddress vips_image_new_temp_file ( Addressable format) {
        var mh$ = vips_image_new_temp_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_write$MH() {
        return RuntimeHelper.requireNonNull(constants$110.vips_image_write$MH,"vips_image_write");
    }
    public static int vips_image_write ( Addressable image,  Addressable out) {
        var mh$ = vips_image_write$MH();
        try {
            return (int)mh$.invokeExact(image, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_write_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$110.vips_image_write_to_file$MH,"vips_image_write_to_file");
    }
    public static int vips_image_write_to_file ( Addressable image,  Addressable name, Object... x2) {
        var mh$ = vips_image_write_to_file$MH();
        try {
            return (int)mh$.invokeExact(image, name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_write_to_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$110.vips_image_write_to_buffer$MH,"vips_image_write_to_buffer");
    }
    public static int vips_image_write_to_buffer ( Addressable in,  Addressable suffix,  Addressable buf,  Addressable size, Object... x4) {
        var mh$ = vips_image_write_to_buffer$MH();
        try {
            return (int)mh$.invokeExact(in, suffix, buf, size, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_write_to_target$MH() {
        return RuntimeHelper.requireNonNull(constants$110.vips_image_write_to_target$MH,"vips_image_write_to_target");
    }
    public static int vips_image_write_to_target ( Addressable in,  Addressable suffix,  Addressable target, Object... x3) {
        var mh$ = vips_image_write_to_target$MH();
        try {
            return (int)mh$.invokeExact(in, suffix, target, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_write_to_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$110.vips_image_write_to_memory$MH,"vips_image_write_to_memory");
    }
    public static MemoryAddress vips_image_write_to_memory ( Addressable in,  Addressable size) {
        var mh$ = vips_image_write_to_memory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_decode_predict$MH() {
        return RuntimeHelper.requireNonNull(constants$110.vips_image_decode_predict$MH,"vips_image_decode_predict");
    }
    public static int vips_image_decode_predict ( Addressable in,  Addressable bands,  Addressable format) {
        var mh$ = vips_image_decode_predict$MH();
        try {
            return (int)mh$.invokeExact(in, bands, format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_decode$MH() {
        return RuntimeHelper.requireNonNull(constants$111.vips_image_decode$MH,"vips_image_decode");
    }
    public static int vips_image_decode ( Addressable in,  Addressable out) {
        var mh$ = vips_image_decode$MH();
        try {
            return (int)mh$.invokeExact(in, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_encode$MH() {
        return RuntimeHelper.requireNonNull(constants$111.vips_image_encode$MH,"vips_image_encode");
    }
    public static int vips_image_encode ( Addressable in,  Addressable out,  int coding) {
        var mh$ = vips_image_encode$MH();
        try {
            return (int)mh$.invokeExact(in, out, coding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_isMSBfirst$MH() {
        return RuntimeHelper.requireNonNull(constants$111.vips_image_isMSBfirst$MH,"vips_image_isMSBfirst");
    }
    public static int vips_image_isMSBfirst ( Addressable image) {
        var mh$ = vips_image_isMSBfirst$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_isfile$MH() {
        return RuntimeHelper.requireNonNull(constants$111.vips_image_isfile$MH,"vips_image_isfile");
    }
    public static int vips_image_isfile ( Addressable image) {
        var mh$ = vips_image_isfile$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_ispartial$MH() {
        return RuntimeHelper.requireNonNull(constants$111.vips_image_ispartial$MH,"vips_image_ispartial");
    }
    public static int vips_image_ispartial ( Addressable image) {
        var mh$ = vips_image_ispartial$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_hasalpha$MH() {
        return RuntimeHelper.requireNonNull(constants$111.vips_image_hasalpha$MH,"vips_image_hasalpha");
    }
    public static int vips_image_hasalpha ( Addressable image) {
        var mh$ = vips_image_hasalpha$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_copy_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$112.vips_image_copy_memory$MH,"vips_image_copy_memory");
    }
    public static MemoryAddress vips_image_copy_memory ( Addressable image) {
        var mh$ = vips_image_copy_memory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_wio_input$MH() {
        return RuntimeHelper.requireNonNull(constants$112.vips_image_wio_input$MH,"vips_image_wio_input");
    }
    public static int vips_image_wio_input ( Addressable image) {
        var mh$ = vips_image_wio_input$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_pio_input$MH() {
        return RuntimeHelper.requireNonNull(constants$112.vips_image_pio_input$MH,"vips_image_pio_input");
    }
    public static int vips_image_pio_input ( Addressable image) {
        var mh$ = vips_image_pio_input$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_pio_output$MH() {
        return RuntimeHelper.requireNonNull(constants$112.vips_image_pio_output$MH,"vips_image_pio_output");
    }
    public static int vips_image_pio_output ( Addressable image) {
        var mh$ = vips_image_pio_output$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_inplace$MH() {
        return RuntimeHelper.requireNonNull(constants$112.vips_image_inplace$MH,"vips_image_inplace");
    }
    public static int vips_image_inplace ( Addressable image) {
        var mh$ = vips_image_inplace$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_write_prepare$MH() {
        return RuntimeHelper.requireNonNull(constants$112.vips_image_write_prepare$MH,"vips_image_write_prepare");
    }
    public static int vips_image_write_prepare ( Addressable image) {
        var mh$ = vips_image_write_prepare$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_write_line$MH() {
        return RuntimeHelper.requireNonNull(constants$113.vips_image_write_line$MH,"vips_image_write_line");
    }
    public static int vips_image_write_line ( Addressable image,  int ypos,  Addressable linebuffer) {
        var mh$ = vips_image_write_line$MH();
        try {
            return (int)mh$.invokeExact(image, ypos, linebuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_band_format_isint$MH() {
        return RuntimeHelper.requireNonNull(constants$113.vips_band_format_isint$MH,"vips_band_format_isint");
    }
    public static int vips_band_format_isint ( int format) {
        var mh$ = vips_band_format_isint$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_band_format_isuint$MH() {
        return RuntimeHelper.requireNonNull(constants$113.vips_band_format_isuint$MH,"vips_band_format_isuint");
    }
    public static int vips_band_format_isuint ( int format) {
        var mh$ = vips_band_format_isuint$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_band_format_is8bit$MH() {
        return RuntimeHelper.requireNonNull(constants$113.vips_band_format_is8bit$MH,"vips_band_format_is8bit");
    }
    public static int vips_band_format_is8bit ( int format) {
        var mh$ = vips_band_format_is8bit$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_band_format_isfloat$MH() {
        return RuntimeHelper.requireNonNull(constants$113.vips_band_format_isfloat$MH,"vips_band_format_isfloat");
    }
    public static int vips_band_format_isfloat ( int format) {
        var mh$ = vips_band_format_isfloat$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_band_format_iscomplex$MH() {
        return RuntimeHelper.requireNonNull(constants$113.vips_band_format_iscomplex$MH,"vips_band_format_iscomplex");
    }
    public static int vips_band_format_iscomplex ( int format) {
        var mh$ = vips_band_format_iscomplex$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_system$MH() {
        return RuntimeHelper.requireNonNull(constants$114.vips_system$MH,"vips_system");
    }
    public static int vips_system ( Addressable cmd_format, Object... x1) {
        var mh$ = vips_system$MH();
        try {
            return (int)mh$.invokeExact(cmd_format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_image_new$MH() {
        return RuntimeHelper.requireNonNull(constants$114.vips_array_image_new$MH,"vips_array_image_new");
    }
    public static MemoryAddress vips_array_image_new ( Addressable array,  int n) {
        var mh$ = vips_array_image_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_image_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$114.vips_array_image_newv$MH,"vips_array_image_newv");
    }
    public static MemoryAddress vips_array_image_newv ( int n, Object... x1) {
        var mh$ = vips_array_image_newv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_image_new_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$114.vips_array_image_new_from_string$MH,"vips_array_image_new_from_string");
    }
    public static MemoryAddress vips_array_image_new_from_string ( Addressable string,  int flags) {
        var mh$ = vips_array_image_new_from_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_image_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$114.vips_array_image_empty$MH,"vips_array_image_empty");
    }
    public static MemoryAddress vips_array_image_empty () {
        var mh$ = vips_array_image_empty$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_image_append$MH() {
        return RuntimeHelper.requireNonNull(constants$114.vips_array_image_append$MH,"vips_array_image_append");
    }
    public static MemoryAddress vips_array_image_append ( Addressable array,  Addressable image) {
        var mh$ = vips_array_image_append$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(array, image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_array_image_get$MH() {
        return RuntimeHelper.requireNonNull(constants$115.vips_array_image_get$MH,"vips_array_image_get");
    }
    public static MemoryAddress vips_array_image_get ( Addressable array,  Addressable n) {
        var mh$ = vips_array_image_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_get_array_image$MH() {
        return RuntimeHelper.requireNonNull(constants$115.vips_value_get_array_image$MH,"vips_value_get_array_image");
    }
    public static MemoryAddress vips_value_get_array_image ( Addressable value,  Addressable n) {
        var mh$ = vips_value_get_array_image$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_value_set_array_image$MH() {
        return RuntimeHelper.requireNonNull(constants$115.vips_value_set_array_image$MH,"vips_value_set_array_image");
    }
    public static void vips_value_set_array_image ( Addressable value,  int n) {
        var mh$ = vips_value_set_array_image$MH();
        try {
            mh$.invokeExact(value, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_reorder_prepare_many$MH() {
        return RuntimeHelper.requireNonNull(constants$115.vips_reorder_prepare_many$MH,"vips_reorder_prepare_many");
    }
    public static int vips_reorder_prepare_many ( Addressable image,  Addressable regions,  Addressable r) {
        var mh$ = vips_reorder_prepare_many$MH();
        try {
            return (int)mh$.invokeExact(image, regions, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_reorder_margin_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$115.vips_reorder_margin_hint$MH,"vips_reorder_margin_hint");
    }
    public static void vips_reorder_margin_hint ( Addressable image,  int margin) {
        var mh$ = vips_reorder_margin_hint$MH();
        try {
            mh$.invokeExact(image, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_free_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$115.vips_image_free_buffer$MH,"vips_image_free_buffer");
    }
    public static void vips_image_free_buffer ( Addressable image,  Addressable buffer) {
        var mh$ = vips_image_free_buffer$MH();
        try {
            mh$.invokeExact(image, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$116.vips_malloc$MH,"vips_malloc");
    }
    public static MemoryAddress vips_malloc ( Addressable object,  long size) {
        var mh$ = vips_malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_strdup$MH() {
        return RuntimeHelper.requireNonNull(constants$116.vips_strdup$MH,"vips_strdup");
    }
    public static MemoryAddress vips_strdup ( Addressable object,  Addressable str) {
        var mh$ = vips_strdup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tracked_free$MH() {
        return RuntimeHelper.requireNonNull(constants$116.vips_tracked_free$MH,"vips_tracked_free");
    }
    public static void vips_tracked_free ( Addressable s) {
        var mh$ = vips_tracked_free$MH();
        try {
            mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tracked_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$116.vips_tracked_malloc$MH,"vips_tracked_malloc");
    }
    public static MemoryAddress vips_tracked_malloc ( long size) {
        var mh$ = vips_tracked_malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tracked_get_mem$MH() {
        return RuntimeHelper.requireNonNull(constants$116.vips_tracked_get_mem$MH,"vips_tracked_get_mem");
    }
    public static long vips_tracked_get_mem () {
        var mh$ = vips_tracked_get_mem$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tracked_get_mem_highwater$MH() {
        return RuntimeHelper.requireNonNull(constants$116.vips_tracked_get_mem_highwater$MH,"vips_tracked_get_mem_highwater");
    }
    public static long vips_tracked_get_mem_highwater () {
        var mh$ = vips_tracked_get_mem_highwater$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tracked_get_allocs$MH() {
        return RuntimeHelper.requireNonNull(constants$117.vips_tracked_get_allocs$MH,"vips_tracked_get_allocs");
    }
    public static int vips_tracked_get_allocs () {
        var mh$ = vips_tracked_get_allocs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tracked_open$MH() {
        return RuntimeHelper.requireNonNull(constants$117.vips_tracked_open$MH,"vips_tracked_open");
    }
    public static int vips_tracked_open ( Addressable pathname,  int flags,  int mode) {
        var mh$ = vips_tracked_open$MH();
        try {
            return (int)mh$.invokeExact(pathname, flags, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tracked_close$MH() {
        return RuntimeHelper.requireNonNull(constants$117.vips_tracked_close$MH,"vips_tracked_close");
    }
    public static int vips_tracked_close ( int fd) {
        var mh$ = vips_tracked_close$MH();
        try {
            return (int)mh$.invokeExact(fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_tracked_get_files$MH() {
        return RuntimeHelper.requireNonNull(constants$117.vips_tracked_get_files$MH,"vips_tracked_get_files");
    }
    public static int vips_tracked_get_files () {
        var mh$ = vips_tracked_get_files$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_error_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$117.vips_error_buffer$MH,"vips_error_buffer");
    }
    public static MemoryAddress vips_error_buffer () {
        var mh$ = vips_error_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_error_buffer_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$117.vips_error_buffer_copy$MH,"vips_error_buffer_copy");
    }
    public static MemoryAddress vips_error_buffer_copy () {
        var mh$ = vips_error_buffer_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_error_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$118.vips_error_clear$MH,"vips_error_clear");
    }
    public static void vips_error_clear () {
        var mh$ = vips_error_clear$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_error_freeze$MH() {
        return RuntimeHelper.requireNonNull(constants$118.vips_error_freeze$MH,"vips_error_freeze");
    }
    public static void vips_error_freeze () {
        var mh$ = vips_error_freeze$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_error_thaw$MH() {
        return RuntimeHelper.requireNonNull(constants$118.vips_error_thaw$MH,"vips_error_thaw");
    }
    public static void vips_error_thaw () {
        var mh$ = vips_error_thaw$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_error$MH() {
        return RuntimeHelper.requireNonNull(constants$118.vips_error$MH,"vips_error");
    }
    public static void vips_error ( Addressable domain,  Addressable fmt, Object... x2) {
        var mh$ = vips_error$MH();
        try {
            mh$.invokeExact(domain, fmt, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_verror$MH() {
        return RuntimeHelper.requireNonNull(constants$118.vips_verror$MH,"vips_verror");
    }
    public static void vips_verror ( Addressable domain,  Addressable fmt,  Addressable ap) {
        var mh$ = vips_verror$MH();
        try {
            mh$.invokeExact(domain, fmt, ap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_error_system$MH() {
        return RuntimeHelper.requireNonNull(constants$118.vips_error_system$MH,"vips_error_system");
    }
    public static void vips_error_system ( int err,  Addressable domain,  Addressable fmt, Object... x3) {
        var mh$ = vips_error_system$MH();
        try {
            mh$.invokeExact(err, domain, fmt, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_verror_system$MH() {
        return RuntimeHelper.requireNonNull(constants$119.vips_verror_system$MH,"vips_verror_system");
    }
    public static void vips_verror_system ( int err,  Addressable domain,  Addressable fmt,  Addressable ap) {
        var mh$ = vips_verror_system$MH();
        try {
            mh$.invokeExact(err, domain, fmt, ap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_error_g$MH() {
        return RuntimeHelper.requireNonNull(constants$119.vips_error_g$MH,"vips_error_g");
    }
    public static void vips_error_g ( Addressable error) {
        var mh$ = vips_error_g$MH();
        try {
            mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_g_error$MH() {
        return RuntimeHelper.requireNonNull(constants$119.vips_g_error$MH,"vips_g_error");
    }
    public static void vips_g_error ( Addressable error) {
        var mh$ = vips_g_error$MH();
        try {
            mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_error_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$119.vips_error_exit$MH,"vips_error_exit");
    }
    public static void vips_error_exit ( Addressable fmt, Object... x1) {
        var mh$ = vips_error_exit$MH();
        try {
            mh$.invokeExact(fmt, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_uncoded$MH() {
        return RuntimeHelper.requireNonNull(constants$119.vips_check_uncoded$MH,"vips_check_uncoded");
    }
    public static int vips_check_uncoded ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_uncoded$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_coding$MH() {
        return RuntimeHelper.requireNonNull(constants$119.vips_check_coding$MH,"vips_check_coding");
    }
    public static int vips_check_coding ( Addressable domain,  Addressable im,  int coding) {
        var mh$ = vips_check_coding$MH();
        try {
            return (int)mh$.invokeExact(domain, im, coding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_coding_known$MH() {
        return RuntimeHelper.requireNonNull(constants$120.vips_check_coding_known$MH,"vips_check_coding_known");
    }
    public static int vips_check_coding_known ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_coding_known$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_coding_noneorlabq$MH() {
        return RuntimeHelper.requireNonNull(constants$120.vips_check_coding_noneorlabq$MH,"vips_check_coding_noneorlabq");
    }
    public static int vips_check_coding_noneorlabq ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_coding_noneorlabq$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_coding_same$MH() {
        return RuntimeHelper.requireNonNull(constants$120.vips_check_coding_same$MH,"vips_check_coding_same");
    }
    public static int vips_check_coding_same ( Addressable domain,  Addressable im1,  Addressable im2) {
        var mh$ = vips_check_coding_same$MH();
        try {
            return (int)mh$.invokeExact(domain, im1, im2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_mono$MH() {
        return RuntimeHelper.requireNonNull(constants$120.vips_check_mono$MH,"vips_check_mono");
    }
    public static int vips_check_mono ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_mono$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_bands$MH() {
        return RuntimeHelper.requireNonNull(constants$120.vips_check_bands$MH,"vips_check_bands");
    }
    public static int vips_check_bands ( Addressable domain,  Addressable im,  int bands) {
        var mh$ = vips_check_bands$MH();
        try {
            return (int)mh$.invokeExact(domain, im, bands);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_bands_1or3$MH() {
        return RuntimeHelper.requireNonNull(constants$120.vips_check_bands_1or3$MH,"vips_check_bands_1or3");
    }
    public static int vips_check_bands_1or3 ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_bands_1or3$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_bands_atleast$MH() {
        return RuntimeHelper.requireNonNull(constants$121.vips_check_bands_atleast$MH,"vips_check_bands_atleast");
    }
    public static int vips_check_bands_atleast ( Addressable domain,  Addressable im,  int bands) {
        var mh$ = vips_check_bands_atleast$MH();
        try {
            return (int)mh$.invokeExact(domain, im, bands);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_bands_1orn$MH() {
        return RuntimeHelper.requireNonNull(constants$121.vips_check_bands_1orn$MH,"vips_check_bands_1orn");
    }
    public static int vips_check_bands_1orn ( Addressable domain,  Addressable im1,  Addressable im2) {
        var mh$ = vips_check_bands_1orn$MH();
        try {
            return (int)mh$.invokeExact(domain, im1, im2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_bands_1orn_unary$MH() {
        return RuntimeHelper.requireNonNull(constants$121.vips_check_bands_1orn_unary$MH,"vips_check_bands_1orn_unary");
    }
    public static int vips_check_bands_1orn_unary ( Addressable domain,  Addressable im,  int n) {
        var mh$ = vips_check_bands_1orn_unary$MH();
        try {
            return (int)mh$.invokeExact(domain, im, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_bands_same$MH() {
        return RuntimeHelper.requireNonNull(constants$121.vips_check_bands_same$MH,"vips_check_bands_same");
    }
    public static int vips_check_bands_same ( Addressable domain,  Addressable im1,  Addressable im2) {
        var mh$ = vips_check_bands_same$MH();
        try {
            return (int)mh$.invokeExact(domain, im1, im2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_bandno$MH() {
        return RuntimeHelper.requireNonNull(constants$121.vips_check_bandno$MH,"vips_check_bandno");
    }
    public static int vips_check_bandno ( Addressable domain,  Addressable im,  int bandno) {
        var mh$ = vips_check_bandno$MH();
        try {
            return (int)mh$.invokeExact(domain, im, bandno);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_int$MH() {
        return RuntimeHelper.requireNonNull(constants$121.vips_check_int$MH,"vips_check_int");
    }
    public static int vips_check_int ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_int$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$122.vips_check_uint$MH,"vips_check_uint");
    }
    public static int vips_check_uint ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_uint$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_uintorf$MH() {
        return RuntimeHelper.requireNonNull(constants$122.vips_check_uintorf$MH,"vips_check_uintorf");
    }
    public static int vips_check_uintorf ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_uintorf$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_noncomplex$MH() {
        return RuntimeHelper.requireNonNull(constants$122.vips_check_noncomplex$MH,"vips_check_noncomplex");
    }
    public static int vips_check_noncomplex ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_noncomplex$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_complex$MH() {
        return RuntimeHelper.requireNonNull(constants$122.vips_check_complex$MH,"vips_check_complex");
    }
    public static int vips_check_complex ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_complex$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_twocomponents$MH() {
        return RuntimeHelper.requireNonNull(constants$122.vips_check_twocomponents$MH,"vips_check_twocomponents");
    }
    public static int vips_check_twocomponents ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_twocomponents$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_format$MH() {
        return RuntimeHelper.requireNonNull(constants$122.vips_check_format$MH,"vips_check_format");
    }
    public static int vips_check_format ( Addressable domain,  Addressable im,  int fmt) {
        var mh$ = vips_check_format$MH();
        try {
            return (int)mh$.invokeExact(domain, im, fmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_u8or16$MH() {
        return RuntimeHelper.requireNonNull(constants$123.vips_check_u8or16$MH,"vips_check_u8or16");
    }
    public static int vips_check_u8or16 ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_u8or16$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_8or16$MH() {
        return RuntimeHelper.requireNonNull(constants$123.vips_check_8or16$MH,"vips_check_8or16");
    }
    public static int vips_check_8or16 ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_8or16$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_u8or16orf$MH() {
        return RuntimeHelper.requireNonNull(constants$123.vips_check_u8or16orf$MH,"vips_check_u8or16orf");
    }
    public static int vips_check_u8or16orf ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_u8or16orf$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_format_same$MH() {
        return RuntimeHelper.requireNonNull(constants$123.vips_check_format_same$MH,"vips_check_format_same");
    }
    public static int vips_check_format_same ( Addressable domain,  Addressable im1,  Addressable im2) {
        var mh$ = vips_check_format_same$MH();
        try {
            return (int)mh$.invokeExact(domain, im1, im2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_size_same$MH() {
        return RuntimeHelper.requireNonNull(constants$123.vips_check_size_same$MH,"vips_check_size_same");
    }
    public static int vips_check_size_same ( Addressable domain,  Addressable im1,  Addressable im2) {
        var mh$ = vips_check_size_same$MH();
        try {
            return (int)mh$.invokeExact(domain, im1, im2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_oddsquare$MH() {
        return RuntimeHelper.requireNonNull(constants$123.vips_check_oddsquare$MH,"vips_check_oddsquare");
    }
    public static int vips_check_oddsquare ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_oddsquare$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_vector_length$MH() {
        return RuntimeHelper.requireNonNull(constants$124.vips_check_vector_length$MH,"vips_check_vector_length");
    }
    public static int vips_check_vector_length ( Addressable domain,  int n,  int len) {
        var mh$ = vips_check_vector_length$MH();
        try {
            return (int)mh$.invokeExact(domain, n, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_vector$MH() {
        return RuntimeHelper.requireNonNull(constants$124.vips_check_vector$MH,"vips_check_vector");
    }
    public static int vips_check_vector ( Addressable domain,  int n,  Addressable im) {
        var mh$ = vips_check_vector$MH();
        try {
            return (int)mh$.invokeExact(domain, n, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_hist$MH() {
        return RuntimeHelper.requireNonNull(constants$124.vips_check_hist$MH,"vips_check_hist");
    }
    public static int vips_check_hist ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_hist$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$124.vips_check_matrix$MH,"vips_check_matrix");
    }
    public static int vips_check_matrix ( Addressable domain,  Addressable im,  Addressable out) {
        var mh$ = vips_check_matrix$MH();
        try {
            return (int)mh$.invokeExact(domain, im, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_separable$MH() {
        return RuntimeHelper.requireNonNull(constants$124.vips_check_separable$MH,"vips_check_separable");
    }
    public static int vips_check_separable ( Addressable domain,  Addressable im) {
        var mh$ = vips_check_separable$MH();
        try {
            return (int)mh$.invokeExact(domain, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_check_precision_intfloat$MH() {
        return RuntimeHelper.requireNonNull(constants$124.vips_check_precision_intfloat$MH,"vips_check_precision_intfloat");
    }
    public static int vips_check_precision_intfloat ( Addressable domain,  int precision) {
        var mh$ = vips_check_precision_intfloat$MH();
        try {
            return (int)mh$.invokeExact(domain, precision);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_FORMAT_NONE() {
        return (int)0L;
    }
    public static int VIPS_FORMAT_PARTIAL() {
        return (int)1L;
    }
    public static int VIPS_FORMAT_BIGENDIAN() {
        return (int)2L;
    }
    public static MethodHandle vips_format_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$125.vips_format_get_type$MH,"vips_format_get_type");
    }
    public static long vips_format_get_type () {
        var mh$ = vips_format_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_format_map$MH() {
        return RuntimeHelper.requireNonNull(constants$125.vips_format_map$MH,"vips_format_map");
    }
    public static MemoryAddress vips_format_map ( Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_format_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_format_for_file$MH() {
        return RuntimeHelper.requireNonNull(constants$125.vips_format_for_file$MH,"vips_format_for_file");
    }
    public static MemoryAddress vips_format_for_file ( Addressable filename) {
        var mh$ = vips_format_for_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_format_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$125.vips_format_for_name$MH,"vips_format_for_name");
    }
    public static MemoryAddress vips_format_for_name ( Addressable filename) {
        var mh$ = vips_format_for_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_format_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$125.vips_format_get_flags$MH,"vips_format_get_flags");
    }
    public static int vips_format_get_flags ( Addressable format,  Addressable filename) {
        var mh$ = vips_format_get_flags$MH();
        try {
            return (int)mh$.invokeExact(format, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_format_read$MH() {
        return RuntimeHelper.requireNonNull(constants$125.vips_format_read$MH,"vips_format_read");
    }
    public static int vips_format_read ( Addressable filename,  Addressable out) {
        var mh$ = vips_format_read$MH();
        try {
            return (int)mh$.invokeExact(filename, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_format_write$MH() {
        return RuntimeHelper.requireNonNull(constants$126.vips_format_write$MH,"vips_format_write");
    }
    public static int vips_format_write ( Addressable in,  Addressable filename) {
        var mh$ = vips_format_write$MH();
        try {
            return (int)mh$.invokeExact(in, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sink_disc$MH() {
        return RuntimeHelper.requireNonNull(constants$126.vips_sink_disc$MH,"vips_sink_disc");
    }
    public static int vips_sink_disc ( Addressable im,  Addressable write_fn,  Addressable a) {
        var mh$ = vips_sink_disc$MH();
        try {
            return (int)mh$.invokeExact(im, write_fn, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$126.vips_sink$MH,"vips_sink");
    }
    public static int vips_sink ( Addressable im,  Addressable start_fn,  Addressable generate_fn,  Addressable stop_fn,  Addressable a,  Addressable b) {
        var mh$ = vips_sink$MH();
        try {
            return (int)mh$.invokeExact(im, start_fn, generate_fn, stop_fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sink_tile$MH() {
        return RuntimeHelper.requireNonNull(constants$126.vips_sink_tile$MH,"vips_sink_tile");
    }
    public static int vips_sink_tile ( Addressable im,  int tile_width,  int tile_height,  Addressable start_fn,  Addressable generate_fn,  Addressable stop_fn,  Addressable a,  Addressable b) {
        var mh$ = vips_sink_tile$MH();
        try {
            return (int)mh$.invokeExact(im, tile_width, tile_height, start_fn, generate_fn, stop_fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sink_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$127.vips_sink_screen$MH,"vips_sink_screen");
    }
    public static int vips_sink_screen ( Addressable in,  Addressable out,  Addressable mask,  int tile_width,  int tile_height,  int max_tiles,  int priority,  Addressable notify_fn,  Addressable a) {
        var mh$ = vips_sink_screen$MH();
        try {
            return (int)mh$.invokeExact(in, out, mask, tile_width, tile_height, max_tiles, priority, notify_fn, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_sink_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$127.vips_sink_memory$MH,"vips_sink_memory");
    }
    public static int vips_sink_memory ( Addressable im) {
        var mh$ = vips_sink_memory$MH();
        try {
            return (int)mh$.invokeExact(im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_start_one$MH() {
        return RuntimeHelper.requireNonNull(constants$127.vips_start_one$MH,"vips_start_one");
    }
    public static MemoryAddress vips_start_one ( Addressable out,  Addressable a,  Addressable b) {
        var mh$ = vips_start_one$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(out, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_stop_one$MH() {
        return RuntimeHelper.requireNonNull(constants$127.vips_stop_one$MH,"vips_stop_one");
    }
    public static int vips_stop_one ( Addressable seq,  Addressable a,  Addressable b) {
        var mh$ = vips_stop_one$MH();
        try {
            return (int)mh$.invokeExact(seq, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_start_many$MH() {
        return RuntimeHelper.requireNonNull(constants$128.vips_start_many$MH,"vips_start_many");
    }
    public static MemoryAddress vips_start_many ( Addressable out,  Addressable a,  Addressable b) {
        var mh$ = vips_start_many$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(out, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_stop_many$MH() {
        return RuntimeHelper.requireNonNull(constants$128.vips_stop_many$MH,"vips_stop_many");
    }
    public static int vips_stop_many ( Addressable seq,  Addressable a,  Addressable b) {
        var mh$ = vips_stop_many$MH();
        try {
            return (int)mh$.invokeExact(seq, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_allocate_input_array$MH() {
        return RuntimeHelper.requireNonNull(constants$128.vips_allocate_input_array$MH,"vips_allocate_input_array");
    }
    public static MemoryAddress vips_allocate_input_array ( Addressable out, Object... x1) {
        var mh$ = vips_allocate_input_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(out, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_generate$MH() {
        return RuntimeHelper.requireNonNull(constants$128.vips_image_generate$MH,"vips_image_generate");
    }
    public static int vips_image_generate ( Addressable image,  Addressable start_fn,  Addressable generate_fn,  Addressable stop_fn,  Addressable a,  Addressable b) {
        var mh$ = vips_image_generate$MH();
        try {
            return (int)mh$.invokeExact(image, start_fn, generate_fn, stop_fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_pipeline_array$MH() {
        return RuntimeHelper.requireNonNull(constants$128.vips_image_pipeline_array$MH,"vips_image_pipeline_array");
    }
    public static int vips_image_pipeline_array ( Addressable image,  int hint,  Addressable in) {
        var mh$ = vips_image_pipeline_array$MH();
        try {
            return (int)mh$.invokeExact(image, hint, in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_pipelinev$MH() {
        return RuntimeHelper.requireNonNull(constants$128.vips_image_pipelinev$MH,"vips_image_pipelinev");
    }
    public static int vips_image_pipelinev ( Addressable image,  int hint, Object... x2) {
        var mh$ = vips_image_pipelinev$MH();
        try {
            return (int)mh$.invokeExact(image, hint, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interpolate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$129.vips_interpolate_get_type$MH,"vips_interpolate_get_type");
    }
    public static long vips_interpolate_get_type () {
        var mh$ = vips_interpolate_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$129.vips_interpolate$MH,"vips_interpolate");
    }
    public static void vips_interpolate ( Addressable interpolate,  Addressable out,  Addressable in,  double x,  double y) {
        var mh$ = vips_interpolate$MH();
        try {
            mh$.invokeExact(interpolate, out, in, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interpolate_get_method$MH() {
        return RuntimeHelper.requireNonNull(constants$129.vips_interpolate_get_method$MH,"vips_interpolate_get_method");
    }
    public static MemoryAddress vips_interpolate_get_method ( Addressable interpolate) {
        var mh$ = vips_interpolate_get_method$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(interpolate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interpolate_get_window_size$MH() {
        return RuntimeHelper.requireNonNull(constants$129.vips_interpolate_get_window_size$MH,"vips_interpolate_get_window_size");
    }
    public static int vips_interpolate_get_window_size ( Addressable interpolate) {
        var mh$ = vips_interpolate_get_window_size$MH();
        try {
            return (int)mh$.invokeExact(interpolate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interpolate_get_window_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$130.vips_interpolate_get_window_offset$MH,"vips_interpolate_get_window_offset");
    }
    public static int vips_interpolate_get_window_offset ( Addressable interpolate) {
        var mh$ = vips_interpolate_get_window_offset$MH();
        try {
            return (int)mh$.invokeExact(interpolate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interpolate_nearest_static$MH() {
        return RuntimeHelper.requireNonNull(constants$130.vips_interpolate_nearest_static$MH,"vips_interpolate_nearest_static");
    }
    public static MemoryAddress vips_interpolate_nearest_static () {
        var mh$ = vips_interpolate_nearest_static$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interpolate_bilinear_static$MH() {
        return RuntimeHelper.requireNonNull(constants$130.vips_interpolate_bilinear_static$MH,"vips_interpolate_bilinear_static");
    }
    public static MemoryAddress vips_interpolate_bilinear_static () {
        var mh$ = vips_interpolate_bilinear_static$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_interpolate_new$MH() {
        return RuntimeHelper.requireNonNull(constants$130.vips_interpolate_new$MH,"vips_interpolate_new");
    }
    public static MemoryAddress vips_interpolate_new ( Addressable nickname) {
        var mh$ = vips_interpolate_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(nickname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_g_mutex_new$MH() {
        return RuntimeHelper.requireNonNull(constants$130.vips_g_mutex_new$MH,"vips_g_mutex_new");
    }
    public static MemoryAddress vips_g_mutex_new () {
        var mh$ = vips_g_mutex_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_g_mutex_free$MH() {
        return RuntimeHelper.requireNonNull(constants$130.vips_g_mutex_free$MH,"vips_g_mutex_free");
    }
    public static void vips_g_mutex_free ( Addressable x0) {
        var mh$ = vips_g_mutex_free$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_g_cond_new$MH() {
        return RuntimeHelper.requireNonNull(constants$131.vips_g_cond_new$MH,"vips_g_cond_new");
    }
    public static MemoryAddress vips_g_cond_new () {
        var mh$ = vips_g_cond_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_g_cond_free$MH() {
        return RuntimeHelper.requireNonNull(constants$131.vips_g_cond_free$MH,"vips_g_cond_free");
    }
    public static void vips_g_cond_free ( Addressable x0) {
        var mh$ = vips_g_cond_free$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_g_thread_new$MH() {
        return RuntimeHelper.requireNonNull(constants$131.vips_g_thread_new$MH,"vips_g_thread_new");
    }
    public static MemoryAddress vips_g_thread_new ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = vips_g_thread_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thread_isvips$MH() {
        return RuntimeHelper.requireNonNull(constants$131.vips_thread_isvips$MH,"vips_thread_isvips");
    }
    public static int vips_thread_isvips () {
        var mh$ = vips_thread_isvips$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_threadset_new$MH() {
        return RuntimeHelper.requireNonNull(constants$131.vips_threadset_new$MH,"vips_threadset_new");
    }
    public static MemoryAddress vips_threadset_new ( int max_threads) {
        var mh$ = vips_threadset_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(max_threads);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_threadset_run$MH() {
        return RuntimeHelper.requireNonNull(constants$131.vips_threadset_run$MH,"vips_threadset_run");
    }
    public static int vips_threadset_run ( Addressable set,  Addressable domain,  Addressable func,  Addressable data) {
        var mh$ = vips_threadset_run$MH();
        try {
            return (int)mh$.invokeExact(set, domain, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_threadset_free$MH() {
        return RuntimeHelper.requireNonNull(constants$132.vips_threadset_free$MH,"vips_threadset_free");
    }
    public static void vips_threadset_free ( Addressable set) {
        var mh$ = vips_threadset_free$MH();
        try {
            mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_semaphore_up$MH() {
        return RuntimeHelper.requireNonNull(constants$132.vips_semaphore_up$MH,"vips_semaphore_up");
    }
    public static int vips_semaphore_up ( Addressable s) {
        var mh$ = vips_semaphore_up$MH();
        try {
            return (int)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_semaphore_upn$MH() {
        return RuntimeHelper.requireNonNull(constants$132.vips_semaphore_upn$MH,"vips_semaphore_upn");
    }
    public static int vips_semaphore_upn ( Addressable s,  int n) {
        var mh$ = vips_semaphore_upn$MH();
        try {
            return (int)mh$.invokeExact(s, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_semaphore_down$MH() {
        return RuntimeHelper.requireNonNull(constants$132.vips_semaphore_down$MH,"vips_semaphore_down");
    }
    public static int vips_semaphore_down ( Addressable s) {
        var mh$ = vips_semaphore_down$MH();
        try {
            return (int)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_semaphore_downn$MH() {
        return RuntimeHelper.requireNonNull(constants$132.vips_semaphore_downn$MH,"vips_semaphore_downn");
    }
    public static int vips_semaphore_downn ( Addressable s,  int n) {
        var mh$ = vips_semaphore_downn$MH();
        try {
            return (int)mh$.invokeExact(s, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_semaphore_down_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$132.vips_semaphore_down_timeout$MH,"vips_semaphore_down_timeout");
    }
    public static int vips_semaphore_down_timeout ( Addressable s,  long timeout) {
        var mh$ = vips_semaphore_down_timeout$MH();
        try {
            return (int)mh$.invokeExact(s, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_semaphore_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$133.vips_semaphore_destroy$MH,"vips_semaphore_destroy");
    }
    public static void vips_semaphore_destroy ( Addressable s) {
        var mh$ = vips_semaphore_destroy$MH();
        try {
            mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_semaphore_init$MH() {
        return RuntimeHelper.requireNonNull(constants$133.vips_semaphore_init$MH,"vips_semaphore_init");
    }
    public static void vips_semaphore_init ( Addressable s,  int v,  Addressable name) {
        var mh$ = vips_semaphore_init$MH();
        try {
            mh$.invokeExact(s, v, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thread_state_set$MH() {
        return RuntimeHelper.requireNonNull(constants$133.vips_thread_state_set$MH,"vips_thread_state_set");
    }
    public static MemoryAddress vips_thread_state_set ( Addressable object,  Addressable a,  Addressable b) {
        var mh$ = vips_thread_state_set$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thread_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$133.vips_thread_state_get_type$MH,"vips_thread_state_get_type");
    }
    public static long vips_thread_state_get_type () {
        var mh$ = vips_thread_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_thread_state_new$MH() {
        return RuntimeHelper.requireNonNull(constants$133.vips_thread_state_new$MH,"vips_thread_state_new");
    }
    public static MemoryAddress vips_thread_state_new ( Addressable im,  Addressable a) {
        var mh$ = vips_thread_state_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(im, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_threadpool_run$MH() {
        return RuntimeHelper.requireNonNull(constants$135.vips_threadpool_run$MH,"vips_threadpool_run");
    }
    public static int vips_threadpool_run ( Addressable im,  Addressable start,  Addressable allocate,  Addressable work,  Addressable progress,  Addressable a) {
        var mh$ = vips_threadpool_run$MH();
        try {
            return (int)mh$.invokeExact(im, start, allocate, work, progress, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_get_tile_size$MH() {
        return RuntimeHelper.requireNonNull(constants$135.vips_get_tile_size$MH,"vips_get_tile_size");
    }
    public static void vips_get_tile_size ( Addressable im,  Addressable tile_width,  Addressable tile_height,  Addressable n_lines) {
        var mh$ = vips_get_tile_size$MH();
        try {
            mh$.invokeExact(im, tile_width, tile_height, n_lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_format_sizeof$MH() {
        return RuntimeHelper.requireNonNull(constants$135.vips_format_sizeof$MH,"vips_format_sizeof");
    }
    public static long vips_format_sizeof ( int format) {
        var mh$ = vips_format_sizeof$MH();
        try {
            return (long)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_format_sizeof_unsafe$MH() {
        return RuntimeHelper.requireNonNull(constants$135.vips_format_sizeof_unsafe$MH,"vips_format_sizeof_unsafe");
    }
    public static long vips_format_sizeof_unsafe ( int format) {
        var mh$ = vips_format_sizeof_unsafe$MH();
        try {
            return (long)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$135.vips_image_get_width$MH,"vips_image_get_width");
    }
    public static int vips_image_get_width ( Addressable image) {
        var mh$ = vips_image_get_width$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$136.vips_image_get_height$MH,"vips_image_get_height");
    }
    public static int vips_image_get_height ( Addressable image) {
        var mh$ = vips_image_get_height$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_bands$MH() {
        return RuntimeHelper.requireNonNull(constants$136.vips_image_get_bands$MH,"vips_image_get_bands");
    }
    public static int vips_image_get_bands ( Addressable image) {
        var mh$ = vips_image_get_bands$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_format$MH() {
        return RuntimeHelper.requireNonNull(constants$136.vips_image_get_format$MH,"vips_image_get_format");
    }
    public static int vips_image_get_format ( Addressable image) {
        var mh$ = vips_image_get_format$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_format_max$MH() {
        return RuntimeHelper.requireNonNull(constants$136.vips_image_get_format_max$MH,"vips_image_get_format_max");
    }
    public static double vips_image_get_format_max ( int format) {
        var mh$ = vips_image_get_format_max$MH();
        try {
            return (double)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_guess_format$MH() {
        return RuntimeHelper.requireNonNull(constants$136.vips_image_guess_format$MH,"vips_image_guess_format");
    }
    public static int vips_image_guess_format ( Addressable image) {
        var mh$ = vips_image_guess_format$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_coding$MH() {
        return RuntimeHelper.requireNonNull(constants$136.vips_image_get_coding$MH,"vips_image_get_coding");
    }
    public static int vips_image_get_coding ( Addressable image) {
        var mh$ = vips_image_get_coding$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_interpretation$MH() {
        return RuntimeHelper.requireNonNull(constants$137.vips_image_get_interpretation$MH,"vips_image_get_interpretation");
    }
    public static int vips_image_get_interpretation ( Addressable image) {
        var mh$ = vips_image_get_interpretation$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_guess_interpretation$MH() {
        return RuntimeHelper.requireNonNull(constants$137.vips_image_guess_interpretation$MH,"vips_image_guess_interpretation");
    }
    public static int vips_image_guess_interpretation ( Addressable image) {
        var mh$ = vips_image_guess_interpretation$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_xres$MH() {
        return RuntimeHelper.requireNonNull(constants$137.vips_image_get_xres$MH,"vips_image_get_xres");
    }
    public static double vips_image_get_xres ( Addressable image) {
        var mh$ = vips_image_get_xres$MH();
        try {
            return (double)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_yres$MH() {
        return RuntimeHelper.requireNonNull(constants$137.vips_image_get_yres$MH,"vips_image_get_yres");
    }
    public static double vips_image_get_yres ( Addressable image) {
        var mh$ = vips_image_get_yres$MH();
        try {
            return (double)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_xoffset$MH() {
        return RuntimeHelper.requireNonNull(constants$137.vips_image_get_xoffset$MH,"vips_image_get_xoffset");
    }
    public static int vips_image_get_xoffset ( Addressable image) {
        var mh$ = vips_image_get_xoffset$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_yoffset$MH() {
        return RuntimeHelper.requireNonNull(constants$137.vips_image_get_yoffset$MH,"vips_image_get_yoffset");
    }
    public static int vips_image_get_yoffset ( Addressable image) {
        var mh$ = vips_image_get_yoffset$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$138.vips_image_get_filename$MH,"vips_image_get_filename");
    }
    public static MemoryAddress vips_image_get_filename ( Addressable image) {
        var mh$ = vips_image_get_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$138.vips_image_get_mode$MH,"vips_image_get_mode");
    }
    public static MemoryAddress vips_image_get_mode ( Addressable image) {
        var mh$ = vips_image_get_mode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$138.vips_image_get_scale$MH,"vips_image_get_scale");
    }
    public static double vips_image_get_scale ( Addressable image) {
        var mh$ = vips_image_get_scale$MH();
        try {
            return (double)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$138.vips_image_get_offset$MH,"vips_image_get_offset");
    }
    public static double vips_image_get_offset ( Addressable image) {
        var mh$ = vips_image_get_offset$MH();
        try {
            return (double)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_page_height$MH() {
        return RuntimeHelper.requireNonNull(constants$138.vips_image_get_page_height$MH,"vips_image_get_page_height");
    }
    public static int vips_image_get_page_height ( Addressable image) {
        var mh$ = vips_image_get_page_height$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_n_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$138.vips_image_get_n_pages$MH,"vips_image_get_n_pages");
    }
    public static int vips_image_get_n_pages ( Addressable image) {
        var mh$ = vips_image_get_n_pages$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_n_subifds$MH() {
        return RuntimeHelper.requireNonNull(constants$139.vips_image_get_n_subifds$MH,"vips_image_get_n_subifds");
    }
    public static int vips_image_get_n_subifds ( Addressable image) {
        var mh$ = vips_image_get_n_subifds$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$139.vips_image_get_orientation$MH,"vips_image_get_orientation");
    }
    public static int vips_image_get_orientation ( Addressable image) {
        var mh$ = vips_image_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_orientation_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$139.vips_image_get_orientation_swap$MH,"vips_image_get_orientation_swap");
    }
    public static int vips_image_get_orientation_swap ( Addressable image) {
        var mh$ = vips_image_get_orientation_swap$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_concurrency$MH() {
        return RuntimeHelper.requireNonNull(constants$139.vips_image_get_concurrency$MH,"vips_image_get_concurrency");
    }
    public static int vips_image_get_concurrency ( Addressable image,  int default_concurrency) {
        var mh$ = vips_image_get_concurrency$MH();
        try {
            return (int)mh$.invokeExact(image, default_concurrency);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$139.vips_image_get_data$MH,"vips_image_get_data");
    }
    public static MemoryAddress vips_image_get_data ( Addressable image) {
        var mh$ = vips_image_get_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_init_fields$MH() {
        return RuntimeHelper.requireNonNull(constants$139.vips_image_init_fields$MH,"vips_image_init_fields");
    }
    public static void vips_image_init_fields ( Addressable image,  int xsize,  int ysize,  int bands,  int format,  int coding,  int interpretation,  double xres,  double yres) {
        var mh$ = vips_image_init_fields$MH();
        try {
            mh$.invokeExact(image, xsize, ysize, bands, format, coding, interpretation, xres, yres);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set$MH() {
        return RuntimeHelper.requireNonNull(constants$140.vips_image_set$MH,"vips_image_set");
    }
    public static void vips_image_set ( Addressable image,  Addressable name,  Addressable value) {
        var mh$ = vips_image_set$MH();
        try {
            mh$.invokeExact(image, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get$MH() {
        return RuntimeHelper.requireNonNull(constants$140.vips_image_get$MH,"vips_image_get");
    }
    public static int vips_image_get ( Addressable image,  Addressable name,  Addressable value_copy) {
        var mh$ = vips_image_get$MH();
        try {
            return (int)mh$.invokeExact(image, name, value_copy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_as_string$MH() {
        return RuntimeHelper.requireNonNull(constants$140.vips_image_get_as_string$MH,"vips_image_get_as_string");
    }
    public static int vips_image_get_as_string ( Addressable image,  Addressable name,  Addressable out) {
        var mh$ = vips_image_get_as_string$MH();
        try {
            return (int)mh$.invokeExact(image, name, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_typeof$MH() {
        return RuntimeHelper.requireNonNull(constants$140.vips_image_get_typeof$MH,"vips_image_get_typeof");
    }
    public static long vips_image_get_typeof ( Addressable image,  Addressable name) {
        var mh$ = vips_image_get_typeof$MH();
        try {
            return (long)mh$.invokeExact(image, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$140.vips_image_remove$MH,"vips_image_remove");
    }
    public static int vips_image_remove ( Addressable image,  Addressable name) {
        var mh$ = vips_image_remove$MH();
        try {
            return (int)mh$.invokeExact(image, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_map$MH() {
        return RuntimeHelper.requireNonNull(constants$141.vips_image_map$MH,"vips_image_map");
    }
    public static MemoryAddress vips_image_map ( Addressable image,  Addressable fn,  Addressable a) {
        var mh$ = vips_image_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image, fn, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_fields$MH() {
        return RuntimeHelper.requireNonNull(constants$141.vips_image_get_fields$MH,"vips_image_get_fields");
    }
    public static MemoryAddress vips_image_get_fields ( Addressable image) {
        var mh$ = vips_image_get_fields$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_area$MH() {
        return RuntimeHelper.requireNonNull(constants$141.vips_image_set_area$MH,"vips_image_set_area");
    }
    public static void vips_image_set_area ( Addressable image,  Addressable name,  Addressable free_fn,  Addressable data) {
        var mh$ = vips_image_set_area$MH();
        try {
            mh$.invokeExact(image, name, free_fn, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$141.vips_image_get_area$MH,"vips_image_get_area");
    }
    public static int vips_image_get_area ( Addressable image,  Addressable name,  Addressable data) {
        var mh$ = vips_image_get_area$MH();
        try {
            return (int)mh$.invokeExact(image, name, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$141.vips_image_set_blob$MH,"vips_image_set_blob");
    }
    public static void vips_image_set_blob ( Addressable image,  Addressable name,  Addressable free_fn,  Addressable data,  long length) {
        var mh$ = vips_image_set_blob$MH();
        try {
            mh$.invokeExact(image, name, free_fn, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_blob_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$142.vips_image_set_blob_copy$MH,"vips_image_set_blob_copy");
    }
    public static void vips_image_set_blob_copy ( Addressable image,  Addressable name,  Addressable data,  long length) {
        var mh$ = vips_image_set_blob_copy$MH();
        try {
            mh$.invokeExact(image, name, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$142.vips_image_get_blob$MH,"vips_image_get_blob");
    }
    public static int vips_image_get_blob ( Addressable image,  Addressable name,  Addressable data,  Addressable length) {
        var mh$ = vips_image_get_blob$MH();
        try {
            return (int)mh$.invokeExact(image, name, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_int$MH() {
        return RuntimeHelper.requireNonNull(constants$142.vips_image_get_int$MH,"vips_image_get_int");
    }
    public static int vips_image_get_int ( Addressable image,  Addressable name,  Addressable out) {
        var mh$ = vips_image_get_int$MH();
        try {
            return (int)mh$.invokeExact(image, name, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$142.vips_image_set_int$MH,"vips_image_set_int");
    }
    public static void vips_image_set_int ( Addressable image,  Addressable name,  int i) {
        var mh$ = vips_image_set_int$MH();
        try {
            mh$.invokeExact(image, name, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$142.vips_image_get_double$MH,"vips_image_get_double");
    }
    public static int vips_image_get_double ( Addressable image,  Addressable name,  Addressable out) {
        var mh$ = vips_image_get_double$MH();
        try {
            return (int)mh$.invokeExact(image, name, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$142.vips_image_set_double$MH,"vips_image_set_double");
    }
    public static void vips_image_set_double ( Addressable image,  Addressable name,  double d) {
        var mh$ = vips_image_set_double$MH();
        try {
            mh$.invokeExact(image, name, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$143.vips_image_get_string$MH,"vips_image_get_string");
    }
    public static int vips_image_get_string ( Addressable image,  Addressable name,  Addressable out) {
        var mh$ = vips_image_get_string$MH();
        try {
            return (int)mh$.invokeExact(image, name, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_string$MH() {
        return RuntimeHelper.requireNonNull(constants$143.vips_image_set_string$MH,"vips_image_set_string");
    }
    public static void vips_image_set_string ( Addressable image,  Addressable name,  Addressable str) {
        var mh$ = vips_image_set_string$MH();
        try {
            mh$.invokeExact(image, name, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_print_field$MH() {
        return RuntimeHelper.requireNonNull(constants$143.vips_image_print_field$MH,"vips_image_print_field");
    }
    public static void vips_image_print_field ( Addressable image,  Addressable name) {
        var mh$ = vips_image_print_field$MH();
        try {
            mh$.invokeExact(image, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_image$MH() {
        return RuntimeHelper.requireNonNull(constants$143.vips_image_get_image$MH,"vips_image_get_image");
    }
    public static int vips_image_get_image ( Addressable image,  Addressable name,  Addressable out) {
        var mh$ = vips_image_get_image$MH();
        try {
            return (int)mh$.invokeExact(image, name, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_image$MH() {
        return RuntimeHelper.requireNonNull(constants$143.vips_image_set_image$MH,"vips_image_set_image");
    }
    public static void vips_image_set_image ( Addressable image,  Addressable name,  Addressable im) {
        var mh$ = vips_image_set_image$MH();
        try {
            mh$.invokeExact(image, name, im);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_array_int$MH() {
        return RuntimeHelper.requireNonNull(constants$143.vips_image_set_array_int$MH,"vips_image_set_array_int");
    }
    public static void vips_image_set_array_int ( Addressable image,  Addressable name,  Addressable array,  int n) {
        var mh$ = vips_image_set_array_int$MH();
        try {
            mh$.invokeExact(image, name, array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_array_int$MH() {
        return RuntimeHelper.requireNonNull(constants$144.vips_image_get_array_int$MH,"vips_image_get_array_int");
    }
    public static int vips_image_get_array_int ( Addressable image,  Addressable name,  Addressable out,  Addressable n) {
        var mh$ = vips_image_get_array_int$MH();
        try {
            return (int)mh$.invokeExact(image, name, out, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_array_double$MH() {
        return RuntimeHelper.requireNonNull(constants$144.vips_image_get_array_double$MH,"vips_image_get_array_double");
    }
    public static int vips_image_get_array_double ( Addressable image,  Addressable name,  Addressable out,  Addressable n) {
        var mh$ = vips_image_get_array_double$MH();
        try {
            return (int)mh$.invokeExact(image, name, out, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_set_array_double$MH() {
        return RuntimeHelper.requireNonNull(constants$144.vips_image_set_array_double$MH,"vips_image_set_array_double");
    }
    public static void vips_image_set_array_double ( Addressable image,  Addressable name,  Addressable array,  int n) {
        var mh$ = vips_image_set_array_double$MH();
        try {
            mh$.invokeExact(image, name, array, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_history_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$144.vips_image_history_printf$MH,"vips_image_history_printf");
    }
    public static int vips_image_history_printf ( Addressable image,  Addressable format, Object... x2) {
        var mh$ = vips_image_history_printf$MH();
        try {
            return (int)mh$.invokeExact(image, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_history_args$MH() {
        return RuntimeHelper.requireNonNull(constants$144.vips_image_history_args$MH,"vips_image_history_args");
    }
    public static int vips_image_history_args ( Addressable image,  Addressable name,  int argc,  Addressable argv) {
        var mh$ = vips_image_history_args$MH();
        try {
            return (int)mh$.invokeExact(image, name, argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_image_get_history$MH() {
        return RuntimeHelper.requireNonNull(constants$144.vips_image_get_history$MH,"vips_image_get_history");
    }
    public static MemoryAddress vips_image_get_history ( Addressable image) {
        var mh$ = vips_image_get_history$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_OPERATION_NONE() {
        return (int)0L;
    }
    public static int VIPS_OPERATION_SEQUENTIAL() {
        return (int)1L;
    }
    public static int VIPS_OPERATION_SEQUENTIAL_UNBUFFERED() {
        return (int)2L;
    }
    public static int VIPS_OPERATION_NOCACHE() {
        return (int)4L;
    }
    public static int VIPS_OPERATION_DEPRECATED() {
        return (int)8L;
    }
    public static int VIPS_OPERATION_UNTRUSTED() {
        return (int)16L;
    }
    public static int VIPS_OPERATION_BLOCKED() {
        return (int)32L;
    }
    public static MethodHandle vips_operation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$145.vips_operation_get_type$MH,"vips_operation_get_type");
    }
    public static long vips_operation_get_type () {
        var mh$ = vips_operation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$145.vips_operation_get_flags$MH,"vips_operation_get_flags");
    }
    public static int vips_operation_get_flags ( Addressable operation) {
        var mh$ = vips_operation_get_flags$MH();
        try {
            return (int)mh$.invokeExact(operation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_class_print_usage$MH() {
        return RuntimeHelper.requireNonNull(constants$145.vips_operation_class_print_usage$MH,"vips_operation_class_print_usage");
    }
    public static void vips_operation_class_print_usage ( Addressable operation_class) {
        var mh$ = vips_operation_class_print_usage$MH();
        try {
            mh$.invokeExact(operation_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$145.vips_operation_invalidate$MH,"vips_operation_invalidate");
    }
    public static void vips_operation_invalidate ( Addressable operation) {
        var mh$ = vips_operation_invalidate$MH();
        try {
            mh$.invokeExact(operation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_call_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$146.vips_operation_call_valist$MH,"vips_operation_call_valist");
    }
    public static int vips_operation_call_valist ( Addressable operation,  Addressable ap) {
        var mh$ = vips_operation_call_valist$MH();
        try {
            return (int)mh$.invokeExact(operation, ap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$146.vips_operation_new$MH,"vips_operation_new");
    }
    public static MemoryAddress vips_operation_new ( Addressable name) {
        var mh$ = vips_operation_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_call_required_optional$MH() {
        return RuntimeHelper.requireNonNull(constants$146.vips_call_required_optional$MH,"vips_call_required_optional");
    }
    public static int vips_call_required_optional ( Addressable operation,  Addressable required,  Addressable optional) {
        var mh$ = vips_call_required_optional$MH();
        try {
            return (int)mh$.invokeExact(operation, required, optional);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_call$MH() {
        return RuntimeHelper.requireNonNull(constants$146.vips_call$MH,"vips_call");
    }
    public static int vips_call ( Addressable operation_name, Object... x1) {
        var mh$ = vips_call$MH();
        try {
            return (int)mh$.invokeExact(operation_name, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_call_split$MH() {
        return RuntimeHelper.requireNonNull(constants$146.vips_call_split$MH,"vips_call_split");
    }
    public static int vips_call_split ( Addressable operation_name,  Addressable optional, Object... x2) {
        var mh$ = vips_call_split$MH();
        try {
            return (int)mh$.invokeExact(operation_name, optional, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_call_split_option_string$MH() {
        return RuntimeHelper.requireNonNull(constants$146.vips_call_split_option_string$MH,"vips_call_split_option_string");
    }
    public static int vips_call_split_option_string ( Addressable operation_name,  Addressable option_string,  Addressable optional, Object... x3) {
        var mh$ = vips_call_split_option_string$MH();
        try {
            return (int)mh$.invokeExact(operation_name, option_string, optional, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_call_options$MH() {
        return RuntimeHelper.requireNonNull(constants$147.vips_call_options$MH,"vips_call_options");
    }
    public static void vips_call_options ( Addressable group,  Addressable operation) {
        var mh$ = vips_call_options$MH();
        try {
            mh$.invokeExact(group, operation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_call_argv$MH() {
        return RuntimeHelper.requireNonNull(constants$147.vips_call_argv$MH,"vips_call_argv");
    }
    public static int vips_call_argv ( Addressable operation,  int argc,  Addressable argv) {
        var mh$ = vips_call_argv$MH();
        try {
            return (int)mh$.invokeExact(operation, argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_drop_all$MH() {
        return RuntimeHelper.requireNonNull(constants$147.vips_cache_drop_all$MH,"vips_cache_drop_all");
    }
    public static void vips_cache_drop_all () {
        var mh$ = vips_cache_drop_all$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_operation_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$147.vips_cache_operation_lookup$MH,"vips_cache_operation_lookup");
    }
    public static MemoryAddress vips_cache_operation_lookup ( Addressable operation) {
        var mh$ = vips_cache_operation_lookup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(operation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_operation_add$MH() {
        return RuntimeHelper.requireNonNull(constants$147.vips_cache_operation_add$MH,"vips_cache_operation_add");
    }
    public static void vips_cache_operation_add ( Addressable operation) {
        var mh$ = vips_cache_operation_add$MH();
        try {
            mh$.invokeExact(operation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_operation_buildp$MH() {
        return RuntimeHelper.requireNonNull(constants$147.vips_cache_operation_buildp$MH,"vips_cache_operation_buildp");
    }
    public static int vips_cache_operation_buildp ( Addressable operation) {
        var mh$ = vips_cache_operation_buildp$MH();
        try {
            return (int)mh$.invokeExact(operation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_operation_build$MH() {
        return RuntimeHelper.requireNonNull(constants$148.vips_cache_operation_build$MH,"vips_cache_operation_build");
    }
    public static MemoryAddress vips_cache_operation_build ( Addressable operation) {
        var mh$ = vips_cache_operation_build$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(operation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_print$MH() {
        return RuntimeHelper.requireNonNull(constants$148.vips_cache_print$MH,"vips_cache_print");
    }
    public static void vips_cache_print () {
        var mh$ = vips_cache_print$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_set_max$MH() {
        return RuntimeHelper.requireNonNull(constants$148.vips_cache_set_max$MH,"vips_cache_set_max");
    }
    public static void vips_cache_set_max ( int max) {
        var mh$ = vips_cache_set_max$MH();
        try {
            mh$.invokeExact(max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_set_max_mem$MH() {
        return RuntimeHelper.requireNonNull(constants$148.vips_cache_set_max_mem$MH,"vips_cache_set_max_mem");
    }
    public static void vips_cache_set_max_mem ( long max_mem) {
        var mh$ = vips_cache_set_max_mem$MH();
        try {
            mh$.invokeExact(max_mem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_get_max$MH() {
        return RuntimeHelper.requireNonNull(constants$148.vips_cache_get_max$MH,"vips_cache_get_max");
    }
    public static int vips_cache_get_max () {
        var mh$ = vips_cache_get_max$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$148.vips_cache_get_size$MH,"vips_cache_get_size");
    }
    public static int vips_cache_get_size () {
        var mh$ = vips_cache_get_size$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_get_max_mem$MH() {
        return RuntimeHelper.requireNonNull(constants$149.vips_cache_get_max_mem$MH,"vips_cache_get_max_mem");
    }
    public static long vips_cache_get_max_mem () {
        var mh$ = vips_cache_get_max_mem$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_get_max_files$MH() {
        return RuntimeHelper.requireNonNull(constants$149.vips_cache_get_max_files$MH,"vips_cache_get_max_files");
    }
    public static int vips_cache_get_max_files () {
        var mh$ = vips_cache_get_max_files$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_set_max_files$MH() {
        return RuntimeHelper.requireNonNull(constants$149.vips_cache_set_max_files$MH,"vips_cache_set_max_files");
    }
    public static void vips_cache_set_max_files ( int max_files) {
        var mh$ = vips_cache_set_max_files$MH();
        try {
            mh$.invokeExact(max_files);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_set_dump$MH() {
        return RuntimeHelper.requireNonNull(constants$149.vips_cache_set_dump$MH,"vips_cache_set_dump");
    }
    public static void vips_cache_set_dump ( int dump) {
        var mh$ = vips_cache_set_dump$MH();
        try {
            mh$.invokeExact(dump);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_cache_set_trace$MH() {
        return RuntimeHelper.requireNonNull(constants$149.vips_cache_set_trace$MH,"vips_cache_set_trace");
    }
    public static void vips_cache_set_trace ( int trace) {
        var mh$ = vips_cache_set_trace$MH();
        try {
            mh$.invokeExact(trace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_concurrency_set$MH() {
        return RuntimeHelper.requireNonNull(constants$149.vips_concurrency_set$MH,"vips_concurrency_set");
    }
    public static void vips_concurrency_set ( int concurrency) {
        var mh$ = vips_concurrency_set$MH();
        try {
            mh$.invokeExact(concurrency);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_concurrency_get$MH() {
        return RuntimeHelper.requireNonNull(constants$150.vips_concurrency_get$MH,"vips_concurrency_get");
    }
    public static int vips_concurrency_get () {
        var mh$ = vips_concurrency_get$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_operation_block_set$MH() {
        return RuntimeHelper.requireNonNull(constants$150.vips_operation_block_set$MH,"vips_operation_block_set");
    }
    public static void vips_operation_block_set ( Addressable name,  int state) {
        var mh$ = vips_operation_block_set$MH();
        try {
            mh$.invokeExact(name, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$150.vips_foreign_get_type$MH,"vips_foreign_get_type");
    }
    public static long vips_foreign_get_type () {
        var mh$ = vips_foreign_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_map$MH() {
        return RuntimeHelper.requireNonNull(constants$150.vips_foreign_map$MH,"vips_foreign_map");
    }
    public static MemoryAddress vips_foreign_map ( Addressable base,  Addressable fn,  Addressable a,  Addressable b) {
        var mh$ = vips_foreign_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(base, fn, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int VIPS_FOREIGN_NONE() {
        return (int)0L;
    }
    public static int VIPS_FOREIGN_PARTIAL() {
        return (int)1L;
    }
    public static int VIPS_FOREIGN_BIGENDIAN() {
        return (int)2L;
    }
    public static int VIPS_FOREIGN_SEQUENTIAL() {
        return (int)4L;
    }
    public static int VIPS_FOREIGN_ALL() {
        return (int)7L;
    }
    public static int VIPS_FAIL_ON_NONE() {
        return (int)0L;
    }
    public static int VIPS_FAIL_ON_TRUNCATED() {
        return (int)1L;
    }
    public static int VIPS_FAIL_ON_ERROR() {
        return (int)2L;
    }
    public static int VIPS_FAIL_ON_WARNING() {
        return (int)3L;
    }
    public static int VIPS_FAIL_ON_LAST() {
        return (int)4L;
    }
    public static MethodHandle vips_foreign_load_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$150.vips_foreign_load_get_type$MH,"vips_foreign_load_get_type");
    }
    public static long vips_foreign_load_get_type () {
        var mh$ = vips_foreign_load_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_find_load$MH() {
        return RuntimeHelper.requireNonNull(constants$150.vips_foreign_find_load$MH,"vips_foreign_find_load");
    }
    public static MemoryAddress vips_foreign_find_load ( Addressable filename) {
        var mh$ = vips_foreign_find_load$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_find_load_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$151.vips_foreign_find_load_buffer$MH,"vips_foreign_find_load_buffer");
    }
    public static MemoryAddress vips_foreign_find_load_buffer ( Addressable data,  long size) {
        var mh$ = vips_foreign_find_load_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_find_load_source$MH() {
        return RuntimeHelper.requireNonNull(constants$151.vips_foreign_find_load_source$MH,"vips_foreign_find_load_source");
    }
    public static MemoryAddress vips_foreign_find_load_source ( Addressable source) {
        var mh$ = vips_foreign_find_load_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$151.vips_foreign_flags$MH,"vips_foreign_flags");
    }
    public static int vips_foreign_flags ( Addressable loader,  Addressable filename) {
        var mh$ = vips_foreign_flags$MH();
        try {
            return (int)mh$.invokeExact(loader, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$151.vips_foreign_is_a$MH,"vips_foreign_is_a");
    }
    public static int vips_foreign_is_a ( Addressable loader,  Addressable filename) {
        var mh$ = vips_foreign_is_a$MH();
        try {
            return (int)mh$.invokeExact(loader, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_is_a_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$151.vips_foreign_is_a_buffer$MH,"vips_foreign_is_a_buffer");
    }
    public static int vips_foreign_is_a_buffer ( Addressable loader,  Addressable data,  long size) {
        var mh$ = vips_foreign_is_a_buffer$MH();
        try {
            return (int)mh$.invokeExact(loader, data, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vips_foreign_is_a_source$MH() {
        return RuntimeHelper.requireNonNull(constants$151.vips_foreign_is_a_source$MH,"vips_foreign_is_a_source");
    }
    public static int vips_foreign_is_a_source ( Addressable loader,  Addressable source) {
        var mh$ = vips_foreign_is_a_source$MH();
        try {
            return (int)mh$.invokeExact(loader, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


